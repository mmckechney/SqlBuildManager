//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SqlSync.SqlBuild.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SqlSync.SqlBuild.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to IF NOT EXISTS (SELECT 1 FROM sys.objects WHERE name = &apos;SqlBuild_Logging&apos; AND type = &apos;U&apos;)
        ///	BEGIN
        ///
        ///		CREATE TABLE SqlBuild_Logging
        ///		(
        ///			[BuildFileName] varchar(300) NOT NULL,
        ///			[ScriptFileName] varchar(300) NOT NULL,
        ///			[ScriptId] uniqueidentifier,
        ///			[ScriptFileHash] varchar(100),
        ///			[CommitDate] datetime NOT NULL,
        ///			[Sequence] int,
        ///			[UserId]	varchar(50),
        ///			[AllowScriptBlock] bit CONSTRAINT DF_SqlBuildLogging_AllowScriptBlock DEFAULT (1) ,
        ///			[AllowBlockUpdateId] varchar(50)
        ///		)
        ///	
        ///		CR [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoggingTable {
            get {
                return ResourceManager.GetString("LoggingTable", resourceCulture);
            }
        }

        internal static string DacpacExclusion
        {
            get
            {
                return ResourceManager.GetString("DacpacExclusion", resourceCulture);
            }
        }

        /// <summary>
        ///   Looks up a localized string similar to --Add extra index to improve hash check performance
        ///IF NOT  EXISTS (SELECT 1 FROM sysindexes WHERE name = &apos;IX_SqlBuild_Logging_CommitCheck&apos;  AND OBJECT_NAME(id) = N&apos;SqlBuild_Logging&apos;)
        ///	BEGIN
        ///		 CREATE NONCLUSTERED INDEX [IX_SqlBuild_Logging_CommitCheck] ON [dbo].[SqlBuild_Logging] 
        ///		(
        ///			[ScriptId] ASC,
        ///			[CommitDate] DESC
        ///		)
        ///		INCLUDE ( [ScriptFileHash],	[AllowScriptBlock]) 
        ///		WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF) ON [PRIMARY]
        ///		PRINT &apos;Added [IX_S [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string LoggingTableCommitCheckIndex {
            get {
                return ResourceManager.GetString("LoggingTableCommitCheckIndex", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO SqlBuild_Logging([BuildFileName],[ScriptFileName],[ScriptId],[ScriptFileHash],[CommitDate],[Sequence],[UserId],[AllowScriptBlock],[ScriptText],[Tag],[TargetDatabase],[RunWithVersion],[BuildProjectHash],[BuildRequestedBy],[ScriptRunStart],[ScriptRunEnd],[Description])
        ///VALUES(@BuildFileName,@ScriptFileName,@ScriptId,@ScriptFileHash,@CommitDate,@Sequence, @UserId, 1,@ScriptText,@Tag,@TargetDatabase,@RunWithVersion,@BuildProjectHash,@BuildRequestedBy, @ScriptRunStart, @ScriptRunEnd, @Description).
        /// </summary>
        internal static string LogScript {
            get {
                return ResourceManager.GetString("LogScript", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot; &gt;
        ///	&lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; /&gt;
        ///	&lt;xsl:template match=&quot;/ArrayOfQueryResultData&quot;&gt;
        ///		&lt;html&gt;
        ///			&lt;head&gt;
        ///				&lt;style&gt;
        ///					body {font-family:Calibri;}
        ///					tr.alt #script {background-color:#ffffdd;}
        ///					.header {background-color:#F1EFE2;}
        ///					#badStatus { color: red }
        ///					tr.alt #badStatus { [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string QueryResult_html {
            get {
                return ResourceManager.GetString("QueryResult_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ^ *GO *.
        /// </summary>
        internal static string RegexBatchParsingDelimiter {
            get {
                return ResourceManager.GetString("RegexBatchParsingDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \bCOMMIT\b.
        /// </summary>
        internal static string RegexCommit {
            get {
                return ResourceManager.GetString("RegexCommit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (\r\n)|(\n)|(\r).
        /// </summary>
        internal static string RegexEndOfLine {
            get {
                return ResourceManager.GetString("RegexEndOfLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \S.
        /// </summary>
        internal static string RegexNonWhiteSpace {
            get {
                return ResourceManager.GetString("RegexNonWhiteSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (\bBEGIN TRAN\b)|(\bROLLBACK TRAN\b)|(\bCOMMIT TRAN\b).
        /// </summary>
        internal static string RegexTran {
            get {
                return ResourceManager.GetString("RegexTran", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (\bBEGIN TRANSACTION\b)|(\bROLLBACK TRANSACTION\b)|(\bCOMMIT TRANSACTION\b).
        /// </summary>
        internal static string RegexTransaction {
            get {
                return ResourceManager.GetString("RegexTransaction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to \bSET TRANSACTION ISOLATION LEVEL SERIALIZABLE\b.
        /// </summary>
        internal static string RegexTransactionLevel {
            get {
                return ResourceManager.GetString("RegexTransactionLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ^ *\buse\b +\S+ *.
        /// </summary>
        internal static string RegexUseStatement {
            get {
                return ResourceManager.GetString("RegexUseStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot; &gt;
        ///	&lt;xsl:output method=&quot;text&quot; indent=&quot;yes&quot; /&gt;
        ///	&lt;xsl:template match=&quot;/ServerStatusDataCollection&quot;&gt;
        ///Server,Database,&lt;xsl:for-each select=&quot;Servers/Server[1]/Databases[1]/Database[1]/ArrayOfScriptStatusData[1]&quot;&gt;
        ///			&lt;xsl:if test=&quot;position()=1&quot;&gt;
        ///				&lt;xsl:for-each select=&quot;ScriptStatusData&quot;&gt;
        ///					&lt;xsl:value-of se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServerReport_csv {
            get {
                return ResourceManager.GetString("ServerReport_csv", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot; &gt;
        ///	&lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; /&gt;
        ///	&lt;xsl:template match=&quot;/ServerStatusDataCollection&quot;&gt;
        ///		&lt;html&gt;
        ///			&lt;head&gt;
        ///				&lt;style&gt;
        ///					body {font-family:Calibri;}
        ///					tr.alt #script {background-color:#ffffdd;}
        ///					.header {background-color:#F1EFE2;}
        ///					#badStatus { color: red }
        ///					tr.alt #badStat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServerReport_html {
            get {
                return ResourceManager.GetString("ServerReport_html", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
        ///&lt;xsl:stylesheet version=&quot;1.0&quot; xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
        ///    xmlns:msxsl=&quot;urn:schemas-microsoft-com:xslt&quot; exclude-result-prefixes=&quot;msxsl&quot; &gt;
        ///	&lt;xsl:output method=&quot;html&quot; indent=&quot;yes&quot; /&gt;
        ///	&lt;xsl:template match=&quot;/ServerStatusDataCollection&quot;&gt;
        ///		&lt;html&gt;
        ///			&lt;head&gt;
        ///				&lt;style&gt;
        ///					body {font-family:Calibri;}
        ///					tr.alt #script {background-color:#ffffdd;}
        ///					.header {background-color:#F1EFE2;}
        ///					#badStatus { color: red }
        ///					tr.alt #badStat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ServerReport_summary {
            get {
                return ResourceManager.GetString("ServerReport_summary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to INSERT INTO dbo.Versions (VersionNumber) VALUES (&apos;{{BuildRevision}}&apos;).
        /// </summary>
        internal static string VersionsInsert {
            get {
                return ResourceManager.GetString("VersionsInsert", resourceCulture);
            }
        }
    }
}
