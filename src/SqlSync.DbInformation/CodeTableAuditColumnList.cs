// ------------------------------------------------------------------------------
// <autogenerated>
//      This code was generated by a the SimpleDataClassGenerator tool.
//      (SimpleDataClassVSGenerator.dll  -- Michael McKechney, author)
// 		<Version> 3.4.1.16443 </Version>
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
// <autogenerated>
// ------------------------------------------------------------------------------
namespace SqlSync.DbInformation {
    using System;
    
    
    [Serializable()]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DesignerCategory("Component")]
    [System.ComponentModel.DesignTimeVisible(true)]
    public class CodeTableAuditColumnList {
        
        private System.Collections.Generic.List<string> _UpdateDateColumns = new System.Collections.Generic.List<string>();
        
        private System.Collections.Generic.List<string> _UpdateIdColumns = new System.Collections.Generic.List<string>();
        
        private System.Collections.Generic.List<string> _CreateDateColumns = new System.Collections.Generic.List<string>();
        
        private System.Collections.Generic.List<string> _CreateIdColumns = new System.Collections.Generic.List<string>();
        
        private System.Collections.Hashtable _validationDict;
        
        public CodeTableAuditColumnList() {
            this._validationDict = new System.Collections.Hashtable();
            this._validationDict.Add("UpdateDateColumns", false);
            this._validationDict.Add("UpdateIdColumns", false);
            this._validationDict.Add("CreateDateColumns", false);
            this._validationDict.Add("CreateIdColumns", false);
        }
        
        public virtual bool IsValid {
            get {
                if ((this.Validate() == null)) {
                    return true;
                }
                else {
                    return false;
                }
            }
        }
        
        public virtual System.Collections.Generic.List<string> UpdateDateColumns {
            get {
                return this._UpdateDateColumns;
            }
            set {
                this._UpdateDateColumns = value;
                this._validationDict["UpdateDateColumns"] = true;
            }
        }
        
        public virtual System.Collections.Generic.List<string> UpdateIdColumns {
            get {
                return this._UpdateIdColumns;
            }
            set {
                this._UpdateIdColumns = value;
                this._validationDict["UpdateIdColumns"] = true;
            }
        }
        
        public virtual System.Collections.Generic.List<string> CreateDateColumns {
            get {
                return this._CreateDateColumns;
            }
            set {
                this._CreateDateColumns = value;
                this._validationDict["CreateDateColumns"] = true;
            }
        }
        
        public virtual System.Collections.Generic.List<string> CreateIdColumns {
            get {
                return this._CreateIdColumns;
            }
            set {
                this._CreateIdColumns = value;
                this._validationDict["CreateIdColumns"] = true;
            }
        }
        
        public virtual string StrUpdateDateColumns {
            get {
                return this._UpdateDateColumns.ToString();
            }
        }
        
        public virtual string StrUpdateIdColumns {
            get {
                return this._UpdateIdColumns.ToString();
            }
        }
        
        public virtual string StrCreateDateColumns {
            get {
                return this._CreateDateColumns.ToString();
            }
        }
        
        public virtual string StrCreateIdColumns {
            get {
                return this._CreateIdColumns.ToString();
            }
        }
        
        public virtual string GetCustomDelimitedString(string delimiter) {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            try {
                sb.Append(this.StrUpdateDateColumns);
                sb.Append(delimiter);
                sb.Append(this.StrUpdateIdColumns);
                sb.Append(delimiter);
                sb.Append(this.StrCreateDateColumns);
                sb.Append(delimiter);
                sb.Append(this.StrCreateIdColumns);
                return sb.ToString();
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.GetCustomDelimitedString(string) Method", ex);
            }
        }
        
        public virtual bool Fill(CodeTableAuditColumnList dataClass) {
            try {
                this.UpdateDateColumns = dataClass.UpdateDateColumns;
                this.UpdateIdColumns = dataClass.UpdateIdColumns;
                this.CreateDateColumns = dataClass.CreateDateColumns;
                this.CreateIdColumns = dataClass.CreateIdColumns;
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(CodeTableAuditColumnList) Method", ex);
            }
        }
        
        public virtual bool Fill(System.Data.SqlClient.SqlDataReader reader, bool closeReader) {
            try {
                if ((reader.Read() == false)) {
                    reader.Close();
                    return false;
                }
                else {
                    return true;
                }
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(SqlDataReader) Method", ex);
            }
            finally {
                if ((closeReader == true)) {
                    reader.Close();
                }
            }
        }
        
        public virtual bool Fill(System.Data.DataRow sourceDataRow) {
            try {
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(System.Data.DataRow sourceDataRow) Method", ex);
            }
        }
        
        public virtual bool Fill(System.Collections.Specialized.NameValueCollection nameValueColl) {
            try {
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(NameValueCollection) Method", ex);
            }
        }
        
        public virtual bool Fill(System.Array sourceArray) {
            try {
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(System.Array) Method", ex);
            }
        }
        
        public virtual bool Fill(string delimString, char delimiter) {
            string[] arrSplitString;
            arrSplitString = delimString.Split(delimiter);
            try {
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(string,char) Method", ex);
            }
        }
        
        public virtual bool Fill(string fixedString) {
            try {
                return true;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.Fill(string) Method", ex);
            }
        }
        
        public virtual string GetDelimitedString(string delimiter) {
            System.Text.StringBuilder sb = new System.Text.StringBuilder();
            try {
                sb.Append(this.UpdateDateColumns.ToString());
                sb.Append(delimiter);
                sb.Append(this.UpdateIdColumns.ToString());
                sb.Append(delimiter);
                sb.Append(this.CreateDateColumns.ToString());
                sb.Append(delimiter);
                sb.Append(this.CreateIdColumns.ToString());
                return sb.ToString();
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.GetDelimitedString(string) Method", ex);
            }
        }
        
        public virtual string[] GetStringArray() {
            string[] myArray = new string[4];
            try {
                myArray[0] = this._UpdateDateColumns.ToString();
                myArray[1] = this._UpdateIdColumns.ToString();
                myArray[2] = this._CreateDateColumns.ToString();
                myArray[3] = this._CreateIdColumns.ToString();
                return myArray;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.GetStringArray() Method", ex);
            }
        }
        
        public virtual string GetFixedLengthString() {
            throw new System.NotImplementedException("GetFixedLengthString() method had not been implemented. No properties have a subS" +
                    "tringLength value set");
        }
        
        public virtual System.Collections.Specialized.NameValueCollection GetNameValueCollection() {
            System.Collections.Specialized.NameValueCollection nameValueColl = new System.Collections.Specialized.NameValueCollection();
            try {
                nameValueColl.Add("UpdateDateColumns", this.UpdateDateColumns.ToString());
                nameValueColl.Add("UpdateIdColumns", this.UpdateIdColumns.ToString());
                nameValueColl.Add("CreateDateColumns", this.CreateDateColumns.ToString());
                nameValueColl.Add("CreateIdColumns", this.CreateIdColumns.ToString());
                return nameValueColl;
            }
            catch (System.Exception ex) {
                throw new System.ApplicationException("Error in the Auto-Generated: CodeTableAuditColumnList.GetNameValueCollection() Method", ex);
            }
        }
        
        public virtual string[] Validate() {
            System.Collections.ArrayList missingValues = new System.Collections.ArrayList();
            if ((((bool)(System.Convert.ChangeType(this._validationDict["UpdateDateColumns"], typeof(bool)))) == false)) {
                missingValues.Add("UpdateDateColumns");
            }
            if ((((bool)(System.Convert.ChangeType(this._validationDict["UpdateIdColumns"], typeof(bool)))) == false)) {
                missingValues.Add("UpdateIdColumns");
            }
            if ((((bool)(System.Convert.ChangeType(this._validationDict["CreateDateColumns"], typeof(bool)))) == false)) {
                missingValues.Add("CreateDateColumns");
            }
            if ((((bool)(System.Convert.ChangeType(this._validationDict["CreateIdColumns"], typeof(bool)))) == false)) {
                missingValues.Add("CreateIdColumns");
            }
            if ((missingValues.Count > 0)) {
                string[] missingVals = new string[missingValues.Count];
                missingValues.CopyTo(missingVals);
                return missingVals;
            }
            else {
                return null;
            }
        }
    }
}
