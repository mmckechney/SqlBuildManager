/*
Deployment script for TarnishedSchema

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TarnishedSchema"
:setvar DefaultFilePrefix "TarnishedSchema"
:setvar DefaultDataPath ""
:setvar DefaultLogPath ""

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
/* Please run the below section of statements against the database name that the above [$(DatabaseName)] variable is assigned to. */
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [sys].[databases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
PRINT N'The following operation was generated from a refactoring log file abdec68c-c46d-4e76-9b35-6431f573ddec';

PRINT N'Rename [dbo].[UserInfo].[ScheduledHours] to PayrollStandardHours';


GO
EXECUTE sp_rename @objname = N'[dbo].[UserInfo].[ScheduledHours]', @newname = N'PayrollStandardHours', @objtype = N'COLUMN';


GO
PRINT N'Dropping [conv].[DFConConverterProgressStagingDate]...';


GO
ALTER TABLE [conv].[ConverterProgress] DROP CONSTRAINT [DFConConverterProgressStagingDate];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_ACAPolicyID]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_ACAPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_ACAPolicyName]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_ACAPolicyName];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_CustomDate]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_CustomDate];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_InitialAdminPeriodDays]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_InitialAdminPeriodDays];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_InitialAdminPeriodEnabled]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_InitialAdminPeriodEnabled];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_InitialDuration]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_InitialDuration];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_InitialDurationType]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_InitialDurationType];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_InitialStartDateType]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_InitialStartDateType];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_MonthlyThresholdSecs]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_MonthlyThresholdSecs];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StandardAdminPeriodDays]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StandardAdminPeriodDays];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StandardAdminPeriodEnabled]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StandardAdminPeriodEnabled];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StandardDuration]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StandardDuration];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StandardDurationType]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StandardDurationType];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StandardStartDateType]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StandardStartDateType];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_WarnScheduleEnabled]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_WarnScheduleEnabled];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicy_WeeklyThresholdSecs]...';


GO
ALTER TABLE [dbo].[ACAPolicy] DROP CONSTRAINT [DF_ACAPolicy_WeeklyThresholdSecs];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_ACAPolicyID]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_ACAPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ACAPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[ACAPolicyAssign] DROP CONSTRAINT [DF_ACAPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_ActionsIconMessage_MessageLine1]...';


GO
ALTER TABLE [dbo].[ActionsIconMessage] DROP CONSTRAINT [DF_ActionsIconMessage_MessageLine1];


GO
PRINT N'Dropping [dbo].[DF_ActionsIconMessage_MessageLine2]...';


GO
ALTER TABLE [dbo].[ActionsIconMessage] DROP CONSTRAINT [DF_ActionsIconMessage_MessageLine2];


GO
PRINT N'Dropping [dbo].[DF_ActionsIconMessage_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ActionsIconMessage] DROP CONSTRAINT [DF_ActionsIconMessage_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ActionsIconMessage_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ActionsIconMessage] DROP CONSTRAINT [DF_ActionsIconMessage_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Alert_AlertID]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_AlertID];


GO
PRINT N'Dropping [dbo].[DF_Alert_AlertName]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_AlertName];


GO
PRINT N'Dropping [dbo].[DF_Alert_AlertPolicyID]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_AlertPolicyID];


GO
PRINT N'Dropping [dbo].[DF_Alert_AlertType]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_AlertType];


GO
PRINT N'Dropping [dbo].[DF_Alert_EndDateTime]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_Alert_IsDeleted]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_Alert_IsPromptEnabled]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_IsPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Alert_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Alert_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Alert_ParameterID]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_ParameterID];


GO
PRINT N'Dropping [dbo].[DF_Alert_ParameterSecs]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_ParameterSecs];


GO
PRINT N'Dropping [dbo].[DF_Alert_ParameterType]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_ParameterType];


GO
PRINT N'Dropping [dbo].[DF_Alert_StartDateTime]...';


GO
ALTER TABLE [dbo].[Alert] DROP CONSTRAINT [DF_Alert_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_AlertID]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_AlertID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_EndDate]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_EndDate];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_PreferenceID]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_ReferenceID]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_ReferenceID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_StartDate]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_StartDate];


GO
PRINT N'Dropping [dbo].[DF_AlertAssign_UserID]...';


GO
ALTER TABLE [dbo].[AlertAssign] DROP CONSTRAINT [DF_AlertAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_AlertAssignID]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_AlertAssignID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_ModifiedBy]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_ModifiedOn]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_UserGroupID]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_UserGroupID];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_UserGroupType]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_UserGroupType];


GO
PRINT N'Dropping [dbo].[DF_AlertAssignUserFilter_UserID]...';


GO
ALTER TABLE [dbo].[AlertAssignUserFilter] DROP CONSTRAINT [DF_AlertAssignUserFilter_UserID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_AlertType]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_AlertType];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_AlertTypeName]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_AlertTypeName];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_DeletedMgr]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_DeletedMgr];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_GeneratedOn]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_GeneratedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_HashKey]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_HashKey];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_IsPromptEnabled]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_IsPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_MessageData]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_MessageData];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_ParameterID]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_ParameterID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_ParameterSecs]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_ParameterSecs];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_ParameterType]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_ParameterType];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_TimeSlicePostExceptionDetailID]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_TimeSlicePostExceptionDetailID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessage_UserID]...';


GO
ALTER TABLE [dbo].[AlertMessage] DROP CONSTRAINT [DF_AlertMessage_UserID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessageDetail_AlertMessageID]...';


GO
ALTER TABLE [dbo].[AlertMessageDetail] DROP CONSTRAINT [DF_AlertMessageDetail_AlertMessageID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessageDetail_IsPromptDisabled]...';


GO
ALTER TABLE [dbo].[AlertMessageDetail] DROP CONSTRAINT [DF_AlertMessageDetail_IsPromptDisabled];


GO
PRINT N'Dropping [dbo].[DF_AlertMessageDetail_MgrUserID]...';


GO
ALTER TABLE [dbo].[AlertMessageDetail] DROP CONSTRAINT [DF_AlertMessageDetail_MgrUserID];


GO
PRINT N'Dropping [dbo].[DF_AlertMessageDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[AlertMessageDetail] DROP CONSTRAINT [DF_AlertMessageDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_AlertMessageDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[AlertMessageDetail] DROP CONSTRAINT [DF_AlertMessageDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicy_AlertPolicyName]...';


GO
ALTER TABLE [dbo].[AlertPolicy] DROP CONSTRAINT [DF_AlertPolicy_AlertPolicyName];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicy_IsDefault]...';


GO
ALTER TABLE [dbo].[AlertPolicy] DROP CONSTRAINT [DF_AlertPolicy_IsDefault];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[AlertPolicy] DROP CONSTRAINT [DF_AlertPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[AlertPolicy] DROP CONSTRAINT [DF_AlertPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[AlertPolicy] DROP CONSTRAINT [DF_AlertPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_AlertPolicyID]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_AlertPolicyID];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_AlertPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[AlertPolicyAssign] DROP CONSTRAINT [DF_AlertPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ActionByUserID]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ActionByUserID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ActionDateTime]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ActionDateTime];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ActionSourceType]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ActionSourceType];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ActionType]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ActionType];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_AuditData1]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_AuditData1];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ChangesMadeToUserID]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ChangesMadeToUserID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_ClassName]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_ClassName];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_CustomerSiteAccessLogID]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_CustomerSiteAccessLogID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_EntityID]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_EntityID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_EntityName]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_EntityName];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_IdentityID]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_IdentityID];


GO
PRINT N'Dropping [dbo].[DF_AuditTrail_TransactionDateTime]...';


GO
ALTER TABLE [dbo].[AuditTrail] DROP CONSTRAINT [DF_AuditTrail_TransactionDateTime];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplate_Description]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplate] DROP CONSTRAINT [DF_BellScheduleTemplate_Description];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplateDetail_BellScheduleTemplateID]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplateDetail] DROP CONSTRAINT [DF_BellScheduleTemplateDetail_BellScheduleTemplateID];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplateDetail_BellTime]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplateDetail] DROP CONSTRAINT [DF_BellScheduleTemplateDetail_BellTime];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplateDetail_Day]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplateDetail] DROP CONSTRAINT [DF_BellScheduleTemplateDetail_Day];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplateDetail_Description]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplateDetail] DROP CONSTRAINT [DF_BellScheduleTemplateDetail_Description];


GO
PRINT N'Dropping [dbo].[DF_BellScheduleTemplateDetail_Duration]...';


GO
ALTER TABLE [dbo].[BellScheduleTemplateDetail] DROP CONSTRAINT [DF_BellScheduleTemplateDetail_Duration];


GO
PRINT N'Dropping [dbo].[DF_BillingInitialSetup_FeatureCharge]...';


GO
ALTER TABLE [dbo].[BillingInitialSetup] DROP CONSTRAINT [DF_BillingInitialSetup_FeatureCharge];


GO
PRINT N'Dropping [dbo].[DF_BillingInitialSetup_FeatureName]...';


GO
ALTER TABLE [dbo].[BillingInitialSetup] DROP CONSTRAINT [DF_BillingInitialSetup_FeatureName];


GO
PRINT N'Dropping [dbo].[DF_BillingInitialSetup_ModifiedBy]...';


GO
ALTER TABLE [dbo].[BillingInitialSetup] DROP CONSTRAINT [DF_BillingInitialSetup_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_BillingInitialSetup_ModifiedOn]...';


GO
ALTER TABLE [dbo].[BillingInitialSetup] DROP CONSTRAINT [DF_BillingInitialSetup_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_ActualEmployeeCount]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_ActualEmployeeCount];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_EmployeeCount]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_EmployeeCount];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_EndDateTime]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_FeatureFee]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_FeatureFee];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_FeatureType]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_FeatureType];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_Month]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_Month];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyData_StrartDateTime]...';


GO
ALTER TABLE [dbo].[BillingMonthlyData] DROP CONSTRAINT [DF_BillingMonthlyData_StrartDateTime];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyRate_FeatureFee]...';


GO
ALTER TABLE [dbo].[BillingMonthlyRate] DROP CONSTRAINT [DF_BillingMonthlyRate_FeatureFee];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyRate_FeatureType]...';


GO
ALTER TABLE [dbo].[BillingMonthlyRate] DROP CONSTRAINT [DF_BillingMonthlyRate_FeatureType];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyRate_FromMonth]...';


GO
ALTER TABLE [dbo].[BillingMonthlyRate] DROP CONSTRAINT [DF_BillingMonthlyRate_FromMonth];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[BillingMonthlyRate] DROP CONSTRAINT [DF_BillingMonthlyRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[BillingMonthlyRate] DROP CONSTRAINT [DF_BillingMonthlyRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_EmpIdentifier]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_EmpIdentifier];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_EndDateTime]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_FirstName]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_FirstName];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_LastName]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_LastName];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_ModifiedBy]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_ModifiedOn]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_Month]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_Month];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_StartDateTime]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_BillingMonthlyUser_UserID]...';


GO
ALTER TABLE [dbo].[BillingMonthlyUser] DROP CONSTRAINT [DF_BillingMonthlyUser_UserID];


GO
PRINT N'Dropping [dbo].[DF_BillingTier_BaseRate]...';


GO
ALTER TABLE [dbo].[BillingTier] DROP CONSTRAINT [DF_BillingTier_BaseRate];


GO
PRINT N'Dropping [dbo].[DF_BillingTier_CountFrom]...';


GO
ALTER TABLE [dbo].[BillingTier] DROP CONSTRAINT [DF_BillingTier_CountFrom];


GO
PRINT N'Dropping [dbo].[DF_BillingTier_CountTo]...';


GO
ALTER TABLE [dbo].[BillingTier] DROP CONSTRAINT [DF_BillingTier_CountTo];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_CallBackPolicyID]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_CallBackPolicyID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_CallBackPolicyName]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_CallBackPolicyName];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicy] DROP CONSTRAINT [DF_CallBackPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_CallBackPolicyID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_CallBackPolicyID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_EndDatetime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_EndDatetime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyAssign] DROP CONSTRAINT [DF_CallBackPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_Amount]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_Amount];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_CallBackPolicyDollarRuleID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_CallBackPolicyDollarRuleID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_CallBackPolicyID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_CallBackPolicyID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_PayAdjustmentID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_PayAdjustmentID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyDollarRule_WorkUptoSecs]...';


GO
ALTER TABLE [dbo].[CallBackPolicyDollarRule] DROP CONSTRAINT [DF_CallBackPolicyDollarRule_WorkUptoSecs];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_AdditionalPaidSecs]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_AdditionalPaidSecs];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_CallBackPolicyID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_CallBackPolicyID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_CallBackPolicyTimeRuleID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_CallBackPolicyTimeRuleID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_MinPaidSecs]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_MinPaidSecs];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_NonWorkPayTypeID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_NonWorkPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_WorkPayTypeID]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_WorkPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CallBackPolicyTimeRule_WorkUptoSecs]...';


GO
ALTER TABLE [dbo].[CallBackPolicyTimeRule] DROP CONSTRAINT [DF_CallBackPolicyTimeRule_WorkUptoSecs];


GO
PRINT N'Dropping [dbo].[DF_Chart_ChartDisplayType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ChartDisplayType];


GO
PRINT N'Dropping [dbo].[DF_Chart_ChartName]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ChartName];


GO
PRINT N'Dropping [dbo].[DF_Chart_ChartType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ChartType];


GO
PRINT N'Dropping [dbo].[DF_Chart_DataLimitCount]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_DataLimitCount];


GO
PRINT N'Dropping [dbo].[DF_Chart_DataLimitCountOnType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_DataLimitCountOnType];


GO
PRINT N'Dropping [dbo].[DF_Chart_DataLimitType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_DataLimitType];


GO
PRINT N'Dropping [dbo].[DF_Chart_DateRangeType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_DateRangeType];


GO
PRINT N'Dropping [dbo].[DF_Chart_EmpFilterData]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_EmpFilterData];


GO
PRINT N'Dropping [dbo].[DF_Chart_EmpFilterID]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_EmpFilterID];


GO
PRINT N'Dropping [dbo].[DF_Chart_FromDate]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_FromDate];


GO
PRINT N'Dropping [dbo].[DF_Chart_IsDynamic]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_IsDynamic];


GO
PRINT N'Dropping [dbo].[DF_Chart_IsPublic]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_IsPublic];


GO
PRINT N'Dropping [dbo].[DF_Chart_LastXDays]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LastXDays];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL10Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL10Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL11Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL11Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL12Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL12Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL13Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL13Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL14Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL14Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL15Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL15Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL1Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL1Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL2Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL2Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL3Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL3Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL4Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL4Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL5Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL5Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL6Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL6Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL7Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL7Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL8Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL8Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_LL9Enabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_LL9Enabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Chart_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Chart_OwnerUserID]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_OwnerUserID];


GO
PRINT N'Dropping [dbo].[DF_Chart_RefPayrollPolicyID]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_RefPayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_Chart_ShowOthersEnabled]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ShowOthersEnabled];


GO
PRINT N'Dropping [dbo].[DF_Chart_ToDate]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_ToDate];


GO
PRINT N'Dropping [dbo].[DF_Chart_TotalDisplayType]...';


GO
ALTER TABLE [dbo].[Chart] DROP CONSTRAINT [DF_Chart_TotalDisplayType];


GO
PRINT N'Dropping [dbo].[DF_ChartPayType_ChartID]...';


GO
ALTER TABLE [dbo].[ChartPayType] DROP CONSTRAINT [DF_ChartPayType_ChartID];


GO
PRINT N'Dropping [dbo].[DF_ChartPayType_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ChartPayType] DROP CONSTRAINT [DF_ChartPayType_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ChartPayType_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ChartPayType] DROP CONSTRAINT [DF_ChartPayType_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ChartPayType_PayTypeID]...';


GO
ALTER TABLE [dbo].[ChartPayType] DROP CONSTRAINT [DF_ChartPayType_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_BehaviorMethodType]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_BehaviorMethodType];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_CompTimePolicyID]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_CompTimePolicyID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_CompTimePolicyName]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_CompTimePolicyName];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_IsMgrApprovalToBankOvertime]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_IsMgrApprovalToBankOvertime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_RangeType]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_RangeType];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicy] DROP CONSTRAINT [DF_CompTimePolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_CompTimePolicyID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_CompTimePolicyID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyAssign] DROP CONSTRAINT [DF_CompTimePolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_CompTimePolicyDetailID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_CompTimePolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_CompTimePolicyID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_CompTimePolicyID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_ConversionFactor]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_ConversionFactor];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_ConversionPayTypeID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_ConversionPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_OvertimPayTypeID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_OvertimPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_PayOutAsPayTypeID]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_PayOutAsPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_CompTimePolicyDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[CompTimePolicyDetail] DROP CONSTRAINT [DF_CompTimePolicyDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_DateTimeSubmitted]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_DateTimeSubmitted];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_EmpNote]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_EmpNote];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_EndDate]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_EndDate];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_ProcessingStatusType]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_ProcessingStatusType];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_SecsToConvert]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_SecsToConvert];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_StartDate]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_StartDate];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_StatusChangedBy]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_StatusChangedBy];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_StatusChangedOn]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_StatusChangedOn];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_CompTimeRequest_UserID]...';


GO
ALTER TABLE [dbo].[CompTimeRequest] DROP CONSTRAINT [DF_CompTimeRequest_UserID];


GO
PRINT N'Dropping [dbo].[DF_CustomField_CustomFieldName]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_CustomFieldName];


GO
PRINT N'Dropping [dbo].[DF_CustomField_CustomFieldType]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_CustomFieldType];


GO
PRINT N'Dropping [dbo].[DF_CustomField_DefaultDate]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_DefaultDate];


GO
PRINT N'Dropping [dbo].[DF_CustomField_DefaultMoney]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_DefaultMoney];


GO
PRINT N'Dropping [dbo].[DF_CustomField_DefaultNumber]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_DefaultNumber];


GO
PRINT N'Dropping [dbo].[DF_CustomField_DefaultSelect]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_DefaultSelect];


GO
PRINT N'Dropping [dbo].[DF_CustomField_DefaultString]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_DefaultString];


GO
PRINT N'Dropping [dbo].[DF_CustomField_HasDefinedValues]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_HasDefinedValues];


GO
PRINT N'Dropping [dbo].[DF_CustomField_IsLLCustomField]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_IsLLCustomField];


GO
PRINT N'Dropping [dbo].[DF_CustomField_IsMultiSelect]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_IsMultiSelect];


GO
PRINT N'Dropping [dbo].[DF_CustomField_IsRequired]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_IsRequired];


GO
PRINT N'Dropping [dbo].[DF_CustomField_LLID]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_LLID];


GO
PRINT N'Dropping [dbo].[DF_CustomField_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CustomField_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CustomField_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[CustomField] DROP CONSTRAINT [DF_CustomField_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_CustomFieldID]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_CustomFieldID];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_DataDate]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_DataDate];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_DataMoney]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_DataMoney];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_DataNumber]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_DataNumber];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_DataSelect]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_DataSelect];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_DataString]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_DataString];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_LLDetailID]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldData_UserID]...';


GO
ALTER TABLE [dbo].[CustomFieldData] DROP CONSTRAINT [DF_CustomFieldData_UserID];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_CustomFieldData]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_CustomFieldData];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_CustomFieldID]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_CustomFieldID];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_CustomFieldOrdinalPosition]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_CustomFieldOrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_CustomFieldType]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_CustomFieldType];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_IsOptionSelectable]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_IsOptionSelectable];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_ModifiedBy]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_CustomFieldSelect_ModifiedOn]...';


GO
ALTER TABLE [dbo].[CustomFieldSelect] DROP CONSTRAINT [DF_CustomFieldSelect_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Filter_FilterData1]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_FilterData1];


GO
PRINT N'Dropping [dbo].[DF_Filter_FilterName]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_FilterName];


GO
PRINT N'Dropping [dbo].[DF_Filter_FilterType]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_FilterType];


GO
PRINT N'Dropping [dbo].[DF_Filter_IsCustomFilter]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_IsCustomFilter];


GO
PRINT N'Dropping [dbo].[DF_Filter_IsPublic]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_IsPublic];


GO
PRINT N'Dropping [dbo].[DF_Filter_ModifiedBy]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Filter_ModifiedOn]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Filter_UserID]...';


GO
ALTER TABLE [dbo].[DataFilter] DROP CONSTRAINT [DF_Filter_UserID];


GO
PRINT N'Dropping [dbo].[DF_EmailTemplate_LanguageID]...';


GO
ALTER TABLE [dbo].[EmailTemplate] DROP CONSTRAINT [DF_EmailTemplate_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ClientAlias]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ClientAlias];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ErrorCode]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ErrorCode];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ErrorDetails]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ErrorDetails];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_Minutiae1]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_Minutiae1];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_Minutiae2]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_Minutiae2];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_ResubmitAttempts]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_ResubmitAttempts];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheFingerprint_SpecialMinutiae]...';


GO
ALTER TABLE [dbo].[ErrorCacheFingerprint] DROP CONSTRAINT [DF_ErrorCacheFingerprint_SpecialMinutiae];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_BadgeNumber]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_BadgeNumber];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ClientAlias]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ClientAlias];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ErrorCode]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ErrorCode];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ErrorDetails]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ErrorDetails];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_HandTemplate]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_HandTemplate];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_ResubmitAttempts]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_ResubmitAttempts];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheHandTemplate_SpecialEnroll]...';


GO
ALTER TABLE [dbo].[ErrorCacheHandTemplate] DROP CONSTRAINT [DF_ErrorCacheHandTemplate_SpecialEnroll];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_Amount]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_Amount];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_BadgeNumber]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_BadgeNumber];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_ClientAlias]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_ClientAlias];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_ErrorCode]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_ErrorCode];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_PayAdjustmentID]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_PayAdjustmentID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCachePayAdjustment_ResubmitAttempts]...';


GO
ALTER TABLE [dbo].[ErrorCachePayAdjustment] DROP CONSTRAINT [DF_ErrorCachePayAdjustment_ResubmitAttempts];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_BadgeNumber]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_BadgeNumber];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ClientAlias]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ClientAlias];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ErrorCode]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ErrorCode];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ErrorDetails]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ErrorDetails];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL1]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL1];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL10]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL10];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL11]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL11];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL12]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL12];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL13]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL13];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL14]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL14];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL15]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL15];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL2]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL2];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL3]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL3];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL4]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL4];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL5]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL5];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL6]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL6];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL7]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL7];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL8]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL8];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_LL9]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_LL9];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_ResubmitAttempts]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_ResubmitAttempts];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_TransactionDateTime]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_TransactionDateTime];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_TransactionID]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_TransactionID];


GO
PRINT N'Dropping [dbo].[DF_ErrorCacheTransaction_TransactionType]...';


GO
ALTER TABLE [dbo].[ErrorCacheTransaction] DROP CONSTRAINT [DF_ErrorCacheTransaction_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicy_ExceptionPolicyName]...';


GO
ALTER TABLE [dbo].[ExceptionPolicy] DROP CONSTRAINT [DF_ExceptionPolicy_ExceptionPolicyName];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[ExceptionPolicy] DROP CONSTRAINT [DF_ExceptionPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExceptionPolicy] DROP CONSTRAINT [DF_ExceptionPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExceptionPolicy] DROP CONSTRAINT [DF_ExceptionPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_ExceptionPolicyID]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_ExceptionPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyAssign] DROP CONSTRAINT [DF_ExceptionPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ExceptionPolicyID]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ExceptionPolicyRuleID]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ExceptionPolicyRuleName]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleName];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ExceptionPolicyRuleType]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleType];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_IsDeleted]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_ParameterSecs]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_ParameterSecs];


GO
PRINT N'Dropping [dbo].[DF_ExceptionPolicyRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[ExceptionPolicyRule] DROP CONSTRAINT [DF_ExceptionPolicyRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSetting_HideAknowledgedException]...';


GO
ALTER TABLE [dbo].[ExceptionSetting] DROP CONSTRAINT [DF_ExceptionSetting_HideAknowledgedException];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExceptionSetting] DROP CONSTRAINT [DF_ExceptionSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExceptionSetting] DROP CONSTRAINT [DF_ExceptionSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSetting_UserID]...';


GO
ALTER TABLE [dbo].[ExceptionSetting] DROP CONSTRAINT [DF_ExceptionSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSettingDetail_ExceptionRuleType]...';


GO
ALTER TABLE [dbo].[ExceptionSettingDetail] DROP CONSTRAINT [DF_ExceptionSettingDetail_ExceptionRuleType];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSettingDetail_ExceptionSettingID]...';


GO
ALTER TABLE [dbo].[ExceptionSettingDetail] DROP CONSTRAINT [DF_ExceptionSettingDetail_ExceptionSettingID];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSettingDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExceptionSettingDetail] DROP CONSTRAINT [DF_ExceptionSettingDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSettingDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExceptionSettingDetail] DROP CONSTRAINT [DF_ExceptionSettingDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExceptionSettingDetail_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[ExceptionSettingDetail] DROP CONSTRAINT [DF_ExceptionSettingDetail_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_ExportCode_ExportCodeName]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_ExportCode_ExportCodeName];


GO
PRINT N'Dropping [dbo].[DF_ExportCode_ExportMatrixType]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_ExportCode_ExportMatrixType];


GO
PRINT N'Dropping [dbo].[DF_ExportCode_IsDefault]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_ExportCode_IsDefault];


GO
PRINT N'Dropping [dbo].[DF_ExportCode_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_ExportCode_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExportCode_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_ExportCode_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Table_1_Priority]...';


GO
ALTER TABLE [dbo].[ExportCode] DROP CONSTRAINT [DF_Table_1_Priority];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_CriteriaFieldID]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_CriteriaFieldID];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_CriteriaFieldType]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_CriteriaFieldType];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_CriteriaFieldValue]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_CriteriaFieldValue];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_ExportCodeID]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_ExportCodeID];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExportCriteria_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExportCodeCriteria] DROP CONSTRAINT [DF_ExportCriteria_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_ExportCodeID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_ExportCodeID];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_LLDetailID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_PaidCode]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_PaidCode];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_PaidPayComponentID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_PaidPayComponentID];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_PaidPayRateID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_PaidPayRateID];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_PayTypeID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_ShiftDiffCode]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_ShiftDiffCode];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_UnpaidCode]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_UnpaidCode];


GO
PRINT N'Dropping [dbo].[DF_ExportCodeDetail_UnpaidPayComponentID]...';


GO
ALTER TABLE [dbo].[ExportCodeDetail] DROP CONSTRAINT [DF_ExportCodeDetail_UnpaidPayComponentID];


GO
PRINT N'Dropping [dbo].[DF_FAT_EndDateTime]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_FAT_FATID]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_FATID];


GO
PRINT N'Dropping [dbo].[DF_FAT_FATName]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_FATName];


GO
PRINT N'Dropping [dbo].[DF_FAT_HasFullAccess]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_HasFullAccess];


GO
PRINT N'Dropping [dbo].[DF_FAT_IsDeleted]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_FAT_ModifiedBy]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FAT_ModifiedOn]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_FAT_StartDateTime]...';


GO
ALTER TABLE [dbo].[FAT] DROP CONSTRAINT [DF_FAT_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_FATID]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_FATID];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATAssign_UserID]...';


GO
ALTER TABLE [dbo].[FATAssign] DROP CONSTRAINT [DF_FATAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_AllowAdd]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_AllowAdd];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_AllowAssign]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_AllowAssign];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_AllowDelete]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_AllowDelete];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_AllowEdit]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_AllowEdit];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_AllowView]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_AllowView];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_FATID]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_FATID];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_SectionType]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_SectionType];


GO
PRINT N'Dropping [dbo].[DF_FATDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[FATDetail] DROP CONSTRAINT [DF_FATDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_AdditionalSettingsType]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_AdditionalSettingsType];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_EndDateTime]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_FATID]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_FATID];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_IsEnabled]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_IsEnabled];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_ModifierID]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_ModifierID];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_ReportID]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_ReportID];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_SectionType]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_SectionType];


GO
PRINT N'Dropping [dbo].[DF_FATDetailSetting_StartDateTime]...';


GO
ALTER TABLE [dbo].[FATDetailSetting] DROP CONSTRAINT [DF_FATDetailSetting_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_FeatureAssignment_FeatureType]...';


GO
ALTER TABLE [dbo].[FeatureAssignment] DROP CONSTRAINT [DF_FeatureAssignment_FeatureType];


GO
PRINT N'Dropping [dbo].[DF_FeatureAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[FeatureAssignment] DROP CONSTRAINT [DF_FeatureAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FeatureAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[FeatureAssignment] DROP CONSTRAINT [DF_FeatureAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AdminLastLockedOut]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AdminLastLockedOut];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AdminPassword]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AdminPassword];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AdminPasswordAttempts]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AdminPasswordAttempts];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AdminPasswordExpires]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AdminPasswordExpires];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AdminTimezoneKey]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AdminTimezoneKey];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AllowMissingPunchApprovals]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AllowMissingPunchApprovals];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_AllowSecondMgrApprovingAsMgr1]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_AllowSecondMgrApprovingAsMgr1];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingBillTo]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingBillTo];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingClockCount]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingClockCount];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingClockRental]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingClockRental];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingComments]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingComments];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingCommisionEnd]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingCommisionEnd];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingCommisionRate]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingCommisionRate];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingCommisionStart]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingCommisionStart];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingDedicatedLineQuantity]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingDedicatedLineQuantity];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingDedicatedLineRate]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingDedicatedLineRate];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingIndustry]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingIndustry];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingMinimumCout]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingMinimumCout];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingMinimumEnabled]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingMinimumEnabled];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingMobileAccessRequired]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingMobileAccessRequired];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingPONumber]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingPONumber];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingSalesID]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingSalesID];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingTerms]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingTerms];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingTierEnabled]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingTierEnabled];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_BillingType]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_BillingType];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CanAccessSubordinateGroup]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CanAccessSubordinateGroup];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CanAssignProxyMgr]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CanAssignProxyMgr];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CanAssignSubordinateMgr]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CanAssignSubordinateMgr];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_City]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_City];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ClockPIN]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ClockPIN];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CompanyAddress]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CompanyAddress];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CompanyName]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CompanyName];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_CustomerLogoFilename]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_CustomerLogoFilename];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_EmailImportProcessLog]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_EmailImportProcessLog];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_EnableEmpGroupHierarchy]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_EnableEmpGroupHierarchy];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_EnableGovernmentID]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_EnableGovernmentID];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_EnableSSO]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_EnableSSO];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_EnableWebServices]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_EnableWebServices];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_Fax]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_Fax];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_GovernmentIDLabel]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_GovernmentIDLabel];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_HardwareClientURL]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_HardwareClientURL];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_HardwareClientVersion]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_HardwareClientVersion];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_HideAutoLunch]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_HideAutoLunch];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ImpliedHierarchyEnabled]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ImpliedHierarchyEnabled];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ImportMgrAssignmentDisabled]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ImportMgrAssignmentDisabled];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_IsSSOLoginOnly]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_IsSSOLoginOnly];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_LLID]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_LLID];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_LLLabel]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_LLLabel];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_LLsLabel]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_LLsLabel];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_Phone]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_Phone];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ScheduleGenerateForDays]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ScheduleGenerateForDays];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ShowAllRatesAsHourly]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ShowAllRatesAsHourly];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_SSOSAMLBinding]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_SSOSAMLBinding];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_SSOSAMLRedirectURL]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_SSOSAMLRedirectURL];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_SSOSAMLSignOnURL]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_SSOSAMLSignOnURL];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_SSOSAMLX509Cert]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_SSOSAMLX509Cert];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_SSOSharedKey]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_SSOSharedKey];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_State]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_State];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_TimeCardMgrApprovalLevelType]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_TimeCardMgrApprovalLevelType];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_TOREmailToAdminEnabled]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_TOREmailToAdminEnabled];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_UseMgrName]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_UseMgrName];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_UserGroupNameType]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_UserGroupNameType];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_WebKioskPin]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_WebKioskPin];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_WebServiceGUID]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_WebServiceGUID];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_WSFATID]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_WSFATID];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_WSUserPassword]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_WSUserPassword];


GO
PRINT N'Dropping [dbo].[DF_GeneralConfiguration_ZipCode]...';


GO
ALTER TABLE [dbo].[GeneralConfiguration] DROP CONSTRAINT [DF_GeneralConfiguration_ZipCode];


GO
PRINT N'Dropping [dbo].[DF_GeoFence_FenceType]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_GeoFence_FenceType];


GO
PRINT N'Dropping [dbo].[DF_Geofence_GoogleMapsID]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_Geofence_GoogleMapsID];


GO
PRINT N'Dropping [dbo].[DF_GeoFence_GoogleMapZoomLevel]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_GeoFence_GoogleMapZoomLevel];


GO
PRINT N'Dropping [dbo].[DF_Geofence_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_Geofence_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Geofence_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_Geofence_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Geofence_Name]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_Geofence_Name];


GO
PRINT N'Dropping [dbo].[DF_GeoFence_Radius]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_GeoFence_Radius];


GO
PRINT N'Dropping [dbo].[DF_GeoFence_RadiusUnit]...';


GO
ALTER TABLE [dbo].[GeoFence] DROP CONSTRAINT [DF_GeoFence_RadiusUnit];


GO
PRINT N'Dropping [dbo].[DF_GeofenceAssignment_GeoFenceGroupID]...';


GO
ALTER TABLE [dbo].[GeoFenceAssignment] DROP CONSTRAINT [DF_GeofenceAssignment_GeoFenceGroupID];


GO
PRINT N'Dropping [dbo].[DF_GeofenceAssignment_GeofenceID]...';


GO
ALTER TABLE [dbo].[GeoFenceAssignment] DROP CONSTRAINT [DF_GeofenceAssignment_GeofenceID];


GO
PRINT N'Dropping [dbo].[DF_GeofenceAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeoFenceAssignment] DROP CONSTRAINT [DF_GeofenceAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_GeofenceAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeoFenceAssignment] DROP CONSTRAINT [DF_GeofenceAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_GeoFenceCoordinate_GeoFenceID]...';


GO
ALTER TABLE [dbo].[GeoFenceCoordinate] DROP CONSTRAINT [DF_GeoFenceCoordinate_GeoFenceID];


GO
PRINT N'Dropping [dbo].[DF_GeoFenceCoordinate_Latitude]...';


GO
ALTER TABLE [dbo].[GeoFenceCoordinate] DROP CONSTRAINT [DF_GeoFenceCoordinate_Latitude];


GO
PRINT N'Dropping [dbo].[DF_GeoFenceCoordinate_Longitude]...';


GO
ALTER TABLE [dbo].[GeoFenceCoordinate] DROP CONSTRAINT [DF_GeoFenceCoordinate_Longitude];


GO
PRINT N'Dropping [dbo].[DF_GeoFenceCoordinate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeoFenceCoordinate] DROP CONSTRAINT [DF_GeoFenceCoordinate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_GeoFenceCoordinate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeoFenceCoordinate] DROP CONSTRAINT [DF_GeoFenceCoordinate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_GeofenceGroup_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeoFenceGroup] DROP CONSTRAINT [DF_GeofenceGroup_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_GeofenceGroup_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeoFenceGroup] DROP CONSTRAINT [DF_GeofenceGroup_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_GeofenceGroupAssignment_GeofenceGroupID]...';


GO
ALTER TABLE [dbo].[GeoFenceGroupAssignment] DROP CONSTRAINT [DF_GeofenceGroupAssignment_GeofenceGroupID];


GO
PRINT N'Dropping [dbo].[DF_GeofenceGroupAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[GeoFenceGroupAssignment] DROP CONSTRAINT [DF_GeofenceGroupAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_GeofenceGroupAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[GeoFenceGroupAssignment] DROP CONSTRAINT [DF_GeofenceGroupAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_LLID]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_LLID];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_ManualEntryEnabled]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_ManualEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HardwarePrompt_PromptText]...';


GO
ALTER TABLE [dbo].[HardwarePrompt] DROP CONSTRAINT [DF_HardwarePrompt_PromptText];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ActivateRelay]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ActivateRelay];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowAlphaBadges]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowAlphaBadges];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowBadgelessEntry]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowBadgelessEntry];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowBreak]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowBreak];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowClockInUsingF1Key]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowClockInUsingF1Key];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowClockOutUsingF1Key]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowClockOutUsingF1Key];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowLLTransfer]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowLLTransfer];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowLLTransferUsingF2Key]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowLLTransferUsingF2Key];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowLunch]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowLunch];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowLunchAndBreakUsingF1Key]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowLunchAndBreakUsingF1Key];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowPayAdjustmentEntry]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowPayAdjustmentEntry];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AllowUnknownBadges]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AllowUnknownBadges];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_AutoUpdate]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_AutoUpdate];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_BadgeLength]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_BadgeLength];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_BadgeStartPosition]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_BadgeStartPosition];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_BaudRate]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_BaudRate];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_BellScheduleTempID]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_BellScheduleTempID];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ClearHandTemplates]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ClearHandTemplates];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_CommunicationType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_CommunicationType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_COMPort]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_COMPort];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ConfigurationCode]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ConfigurationCode];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ConfigurationFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ConfigurationFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ConnectionType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ConnectionType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_DayLightSavingsEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_DayLightSavingsEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_DefaultPayAdjustmentID]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_DefaultPayAdjustmentID];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_Description]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_Description];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_DisplayAssignedLLsEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_DisplayAssignedLLsEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EmployeeFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EmployeeFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnableFingerprint]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnableFingerprint];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnableImport]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnableImport];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnablePolling]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnablePolling];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnableSwipeAndGo]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnableSwipeAndGo];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnableUploading]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnableUploading];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_EnableWireless]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_EnableWireless];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_FingerPrintBrightness]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_FingerPrintBrightness];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_FingerPrintImageQuality]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_FingerPrintImageQuality];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_FingerprintSecurityLevel]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_FingerprintSecurityLevel];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ForceUpdate]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ForceUpdate];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_GraceOutSecs]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_GraceOutSecs];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_HardwareTerminalType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_HardwareTerminalType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_IdlePrompt]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_IdlePrompt];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ImportBaseTime]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ImportBaseTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ImportIntervalLength]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ImportIntervalLength];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ImportIntervalType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ImportIntervalType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_InternalWebServiceUrl]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_InternalWebServiceUrl];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_IPAddress]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_IPAddress];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_IsDeleted]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LANID]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LANID];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LastCommunicationDateTime]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LastCommunicationDateTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID1]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID10]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID11]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID12]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID13]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID14]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID15]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID2]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID3]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID4]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID5]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID6]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID7]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID8]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLDetailID9]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLPromptOnClockInEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLPromptOnClockInEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLPromptOnEndBreakEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLPromptOnEndBreakEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_LLPromptOnEndLunchEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_LLPromptOnEndLunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_MACID]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_MACID];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_MessageFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_MessageFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PayAdjustmentEntryType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PayAdjustmentEntryType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PayAdjustmentFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PayAdjustmentFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PhoneNumber]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PhoneNumber];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PollBaseTime]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PollBaseTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PollIntervalLength]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PollIntervalLength];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_PollIntervalType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_PollIntervalType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ScheduleDaysToUpload]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ScheduleDaysToUpload];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ScheduleFreq]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ScheduleFreq];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_SendMessageToClockEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_SendMessageToClockEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_SendMessageType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_SendMessageType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TerminalMode]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TerminalMode];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TimecardApprovalDateRangeType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TimecardApprovalDateRangeType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TimecardEmpApprovalEnabled]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TimecardEmpApprovalEnabled];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TimecardEmpApprovalText]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TimecardEmpApprovalText];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TimeZoneKey]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TimeZoneKey];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_TotalBadgeLength]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_TotalBadgeLength];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_UpdateURL]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_UpdateURL];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_UploadBaseTime]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_UploadBaseTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_UploadIntervalLength]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_UploadIntervalLength];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_UploadIntervalType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_UploadIntervalType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_VerificationIDType]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_VerificationIDType];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_Version]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_Version];


GO
PRINT N'Dropping [dbo].[DF_HardwareTerminal_ZoneID]...';


GO
ALTER TABLE [dbo].[HardwareTerminal] DROP CONSTRAINT [DF_HardwareTerminal_ZoneID];


GO
PRINT N'Dropping [dbo].[DF_HardwareZone_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HardwareZone] DROP CONSTRAINT [DF_HardwareZone_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HardwareZone_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HardwareZone] DROP CONSTRAINT [DF_HardwareZone_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMember_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HardwareZoneMember] DROP CONSTRAINT [DF_HardwareZoneMember_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_EndDateTime]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_HardwareZoneID]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_HardwareZoneID];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_StartDateTime]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_HardwareZoneMgr_UserID]...';


GO
ALTER TABLE [dbo].[HardwareZoneMgr] DROP CONSTRAINT [DF_HardwareZoneMgr_UserID];


GO
PRINT N'Dropping [dbo].[DF_HolidayList_HolidayListName]...';


GO
ALTER TABLE [dbo].[HolidayList] DROP CONSTRAINT [DF_HolidayList_HolidayListName];


GO
PRINT N'Dropping [dbo].[DF_HolidayList_IsDeleted]...';


GO
ALTER TABLE [dbo].[HolidayList] DROP CONSTRAINT [DF_HolidayList_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_HolidayList_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HolidayList] DROP CONSTRAINT [DF_HolidayList_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HolidayList_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HolidayList] DROP CONSTRAINT [DF_HolidayList_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_HolidayListID]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_HolidayListID];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_HolidayListAssign_UserID]...';


GO
ALTER TABLE [dbo].[HolidayListAssign] DROP CONSTRAINT [DF_HolidayListAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_HolidayDate]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_HolidayDate];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_HolidayListID]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_HolidayListID];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_HolidayName]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_HolidayName];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_IncludeWeekend]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_IncludeWeekend];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_IsCompanyWorked]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_IsCompanyWorked];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HolidayListDetail_NumberOfDays]...';


GO
ALTER TABLE [dbo].[HolidayListDetail] DROP CONSTRAINT [DF_HolidayListDetail_NumberOfDays];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_AvgWorkDuration]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_AvgWorkDuration];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_EndDate]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_EndDate];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ForecastingMethodType]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ForecastingMethodType];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ForecastNonWorkTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ForecastNonWorkTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ForecastWorkTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ForecastWorkTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_HoursForecastPolicyID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_HoursForecastPolicyID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_HoursForecastPolicyName]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_HoursForecastPolicyName];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_IncludeNonWorkTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_IncludeNonWorkTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_ShowForecastedTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_ShowForecastedTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_StartDate]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_StartDate];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicy] DROP CONSTRAINT [DF_HoursForecastPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_HoursForecastPolicyID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_HoursForecastPolicyID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyAssign] DROP CONSTRAINT [DF_HoursForecastPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_HoursForecastPolicyDetailID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_HoursForecastPolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_HoursForecastPolicyID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_HoursForecastPolicyID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_NegReconciliationPayTypeID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_NegReconciliationPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_PayTypeID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_ReconciliationPayTypeID]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_ReconciliationPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_HoursForecastPolicyDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[HoursForecastPolicyDetail] DROP CONSTRAINT [DF_HoursForecastPolicyDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ImportAssignment_ImportID]...';


GO
ALTER TABLE [dbo].[ImportAssignment] DROP CONSTRAINT [DF_ImportAssignment_ImportID];


GO
PRINT N'Dropping [dbo].[DF_ImportAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportAssignment] DROP CONSTRAINT [DF_ImportAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportAssignment] DROP CONSTRAINT [DF_ImportAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_Email]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_Email];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ImportedBy]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ImportedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ImportedDate]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ImportedDate];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ImportedIDs]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ImportedIDs];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ImportID]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ImportID];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_StatusType]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_StatusType];


GO
PRINT N'Dropping [dbo].[DF_ImportProcessHistory_Type]...';


GO
ALTER TABLE [dbo].[ImportProcessHistory] DROP CONSTRAINT [DF_ImportProcessHistory_Type];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_FrequencyType]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_FrequencyType];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_ImportID]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_ImportID];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_ReferenceDateTime]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_ReferenceDateTime];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_ScheduleTime]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_ScheduleTime];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_UnitCount]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_UnitCount];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_UnitType]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_UnitType];


GO
PRINT N'Dropping [dbo].[DF_ImportSchedule_WeekDay]...';


GO
ALTER TABLE [dbo].[ImportSchedule] DROP CONSTRAINT [DF_ImportSchedule_WeekDay];


GO
PRINT N'Dropping [dbo].[DF_ImportSetting_ImportID]...';


GO
ALTER TABLE [dbo].[ImportSetting] DROP CONSTRAINT [DF_ImportSetting_ImportID];


GO
PRINT N'Dropping [dbo].[DF_ImportSetting_ImportProcessType]...';


GO
ALTER TABLE [dbo].[ImportSetting] DROP CONSTRAINT [DF_ImportSetting_ImportProcessType];


GO
PRINT N'Dropping [dbo].[DF_ImportSetting_ImportSpecificSettings]...';


GO
ALTER TABLE [dbo].[ImportSetting] DROP CONSTRAINT [DF_ImportSetting_ImportSpecificSettings];


GO
PRINT N'Dropping [dbo].[DF_ImportSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportSetting] DROP CONSTRAINT [DF_ImportSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportSetting] DROP CONSTRAINT [DF_ImportSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_DefaultEffectiveDate]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_DefaultEffectiveDate];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_Delimiter]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_Delimiter];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_ImportType]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_ImportType];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_IsDeleteFutureAssign]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_IsDeleteFutureAssign];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportTemp_StartFromRow]...';


GO
ALTER TABLE [dbo].[ImportTemp] DROP CONSTRAINT [DF_ImportTemp_StartFromRow];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_FieldType]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_FieldType];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_FieldValue]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_FieldValue];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_ImportTempID]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_ImportTempID];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ImportTempFields_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[ImportTempFields] DROP CONSTRAINT [DF_ImportTempFields_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicy_AllowPunch]...';


GO
ALTER TABLE [dbo].[IPAccessPolicy] DROP CONSTRAINT [DF_IPAccessPolicy_AllowPunch];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicy_AllowSiteAccess]...';


GO
ALTER TABLE [dbo].[IPAccessPolicy] DROP CONSTRAINT [DF_IPAccessPolicy_AllowSiteAccess];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicy_IPAccessPolicyName]...';


GO
ALTER TABLE [dbo].[IPAccessPolicy] DROP CONSTRAINT [DF_IPAccessPolicy_IPAccessPolicyName];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[IPAccessPolicy] DROP CONSTRAINT [DF_IPAccessPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[IPAccessPolicy] DROP CONSTRAINT [DF_IPAccessPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicyDetail_Description]...';


GO
ALTER TABLE [dbo].[IPAccessPolicyDetail] DROP CONSTRAINT [DF_IPAccessPolicyDetail_Description];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicyDetail_IPAccessPolicyID]...';


GO
ALTER TABLE [dbo].[IPAccessPolicyDetail] DROP CONSTRAINT [DF_IPAccessPolicyDetail_IPAccessPolicyID];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicyDetail_IPAddress]...';


GO
ALTER TABLE [dbo].[IPAccessPolicyDetail] DROP CONSTRAINT [DF_IPAccessPolicyDetail_IPAddress];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicyDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[IPAccessPolicyDetail] DROP CONSTRAINT [DF_IPAccessPolicyDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_IPAccessPolicyDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[IPAccessPolicyDetail] DROP CONSTRAINT [DF_IPAccessPolicyDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_JobAssignment_JobID]...';


GO
ALTER TABLE [dbo].[JobAssignment] DROP CONSTRAINT [DF_JobAssignment_JobID];


GO
PRINT N'Dropping [dbo].[DF_JobAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[JobAssignment] DROP CONSTRAINT [DF_JobAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_JobAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[JobAssignment] DROP CONSTRAINT [DF_JobAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobID]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobID];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobProcessedBy]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobProcessedBy];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobProcessedOn]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobProcessedOn];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobProcessStatusType]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobProcessStatusType];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobSettingID]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobSettingID];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_JobSettingName]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_JobSettingName];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_ModifiedBy]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_JobProcessHistory_ModifiedOn]...';


GO
ALTER TABLE [dbo].[JobProcessHistory] DROP CONSTRAINT [DF_JobProcessHistory_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_FrequencyType]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_FrequencyType];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_JobSettingID]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_JobSettingID];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_ReferenceDateTime]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_ReferenceDateTime];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_ScheduleTime]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_ScheduleTime];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_UnitCount]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_UnitCount];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_UnitType]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_UnitType];


GO
PRINT N'Dropping [dbo].[DF_JobSchedule_WeekDay]...';


GO
ALTER TABLE [dbo].[JobSchedule] DROP CONSTRAINT [DF_JobSchedule_WeekDay];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_FilterData]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_FilterData];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_FilterID]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_FilterID];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_JobID]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_JobID];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_JobSettingName]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_JobSettingName];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_JobSpecificSettings]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_JobSpecificSettings];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_JobSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[JobSetting] DROP CONSTRAINT [DF_JobSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_LandingPageFeatureType]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_LandingPageFeatureType];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_LandingPageSectionType]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_LandingPageSectionType];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_ModifedBy]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_ModifedBy];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_VideoID]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_VideoID];


GO
PRINT N'Dropping [dbo].[DF_LandingPageVideo_VideoName]...';


GO
ALTER TABLE [dbo].[LandingPageVideo] DROP CONSTRAINT [DF_LandingPageVideo_VideoName];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_TransactionDateTime]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_TransactionDateTime];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_TransactionType]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_TransactionUTCDateTime]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_TransactionUTCDateTime];


GO
PRINT N'Dropping [dbo].[DF_LiveTransactionLog_UserID]...';


GO
ALTER TABLE [dbo].[LiveTransactionLog] DROP CONSTRAINT [DF_LiveTransactionLog_UserID];


GO
PRINT N'Dropping unnamed constraint on [dbo].[LL]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF__LL__PayrollUniqu__1A89E4E1];


GO
PRINT N'Dropping [dbo].[DF_LL_CustomFieldOrdinalPosEnabled]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_CustomFieldOrdinalPosEnabled];


GO
PRINT N'Dropping [dbo].[DF_LL_LLName]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_LLName];


GO
PRINT N'Dropping [dbo].[DF_LL_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LL_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LL_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_LL_UnrestrictedAccessEnabled]...';


GO
ALTER TABLE [dbo].[LL] DROP CONSTRAINT [DF_LL_UnrestrictedAccessEnabled];


GO
PRINT N'Dropping unnamed constraint on [dbo].[LLDetail]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF__LLDetail__Payrol__26EFBBC6];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_CAEndDate]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_CAEndDate];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_CAStartDate]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_CAStartDate];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_CreatedBy]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_CreatedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_CreatedOn]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_CreatedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_EmpNotesRequired]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_EmpNotesRequired];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_EndDate]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_EndDate];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_IsDeleted]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_LLDetailCode]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_LLDetailCode];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_LLDetailName]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_LLDetailName];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_LLID]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_LLID];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_OriginalCode]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_OriginalCode];


GO
PRINT N'Dropping [dbo].[DF_LLDetail_StartDate]...';


GO
ALTER TABLE [dbo].[LLDetail] DROP CONSTRAINT [DF_LLDetail_StartDate];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_IsHomeLL]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_IsHomeLL];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_LLDetailID]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_LLID]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_LLID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssign_UserID]...';


GO
ALTER TABLE [dbo].[LLDetailAssign] DROP CONSTRAINT [DF_LLDetailAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_ChargeRate]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_ChargeRate];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_LLDetailAssignID]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_LLDetailAssignID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignChargeRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssignChargeRate] DROP CONSTRAINT [DF_LLDetailAssignChargeRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_LLDetailAssignID]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_LLDetailAssignID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_PayRate]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_PayRate];


GO
PRINT N'Dropping [dbo].[DF_LLDetailAssignPayRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailAssignPayRate] DROP CONSTRAINT [DF_LLDetailAssignPayRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_ChargeRate]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_ChargeRate];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_LLDetailID]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailChargeRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailChargeRate] DROP CONSTRAINT [DF_LLDetailChargeRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailHardwareTerminal_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailHardwareTerminal] DROP CONSTRAINT [DF_LLDetailHardwareTerminal_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailHardwareTerminal_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailHardwareTerminal] DROP CONSTRAINT [DF_LLDetailHardwareTerminal_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_LLDetailID]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_PayRate]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_PayRate];


GO
PRINT N'Dropping [dbo].[DF_LLDetailPayRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[LLDetailPayRate] DROP CONSTRAINT [DF_LLDetailPayRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_LLHierarchy_LLDetailID]...';


GO
ALTER TABLE [dbo].[LLHierarchy] DROP CONSTRAINT [DF_LLHierarchy_LLDetailID];


GO
PRINT N'Dropping [dbo].[DF_LLHierarchy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[LLHierarchy] DROP CONSTRAINT [DF_LLHierarchy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_LLHierarchy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[LLHierarchy] DROP CONSTRAINT [DF_LLHierarchy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_LLHierarchy_RefLLHierarchyID]...';


GO
ALTER TABLE [dbo].[LLHierarchy] DROP CONSTRAINT [DF_LLHierarchy_RefLLHierarchyID];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day1Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day1Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day1Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day1Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day2Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day2Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day2Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day2Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day3Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day3Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day3Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day3Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day4Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day4Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day4Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day4Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day5Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day5Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day5Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day5Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day6Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day6Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day6Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day6Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day7Notes]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day7Notes];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_Day7Seconds]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_Day7Seconds];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID1]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID10]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID11]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID12]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID13]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID14]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID15]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID2]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID3]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID4]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID5]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID6]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID7]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID8]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_LLDetailID9]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_PayTypeID]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_MatrixTemplate_UserID]...';


GO
ALTER TABLE [dbo].[MatrixTemplate] DROP CONSTRAINT [DF_MatrixTemplate_UserID];


GO
PRINT N'Dropping [dbo].[DF_Message_ExpiresOn]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_ExpiresOn];


GO
PRINT N'Dropping [dbo].[DF_Message_IsDeleted]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_Message_IsRead]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_IsRead];


GO
PRINT N'Dropping [dbo].[DF_Message_MessageBody]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_MessageBody];


GO
PRINT N'Dropping [dbo].[DF_Message_MessageSubject]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_MessageSubject];


GO
PRINT N'Dropping [dbo].[DF_Message_RelatedMessageID]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_RelatedMessageID];


GO
PRINT N'Dropping [dbo].[DF_Message_RelationType]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_RelationType];


GO
PRINT N'Dropping [dbo].[DF_Message_SentOn]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_SentOn];


GO
PRINT N'Dropping [dbo].[DF_Message_UserID]...';


GO
ALTER TABLE [dbo].[Message] DROP CONSTRAINT [DF_Message_UserID];


GO
PRINT N'Dropping [dbo].[DF_MessageDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_MessageDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_IsDeleted]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_IsRead]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_IsRead];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_MessageID]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_MessageID];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_RelatedMessageID]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_RelatedMessageID];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_RelationType]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_RelationType];


GO
PRINT N'Dropping [dbo].[DF_MessageDetails_UserID]...';


GO
ALTER TABLE [dbo].[MessageDetail] DROP CONSTRAINT [DF_MessageDetails_UserID];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_HideAcknowledgedException]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_HideAcknowledgedException];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_HomeWidgetSettingType]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_HomeWidgetSettingType];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_PreferenceID]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_ShowMissingPunch]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_ShowMissingPunch];


GO
PRINT N'Dropping [dbo].[DF_MissingPunchesWidgetSetting_UserID]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_MissingPunchesWidgetSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_Table_1_ShowExcepetion]...';


GO
ALTER TABLE [dbo].[MissingPunchesWidgetSetting] DROP CONSTRAINT [DF_Table_1_ShowExcepetion];


GO
PRINT N'Dropping [dbo].[DF_Modifier_IsDeleted]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_Modifier_IsSystemGenerated]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_IsSystemGenerated];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifierName]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifierName];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifierParam]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifierParam];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifierParam2]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifierParam2];


GO
PRINT N'Dropping [dbo].[DF_Modifier_ModifierType]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_ModifierType];


GO
PRINT N'Dropping [dbo].[DF_Modifier_Notes]...';


GO
ALTER TABLE [dbo].[Modifier] DROP CONSTRAINT [DF_Modifier_Notes];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ACAPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ACAPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_AttendanceShiftLength]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_AttendanceShiftLength];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_CallBackPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_CallBackPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_CompTimePolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_CompTimePolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_DisablePunchWithoutGeolocation]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_DisablePunchWithoutGeolocation];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_EmpStatus]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_EmpStatus];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_EnforceIPAccessOnMobileWeb]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_EnforceIPAccessOnMobileWeb];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ExceptionPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ExceptionPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_FATID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_FATID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_HardwareZoneID1]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_HardwareZoneID1];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_HardwareZoneID2]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_HardwareZoneID2];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_HolidayListID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_HolidayListID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_HoursForecastPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_HoursForecastPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_IPAccessPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_IPAccessPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_IsDefaultPolicy]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_IsDefaultPolicy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_IsExempt]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_IsExempt];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_IsSalary]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_IsSalary];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID1]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID10]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID11]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID12]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID13]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID14]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID15]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID2]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID3]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID4]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID5]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID6]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID7]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID8]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_LLDetailID9]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_MobileNonWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_MobileNonWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_MobileTimeSheetDefaultPaid]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_MobileTimeSheetDefaultPaid];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_MobileTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_MobileTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_MobileWebPunchEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_MobileWebPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_MobileWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_MobileWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_NewEmpDefaultName]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_NewEmpDefaultName];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_NonWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_NonWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_PasswordPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_PasswordPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_PointsTrackingPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_PointsTrackingPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_PreferenceID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_PriorityNumber]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_PriorityNumber];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_RestrictShortLunchEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_RestrictShortLunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_RestrictToScheduleEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_RestrictToScheduleEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ScheduleTempID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ScheduleTempID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_ShiftDiffPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_ShiftDiffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_SSOLoginOnly]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_SSOLoginOnly];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TelephonePolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TelephonePolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TimeOffPolicyID]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TimeOffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TimeSheetDefaultClockIn]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TimeSheetDefaultClockIn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TimeSheetDefaultPaid]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TimeSheetDefaultPaid];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TimeZoneKey]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TimeZoneKey];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TrackAttendanceOnlyEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TrackAttendanceOnlyEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_TrackGeolocation]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_TrackGeolocation];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WebAccessEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WebAccessEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WebKioskPunchEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WebKioskPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WebLoginGenerationType]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WebLoginGenerationType];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WebPasswordGenerationType]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WebPasswordGenerationType];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WebPunchingEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WebPunchingEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefault_WorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[NewEmpDefault] DROP CONSTRAINT [DF_NewEmpDefault_WorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_CriteriaFieldID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_CriteriaFieldType]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldType];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_CriteriaFieldValue]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldValue];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultCriteria_NewEmpDefaultID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultCriteria] DROP CONSTRAINT [DF_NewEmpDefaultCriteria_NewEmpDefaultID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultTimeOffHour_InitialSecs]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultTimeOffHour] DROP CONSTRAINT [DF_NewEmpDefaultTimeOffHour_InitialSecs];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultTimeOffHour_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultTimeOffHour] DROP CONSTRAINT [DF_NewEmpDefaultTimeOffHour_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultTimeOffHour_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultTimeOffHour] DROP CONSTRAINT [DF_NewEmpDefaultTimeOffHour_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultTimeOffHour_NewEmpDefaultID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultTimeOffHour] DROP CONSTRAINT [DF_NewEmpDefaultTimeOffHour_NewEmpDefaultID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroup_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroup] DROP CONSTRAINT [DF_NewEmpDefaultUserGroup_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroup_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroup] DROP CONSTRAINT [DF_NewEmpDefaultUserGroup_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroup_NewEmpDefaultID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroup] DROP CONSTRAINT [DF_NewEmpDefaultUserGroup_NewEmpDefaultID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroup_UserGroupID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroup] DROP CONSTRAINT [DF_NewEmpDefaultUserGroup_UserGroupID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroupMgr_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroupMgr] DROP CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroupMgr_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroupMgr] DROP CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroupMgr_NewEmpDefaultID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroupMgr] DROP CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_NewEmpDefaultID];


GO
PRINT N'Dropping [dbo].[DF_NewEmpDefaultUserGroupMgr_UserGroupID]...';


GO
ALTER TABLE [dbo].[NewEmpDefaultUserGroupMgr] DROP CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_UserGroupID];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_CurrentOptionType]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_CurrentOptionType];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_IsCurrentOptionEnabled]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_IsCurrentOptionEnabled];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_IsNextOptionEnabled]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_IsNextOptionEnabled];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_IsPreviousOptionEnabled]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_IsPreviousOptionEnabled];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_NextCount]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_NextCount];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_NextOptionType]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_NextOptionType];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_NotificationType]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_NotificationType];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_PreviousCount]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_PreviousCount];


GO
PRINT N'Dropping [dbo].[DF_NotificationDateRangeSetting_PreviousOptionType]...';


GO
ALTER TABLE [dbo].[NotificationDateRangeSetting] DROP CONSTRAINT [DF_NotificationDateRangeSetting_PreviousOptionType];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_DayOfWeek]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_DayOfWeek];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_DaysFrom]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_DaysFrom];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_DayStartType]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_DayStartType];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_EndTime]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_EndTime];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_IsDeleted]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_IsHoliday]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_IsHoliday];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_IsOutsideSchedule]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_IsOutsideSchedule];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_IsUnscheduled]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_IsUnscheduled];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_NumberOfDays]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_NumberOfDays];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_OutsideScheduleType]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_OutsideScheduleType];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_OvertimeRuleID]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_OvertimeRuleID];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_OvertimeRuleName]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_OvertimeRuleName];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_OvertimeRuleType]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_OvertimeRuleType];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_StartTime]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_StartTime];


GO
PRINT N'Dropping [dbo].[DF_OvertimeRule_Threshold]...';


GO
ALTER TABLE [dbo].[OvertimeRule] DROP CONSTRAINT [DF_OvertimeRule_Threshold];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_AllowPasswordReuse]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_AllowPasswordReuse];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_ExpiresAfterDays]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_ExpiresAfterDays];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MaxPasswordAttempts]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MaxPasswordAttempts];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MinCharacters]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MinCharacters];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MinLowerCaseCharacters]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MinLowerCaseCharacters];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MinNumericSpecialCharacters]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MinNumericSpecialCharacters];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MinSpecialCharacters]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MinSpecialCharacters];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_MinUpperCaseCharacters]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_MinUpperCaseCharacters];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_PasswordLockoutTime]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_PasswordLockoutTime];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_PasswordPolicyName]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_PasswordPolicyName];


GO
PRINT N'Dropping [dbo].[DF_PasswordPolicy_ProhibitUserData]...';


GO
ALTER TABLE [dbo].[PasswordPolicy] DROP CONSTRAINT [DF_PasswordPolicy_ProhibitUserData];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_AllowEmpEntry]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_AllowEmpEntry];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_IncludeInWAOT]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_IncludeInWAOT];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_IsDeduction]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_IsDeduction];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_IsDeleted]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_OperatorType]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_OperatorType];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayAdjustmentCode]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayAdjustmentCode];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayAdjustmentID]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayAdjustmentID];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayAdjustmentName]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayAdjustmentName];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayAdjustmentType]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayAdjustmentType];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayPerUnit]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayPerUnit];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_PayrollUniqueID]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_PayrollUniqueID];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_UnitLabel]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_UnitLabel];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_UseEmpPayRate]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_UseEmpPayRate];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustment_UseFormula]...';


GO
ALTER TABLE [dbo].[PayAdjustment] DROP CONSTRAINT [DF_PayAdjustment_UseFormula];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_Amount]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_Amount];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_EmpApproved]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_EmpApproved];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_IsClosed]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_IsClosed];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_IsModified]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_IsModified];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID1]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID10]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID11]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID12]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID13]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID14]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID15]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID2]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID3]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID4]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID5]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID6]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID7]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID8]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_LLDetailID9]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_MgrApproved]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_MgrApproved];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_Notes]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_Notes];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_PayAdjustmentDataSource]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDataSource];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_PayAdjustmentDataType]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDataType];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_PayAdjustmentDate]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDate];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_PayAdjustmentID]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentID];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_PayPerUnit]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_PayPerUnit];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_Unit]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_Unit];


GO
PRINT N'Dropping [dbo].[DF_PayAdjustmentData_UserID]...';


GO
ALTER TABLE [dbo].[PayAdjustmentData] DROP CONSTRAINT [DF_PayAdjustmentData_UserID];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_PaychexRateHash]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_PaychexRateHash];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_PayRate]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_PayRate];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_RateNumber]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_RateNumber];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PaychexRate_UserID]...';


GO
ALTER TABLE [dbo].[PaychexRate] DROP CONSTRAINT [DF_PaychexRate_UserID];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompone__Code__5ECA0095];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompon__Stand__5FBE24CE];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompon__Payro__60B24907];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompon__Start__61A66D40];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompon__EndDa__629A9179];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayComponent]...';


GO
ALTER TABLE [dbo].[PayComponent] DROP CONSTRAINT [DF__PayCompon__IsPay__638EB5B2];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayrollCheckDate]...';


GO
ALTER TABLE [dbo].[PayrollCheckDate] DROP CONSTRAINT [DF__PayrollCh__Curre__6576FE24];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayrollCheckDate]...';


GO
ALTER TABLE [dbo].[PayrollCheckDate] DROP CONSTRAINT [DF__PayrollCh__Check__666B225D];


GO
PRINT N'Dropping unnamed constraint on [dbo].[PayrollCheckDate]...';


GO
ALTER TABLE [dbo].[PayrollCheckDate] DROP CONSTRAINT [DF__PayrollCh__IsPay__675F4696];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_AllowManBreakOverride]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_AllowManBreakOverride];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_AllowManLunchOverride]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_AllowManLunchOverride];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_AllowTORReplacePartTimeSheets]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_AllowTORReplacePartTimeSheets];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_AllowTORReplaceTimeSheets]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_AllowTORReplaceTimeSheets];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakDurationRoundingEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakDurationRoundingSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakDurationRoundingType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundDownLessThanSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundDownLessThanSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundInSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundInSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundInType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundInType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundOutSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundOutSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundOutType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundOutType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundShortDownEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundShortDownEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundShortDownToSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundShortDownToSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundShortUpAtLeastSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpAtLeastSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundShortUpEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakRoundShortUpToSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpToSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_BreakType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_BreakType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_CountTimeTowardsType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_CountTimeTowardsType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_CustomPayPeriodDateType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_CustomPayPeriodDateType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_DaySplitEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_DaySplitEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_DefaultShiftLengthSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_DefaultShiftLengthSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_GraceMaxSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_GraceMaxSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolApplyOnNextDay]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolApplyOnNextDay];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolApplyTowardsOvertime]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolApplyTowardsOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolMinDaysOfEmployment]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolMinDaysOfEmployment];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolMinSecsDayAfter]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolMinSecsDayAfter];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolMinSecsDayBefore]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolMinSecsDayBefore];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolMustWorkSchedIfCompanyWork]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolMustWorkSchedIfCompanyWork];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolPayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolQualifyOnTimeWorkRequired]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolQualifyOnTimeWorkRequired];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolQualifyOnTimeWorkType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolQualifyOnTimeWorkType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolQualifyRequiredToWorkType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolQualifyRequiredToWorkType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolSchedToWork]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolSchedToWork];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolUnworkLunchSecsToSubtract]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolUnworkLunchSecsToSubtract];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolUnworkSecsToAdd]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolUnworkSecsToAdd];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolUnworkType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolUnworkType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolUnworkWeeksCountForAvgSched]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolUnworkWeeksCountForAvgSched];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolUnworkWeeksCountForAvgWork]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolUnworkWeeksCountForAvgWork];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkHoursFactor]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkHoursFactor];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkHoursFactorEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkHoursFactorEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkLunchSecsToSubtract]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkLunchSecsToSubtract];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkSecsToAdd]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkSecsToAdd];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkWeeksCountForAvgSched]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkWeeksCountForAvgSched];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_HolWorkWeeksCountForAvgWork]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_HolWorkWeeksCountForAvgWork];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_IsDefault]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_IsDefault];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchDurationRoundingEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchDurationRoundingSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchDurationRoundingType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundAdditionalEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundAdditionalPayType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalPayType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundAdditionalSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundDownLessThanSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundDownLessThanSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundInSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundInSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundInType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundInType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundLongDownToSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundLongDownToSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundLongEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundLongEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundLongLessThanSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundLongLessThanSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundOutSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundOutSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundOutType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundOutType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundShortDownEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundShortDownEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundShortDownToSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundShortDownToSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundShortUpAtLeastSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpAtLeastSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundShortUpEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchRoundShortUpToSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpToSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_LunchType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_LunchType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MaxShiftLengthSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MaxShiftLengthSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremPunchAllowedPayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremPunchAllowedPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremPunchAllowedSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremPunchAllowedSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremPunchEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremPunchSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremPunchSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremPunchType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremPunchType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremWorkAllowedPayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremWorkAllowedPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremWorkAllowedSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremWorkAllowedSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremWorkEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremWorkEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremWorkMinWorkSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremWorkMinWorkSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MealPremWorkSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MealPremWorkSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_MissingPunchBufferSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_MissingPunchBufferSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_NineEightyRuleEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_NineEightyRuleEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PaidBreakShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PaidBreakShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PaidLunchShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PaidLunchShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PayPeriodMonthlyDay]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PayPeriodMonthlyDay];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PayPeriodSemiMonthlyDay]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PayPeriodSemiMonthlyDay];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PayPeriodType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PayPeriodType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PayrollPolicyName]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PayrollPolicyName];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledBreaks]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledBreaks];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledMeals]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledMeals];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledOverride]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledOverride];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledOverrideSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledOverrideSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledTransactions]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledTransactions];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_PopulateScheduledTransfers]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_PopulateScheduledTransfers];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RejectDuplicatePunchWithinSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RejectDuplicatePunchWithinSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RejectOpposingPunchWithinSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RejectOpposingPunchWithinSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundInAfterSchedule]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundInAfterSchedule];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundInBeforeSchedule]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundInBeforeSchedule];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundInTimesTo]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundInTimesTo];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundInType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundInType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundNonWorkTimesTo]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundNonWorkTimesTo];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundNonWorkType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundNonWorkType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundOutAfterSchedule]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundOutAfterSchedule];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundOutBeforeSchedule]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundOutBeforeSchedule];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundOutTimesTo]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundOutTimesTo];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundOutType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundOutType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundTransferTimesTo]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundTransferTimesTo];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_RoundTransferType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_RoundTransferType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SpreadOfHoursPayDuration]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayDuration];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SpreadOfHoursPayEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SpreadOfHoursPayPayRate]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayPayRate];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SpreadOfHoursPayPunchTimeType]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayPunchTimeType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoBreakEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoBreakEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoBreaklWindowSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoBreaklWindowSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoMealEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoMealEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoMealWindowSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoMealWindowSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoTransferEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoTransferEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_SwipeNGoTransferWindowSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_SwipeNGoTransferWindowSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_UseBlendedRateEnabled]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_UseBlendedRateEnabled];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_WorkDaySplitAt]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_WorkDaySplitAt];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicy_WorkWeekStartDay]...';


GO
ALTER TABLE [dbo].[PayrollPolicy] DROP CONSTRAINT [DF_PayrollPolicy_WorkWeekStartDay];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyAssign] DROP CONSTRAINT [DF_PayrollPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_ApplyBreakToOvertime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ApplyBreakToOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_AutoBreakType]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_AutoBreakType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_BreakEndSecsAfterClockIn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakEndSecsAfterClockIn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_BreakSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_BreakStartAtTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakStartAtTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_BreakStartSecsAfterClockIn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakStartSecsAfterClockIn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_BreakUnpaidSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakUnpaidSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_IsBreakPaid]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_IsBreakPaid];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_PayrollPolicyBreakAutoDetailID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_PayrollPolicyBreakAutoDetailID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakAutoDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_ApplyBreakToOvertime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_ApplyBreakToOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_BreakAvailableAfterSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_BreakAvailableAfterSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_IsBreakPaid]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_IsBreakPaid];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_MaxBreakPaidSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_MaxBreakPaidSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_PayrollPolicyBreakManDetailID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_PayrollPolicyBreakManDetailID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyBreakManDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyBreakManDetail] DROP CONSTRAINT [DF_PayrollPolicyBreakManDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_EndDate]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_EndDate];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_PayrollPolicyCustomPayPeriodID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_PayrollPolicyCustomPayPeriodID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_StartDate]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_StartDate];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyCustomPayPeriod_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyCustomPayPeriod] DROP CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_ApplyLunchToOvertime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ApplyLunchToOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_AutoLunchType]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_AutoLunchType];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_IsLunchPaid]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_IsLunchPaid];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_LunchEndSecsAfterClockIn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchEndSecsAfterClockIn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_LunchSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_LunchStartAtTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchStartAtTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_LunchStartSecsAfterClockIn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchStartSecsAfterClockIn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_LunchUnpaidSecs]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchUnpaidSecs];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_PayrollPolicyLunchAutoDetailID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_PayrollPolicyLunchAutoDetailID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchAutoDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchAutoDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchManDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchManDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchManDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchManDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchManDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchManDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchManDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchManDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchManDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchManDetail_PayrollPolicyLunchManDetailID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchManDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchManDetail_PayrollPolicyLunchManDetailID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyLunchManDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyLunchManDetail] DROP CONSTRAINT [DF_PayrollPolicyLunchManDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_OvertimePayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OvertimePayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_OvertimeRuleID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OvertimeRuleID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_PayrollPolicyOvertimeAssignID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_PayrollPolicyOvertimeAssignID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeAssign_Threshold]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeAssign] DROP CONSTRAINT [DF_PayrollPolicyOvertimeAssign_Threshold];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_LevelIndex]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_LevelIndex];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_OvertimePayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_OvertimePayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_PayrollPolicyID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_PayrollPolicyOvertimeLevelID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayrollPolicyOvertimeLevelID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_PayTypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayrollPolicyOvertimeLevel_WorkOvertimePaytypeID]...';


GO
ALTER TABLE [dbo].[PayrollPolicyOvertimeLevel] DROP CONSTRAINT [DF_PayrollPolicyOvertimeLevel_WorkOvertimePaytypeID];


GO
PRINT N'Dropping [dbo].[DF_PayrollTransmissionMaster_IsHoursByDay]...';


GO
ALTER TABLE [dbo].[PayrollTransmissionMaster] DROP CONSTRAINT [DF_PayrollTransmissionMaster_IsHoursByDay];


GO
PRINT N'Dropping [dbo].[DF_PayrollTransmissionResult_CreateDate]...';


GO
ALTER TABLE [dbo].[PayrollTransmissionResult] DROP CONSTRAINT [DF_PayrollTransmissionResult_CreateDate];


GO
PRINT N'Dropping [dbo].[DF_PayType_AllowShiftDiff]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_AllowShiftDiff];


GO
PRINT N'Dropping [dbo].[DF_PayType_ApplyToOvertime]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_ApplyToOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayType_ApplyToTimeOff]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_ApplyToTimeOff];


GO
PRINT N'Dropping [dbo].[DF_PayType_CanBeOvertime]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_CanBeOvertime];


GO
PRINT N'Dropping [dbo].[DF_PayType_ColorCode]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_ColorCode];


GO
PRINT N'Dropping [dbo].[DF_PayType_CountTowardsHolidayMin]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_CountTowardsHolidayMin];


GO
PRINT N'Dropping [dbo].[DF_PayType_DeductFromPayType]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_DeductFromPayType];


GO
PRINT N'Dropping [dbo].[DF_PayType_DeductFromPayType_1]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_DeductFromPayType_1];


GO
PRINT N'Dropping [dbo].[DF_PayType_DefaultPayLevelRateType]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_DefaultPayLevelRateType];


GO
PRINT N'Dropping [dbo].[DF_PayType_EndDateTime]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayType_IncludeInBlendedRate]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IncludeInBlendedRate];


GO
PRINT N'Dropping [dbo].[DF_PayType_IsDeleted]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_PayType_IsDurationOnly]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IsDurationOnly];


GO
PRINT N'Dropping [dbo].[DF_PayType_IsLLRequired]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IsLLRequired];


GO
PRINT N'Dropping [dbo].[DF_PayType_IsOvertimeType]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IsOvertimeType];


GO
PRINT N'Dropping [dbo].[DF_PayType_IsWorkType]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_IsWorkType];


GO
PRINT N'Dropping [dbo].[DF_PayType_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PayType_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PayType_OverridesAbsence]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_OverridesAbsence];


GO
PRINT N'Dropping [dbo].[DF_PayType_OvertimeFactor]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_OvertimeFactor];


GO
PRINT N'Dropping [dbo].[DF_PayType_PayTypeCode]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_PayTypeCode];


GO
PRINT N'Dropping [dbo].[DF_PayType_PayTypeID]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PayType_PayTypeName]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_PayTypeName];


GO
PRINT N'Dropping [dbo].[DF_PayType_StartDateTime]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PayType_TimeOffPayTypeID]...';


GO
ALTER TABLE [dbo].[PayType] DROP CONSTRAINT [DF_PayType_TimeOffPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_AwardAmount]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_AwardAmount];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_Duration]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_Duration];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_PerfectAttendanceDetailID]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_PerfectAttendanceDetailID];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_RangeType]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_RangeType];


GO
PRINT N'Dropping [dbo].[DF_PerfectAttendanceDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PerfectAttendanceDetail] DROP CONSTRAINT [DF_PerfectAttendanceDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_ApplyToDate]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_ApplyToDate];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_ExceptionPolicyRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_ExceptionPolicyRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_HashKey]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_HashKey];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_IsExcused]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_IsExcused];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_IsModified]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_IsModified];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_IsNotified]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_IsNotified];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_Note]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_Note];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_Points]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_Points];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_PointsSource]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_PointsSource];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_TimeSlicePostExceptionDetailID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_TimeSlicePostExceptionDetailID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_TimeSlicePostID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_TimeSlicePostID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_TimeSlicePreModifierID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_TimeSlicePreModifierID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingData_UserID]...';


GO
ALTER TABLE [dbo].[PointsTrackingData] DROP CONSTRAINT [DF_PointsTrackingData_UserID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_HelpFileName]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_HelpFileName];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_IsOverThreshold]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_IsOverThreshold];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_NotificationDiscussed]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_NotificationDiscussed];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_NotifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_NotifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_Points]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_Points];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_PointsTrackingNoticeID]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_PointsTrackingNoticeID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_StatusType]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_StatusType];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingDetail_UserID]...';


GO
ALTER TABLE [dbo].[PointsTrackingDetail] DROP CONSTRAINT [DF_PointsTrackingDetail_UserID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_ActionType]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_ActionType];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_AttachHelpFileEnabled]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_AttachHelpFileEnabled];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_HelpFileName]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_HelpFileName];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_NoticeName]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_NoticeName];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_NoticeText]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_NoticeText];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_NotifyAfterLowLevelEnabled]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_NotifyAfterLowLevelEnabled];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_PointsTrackingNoticeID]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_PointsTrackingNoticeID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_PointsTrackingPolicyID]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_PointsTrackingPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_RecipientType]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_RecipientType];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_RollingDays]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_RollingDays];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_RollingPeriodType]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_RollingPeriodType];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNotice_Threshold]...';


GO
ALTER TABLE [dbo].[PointsTrackingNotice] DROP CONSTRAINT [DF_PointsTrackingNotice_Threshold];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_PointsTrackingNoticeDetailID]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingNoticeDetailID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_PointsTrackingNoticeID]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingNoticeID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingNoticeDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingNoticeDetail] DROP CONSTRAINT [DF_PointsTrackingNoticeDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_DesignatedUserID]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_DesignatedUserID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_LocationLLID]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_LocationLLID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_PointsTrackingPolicyID]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_PointsTrackingPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_PointsTrackingPolicyName]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_PointsTrackingPolicyName];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicy] DROP CONSTRAINT [DF_PointsTrackingPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_PointsTrackingPolicyID]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_PointsTrackingPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[PointsTrackingPolicyAssign] DROP CONSTRAINT [DF_PointsTrackingPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_PointsTrackingPolicyID]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_PointsTrackingPolicyID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_RuleName]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_RuleName];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingRule] DROP CONSTRAINT [DF_PointsTrackingRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_ExceptionPolicyRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_ExceptionPolicyRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_ExcusedPoints]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_ExcusedPoints];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_Points]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_Points];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_PointsTrackingRuleDetailID]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_PointsTrackingRuleDetailID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_PointsTrackingRuleID]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_PointsTrackingRuleID];


GO
PRINT N'Dropping [dbo].[DF_PointsTrackingRuleDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[PointsTrackingRuleDetail] DROP CONSTRAINT [DF_PointsTrackingRuleDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF__Preferenc__Email__78958AE7]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF__Preferenc__Email__78958AE7];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionDefaultDateRangeType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionDefaultDateRangeType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionEnablePercentLLTimeEntry]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionEnablePercentLLTimeEntry];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionMatrixEntryEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionMatrixEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionMatrixEntryLimitTypes]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionMatrixEntryLimitTypes];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionMatrixEntryType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionMatrixEntryType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionMatrixHasCopyFormat]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionMatrixHasCopyFormat];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionMatrixHasRegOTEntry]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionMatrixHasRegOTEntry];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPeriodEntryEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPeriodEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPeriodEntryHasCopyFormat]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPeriodEntryHasCopyFormat];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPeriodEntryLimitTypes]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPeriodEntryLimitTypes];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPeriodEntryType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPeriodEntryType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPeriodHasRegOTEntry]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPeriodHasRegOTEntry];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPostShiftTransferEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPostShiftTransferEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionPunchEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempEntryCopyFormat]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempEntryCopyFormat];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempEntryEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempEntryLimitTypes]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempEntryLimitTypes];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempEntryType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempEntryType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempHasEmpEdit]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempHasEmpEdit];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempHasRegOTEntry]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempHasRegOTEntry];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTempPopulateFromSchedule]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTempPopulateFromSchedule];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetEntryEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetEntryFormatType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetEntryFormatType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetEntryLimitTypes]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetEntryLimitTypes];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetEntryType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetEntryType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetExFormatType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetExFormatType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimeSheetExHasCopyFormat]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimeSheetExHasCopyFormat];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetExLimitTypes]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetExLimitTypes];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetExpressEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetExpressEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetExType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetExType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetHasRegOTEntry]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetHasRegOTEntry];


GO
PRINT N'Dropping [dbo].[DF_Preference_ActionTimesheetHasRegOTEx]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ActionTimesheetHasRegOTEx];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowArbitaryLLs]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowArbitaryLLs];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowChangePassword]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowChangePassword];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowMgrApprovedPunchEdit]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowMgrApprovedPunchEdit];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowPreferenceOverride]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowPreferenceOverride];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowViewEmpNamesOnTORCalender]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowViewEmpNamesOnTORCalender];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowViewHolidayOnTORCalender]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowViewHolidayOnTORCalender];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowViewStatusBoard]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowViewStatusBoard];


GO
PRINT N'Dropping [dbo].[DF_Preference_AllowViewTORCalender]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AllowViewTORCalender];


GO
PRINT N'Dropping [dbo].[DF_Preference_ApplyScheduledLLsSecs]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ApplyScheduledLLsSecs];


GO
PRINT N'Dropping [dbo].[DF_Preference_ApprovalButtonEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ApprovalButtonEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ArbitraryLaborLevelOffset]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ArbitraryLaborLevelOffset];


GO
PRINT N'Dropping [dbo].[DF_Preference_AssignProxyMgrEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_AssignProxyMgrEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ClockInLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ClockInLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_CompactModeEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_CompactModeEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_CurrencyFormatType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_CurrencyFormatType];


GO
PRINT N'Dropping [dbo].[DF_Preference_CurrencyLabel]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_CurrencyLabel];


GO
PRINT N'Dropping [dbo].[DF_Preference_CustomTimeCardEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_CustomTimeCardEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_CustomTimeCardShowMealBreak]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_CustomTimeCardShowMealBreak];


GO
PRINT N'Dropping [dbo].[DF_Preference_DateFormatType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DateFormatType];


GO
PRINT N'Dropping [dbo].[DF_Preference_DefaultMobileSiteViewType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DefaultMobileSiteViewType];


GO
PRINT N'Dropping [dbo].[DF_Preference_DefaultThemeType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DefaultThemeType];


GO
PRINT N'Dropping [dbo].[DF_Preference_DefaultTimeCardToCurrentDate]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DefaultTimeCardToCurrentDate];


GO
PRINT N'Dropping [dbo].[DF_Preference_DefaultToClockOutAfterClockIn]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DefaultToClockOutAfterClockIn];


GO
PRINT N'Dropping [dbo].[DF_Preference_DefaultToSchedule]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DefaultToSchedule];


GO
PRINT N'Dropping [dbo].[DF_Preference_DisplayExceptionsScreen]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DisplayExceptionsScreen];


GO
PRINT N'Dropping [dbo].[DF_Preference_DisplayMissingPunchesScreen]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_DisplayMissingPunchesScreen];


GO
PRINT N'Dropping [dbo].[DF_Preference_EmailForMessageDisabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EmailForMessageDisabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_EmpHomePayAdjustmentsLabel]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EmpHomePayAdjustmentsLabel];


GO
PRINT N'Dropping [dbo].[DF_Preference_EmpInfoModalDisabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EmpInfoModalDisabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_EmpLinkToViewType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EmpLinkToViewType];


GO
PRINT N'Dropping [dbo].[DF_Preference_EndBreakLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EndBreakLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_EndMealLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_EndMealLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ExpandAllTimeCardsByDefault]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ExpandAllTimeCardsByDefault];


GO
PRINT N'Dropping [dbo].[DF_Preference_FullNameType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_FullNameType];


GO
PRINT N'Dropping [dbo].[DF_Preference_HideTransferOnEmpDash]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_HideTransferOnEmpDash];


GO
PRINT N'Dropping [dbo].[DF_Preference_HideUnpaidHours]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_HideUnpaidHours];


GO
PRINT N'Dropping [dbo].[DF_Preference_IncludeMgrForExceptions]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_IncludeMgrForExceptions];


GO
PRINT N'Dropping [dbo].[DF_Preference_IncludeMgrForMissingPunch]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_IncludeMgrForMissingPunch];


GO
PRINT N'Dropping [dbo].[DF_Preference_IsDefault]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_IsDefault];


GO
PRINT N'Dropping [dbo].[DF_Preference_IsEditTimeSheetEntriesByHours]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_IsEditTimeSheetEntriesByHours];


GO
PRINT N'Dropping [dbo].[DF_Preference_LLAutoCompleteEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_LLAutoCompleteEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_LLDetailDisplayType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_LLDetailDisplayType];


GO
PRINT N'Dropping [dbo].[DF_Preference_MessageBeforeTimeCard]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MessageBeforeTimeCard];


GO
PRINT N'Dropping [dbo].[DF_Preference_MessageBeforeTimeCardEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MessageBeforeTimeCardEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_MessageBeforeTimeCardText]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MessageBeforeTimeCardText];


GO
PRINT N'Dropping [dbo].[DF_Preference_MessagesEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MessagesEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_MgrInfoModalDisabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MgrInfoModalDisabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileDisplayAllLLEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileDisplayAllLLEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn1]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn1];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn2]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn2];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn3]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn3];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn4]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn4];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn5]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn5];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn6]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn6];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobileTimeSheetColumn7]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobileTimeSheetColumn7];


GO
PRINT N'Dropping [dbo].[DF_Preference_MobTimeSheetHoursOnlyEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_MobTimeSheetHoursOnlyEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Preference_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Preference_OnScreenWalkthroughEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_OnScreenWalkthroughEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_PreferenceCode]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_PreferenceCode];


GO
PRINT N'Dropping [dbo].[DF_Preference_PreferenceName]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_PreferenceName];


GO
PRINT N'Dropping [dbo].[DF_Preference_PunchLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_PunchLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ReadMessageButtonEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ReadMessageButtonEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ReplaceSchedTimesheetWithTOR]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ReplaceSchedTimesheetWithTOR];


GO
PRINT N'Dropping [dbo].[DF_Preference_ReportsEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ReportsEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_RestrictToScheduleSecs]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_RestrictToScheduleSecs];


GO
PRINT N'Dropping [dbo].[DF_Preference_ScheduleDefaultViewType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ScheduleDefaultViewType];


GO
PRINT N'Dropping [dbo].[DF_Preference_ScheduleEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ScheduleEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_SessionTimeoutSecs]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_SessionTimeoutSecs];


GO
PRINT N'Dropping [dbo].[DF_Preference_ShowOnlyActiveLLScheduleTemp_1]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ShowOnlyActiveLLScheduleTemp_1];


GO
PRINT N'Dropping [dbo].[DF_Preference_StartBreakLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StartBreakLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_StartMealLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StartMealLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_StatusBoardEmpDisplayType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StatusBoardEmpDisplayType];


GO
PRINT N'Dropping [dbo].[DF_Preference_StatusBoardNotesEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StatusBoardNotesEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_StatusBoardPunchTimeEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StatusBoardPunchTimeEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_StatusBoardViewAllEmpEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_StatusBoardViewAllEmpEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardApprovalMessage]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardApprovalMessage];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardApprovalMessageEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardApprovalMessageEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardApprovalPeriodType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardApprovalPeriodType];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardApprovalsEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardApprovalsEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardDefaultPeriodType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardDefaultPeriodType];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardDefaultToHomeLL]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardDefaultToHomeLL];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column2Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column2Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column2Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column2Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column3Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column3Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column3Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column3Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column4Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column4Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column4Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column4Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column5Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column5Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow1Column5Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow1Column5Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column1Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column1Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column1Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column1Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column2Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column2Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column2Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column2Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column3Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column3Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column3Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column3Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column4Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column4Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column4Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column4Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column5Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column5Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow2Column5Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow2Column5Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column1Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column1Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column1Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column1Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column2Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column2Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column2Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column2Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column3Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column3Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column3Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column3Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column4Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column4Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column4Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column4Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column5Type]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column5Type];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardInfoRow3Column5Value]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardInfoRow3Column5Value];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardOTDetailsEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardOTDetailsEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardShiftDiffDetailEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardShiftDiffDetailEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeCardSummaryViewEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeCardSummaryViewEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeDurationType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeDurationType];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeFormatType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeFormatType];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeGapRange]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeGapRange];


GO
PRINT N'Dropping [dbo].[DF_Preference_TimeOffEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TimeOffEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TORCalendarHomeLLs]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TORCalendarHomeLLs];


GO
PRINT N'Dropping [dbo].[DF_Preference_TORCalendarSettingID]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TORCalendarSettingID];


GO
PRINT N'Dropping [dbo].[DF_Preference_TORCalenderEmpGroupType]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TORCalenderEmpGroupType];


GO
PRINT N'Dropping [dbo].[DF_Preference_TOREnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TOREnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_TransferLLPromptEnabled]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_TransferLLPromptEnabled];


GO
PRINT N'Dropping [dbo].[DF_Preference_ViewAknowledgedExceptions]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [DF_Preference_ViewAknowledgedExceptions];


GO
PRINT N'Dropping [dbo].[Preference_UseHoursByDay_Default]...';


GO
ALTER TABLE [dbo].[Preference] DROP CONSTRAINT [Preference_UseHoursByDay_Default];


GO
PRINT N'Dropping [dbo].[DF_PreferenceActionsEntryPayType_ActionSectionType]...';


GO
ALTER TABLE [dbo].[PreferenceActionsEntryPayType] DROP CONSTRAINT [DF_PreferenceActionsEntryPayType_ActionSectionType];


GO
PRINT N'Dropping [dbo].[DF_PreferenceActionsEntryPayType_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceActionsEntryPayType] DROP CONSTRAINT [DF_PreferenceActionsEntryPayType_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceActionsEntryPayType_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceActionsEntryPayType] DROP CONSTRAINT [DF_PreferenceActionsEntryPayType_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceActionsEntryPayType_PayTypeID]...';


GO
ALTER TABLE [dbo].[PreferenceActionsEntryPayType] DROP CONSTRAINT [DF_PreferenceActionsEntryPayType_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceActionsEntryPayType_PreferenceID]...';


GO
ALTER TABLE [dbo].[PreferenceActionsEntryPayType] DROP CONSTRAINT [DF_PreferenceActionsEntryPayType_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceArbitaryLLs_LLID]...';


GO
ALTER TABLE [dbo].[PreferenceArbitaryLLs] DROP CONSTRAINT [DF_PreferenceArbitaryLLs_LLID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceArbitaryLLs_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceArbitaryLLs] DROP CONSTRAINT [DF_PreferenceArbitaryLLs_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceArbitaryLLs_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceArbitaryLLs] DROP CONSTRAINT [DF_PreferenceArbitaryLLs_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceArbitaryLLs_PreferenceID]...';


GO
ALTER TABLE [dbo].[PreferenceArbitaryLLs] DROP CONSTRAINT [DF_PreferenceArbitaryLLs_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_FilterData]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_FilterData];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_FilterID]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_FilterID];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_PreferenceID]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_PeferenceNotificationsSetting_UserSelectionType]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PeferenceNotificationsSetting_UserSelectionType];


GO
PRINT N'Dropping [dbo].[DF_PreferenceNotificationsSetting_NotificationSettingType]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PreferenceNotificationsSetting_NotificationSettingType];


GO
PRINT N'Dropping [dbo].[DF_PreferenceNotificationsSetting_NotificationType]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PreferenceNotificationsSetting_NotificationType];


GO
PRINT N'Dropping [dbo].[DF_PreferenceNotificationsSetting_ShowAllEmployeesInDetailScreen]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PreferenceNotificationsSetting_ShowAllEmployeesInDetailScreen];


GO
PRINT N'Dropping [dbo].[DF_PreferenceNotificationsSetting_UserID]...';


GO
ALTER TABLE [dbo].[PreferenceNotificationsSetting] DROP CONSTRAINT [DF_PreferenceNotificationsSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_EndDate]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_EndDate];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_MgrUserID]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_MgrUserID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_ProxyMgrUserID]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_ProxyMgrUserID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceProxyMgr_StartDate]...';


GO
ALTER TABLE [dbo].[PreferenceProxyMgr] DROP CONSTRAINT [DF_PreferenceProxyMgr_StartDate];


GO
PRINT N'Dropping [dbo].[DF_PreferenceReportAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceReportAssign] DROP CONSTRAINT [DF_PreferenceReportAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceReportAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceReportAssign] DROP CONSTRAINT [DF_PreferenceReportAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceReportAssign_PreferenceID]...';


GO
ALTER TABLE [dbo].[PreferenceReportAssign] DROP CONSTRAINT [DF_PreferenceReportAssign_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceReportAssign_ReportID]...';


GO
ALTER TABLE [dbo].[PreferenceReportAssign] DROP CONSTRAINT [DF_PreferenceReportAssign_ReportID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceReportAssign_ReportSettingID]...';


GO
ALTER TABLE [dbo].[PreferenceReportAssign] DROP CONSTRAINT [DF_PreferenceReportAssign_ReportSettingID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_Duration]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_Duration];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID1]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID10]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID11]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID12]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID13]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID14]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID15]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID2]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID3]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID4]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID5]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID6]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID7]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID8]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_LLDetailID9]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_PayTypeID]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_PreferenceID]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceTimeSheetTemplate_StartTime]...';


GO
ALTER TABLE [dbo].[PreferenceTimeSheetTemplate] DROP CONSTRAINT [DF_PreferenceTimeSheetTemplate_StartTime];


GO
PRINT N'Dropping [dbo].[DF_PreferenceUserOverride_FieldName]...';


GO
ALTER TABLE [dbo].[PreferenceUserOverride] DROP CONSTRAINT [DF_PreferenceUserOverride_FieldName];


GO
PRINT N'Dropping [dbo].[DF_PreferenceUserOverride_ModifiedBy]...';


GO
ALTER TABLE [dbo].[PreferenceUserOverride] DROP CONSTRAINT [DF_PreferenceUserOverride_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_PreferenceUserOverride_ModifiedOn]...';


GO
ALTER TABLE [dbo].[PreferenceUserOverride] DROP CONSTRAINT [DF_PreferenceUserOverride_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_PreferenceUserOverride_UserID]...';


GO
ALTER TABLE [dbo].[PreferenceUserOverride] DROP CONSTRAINT [DF_PreferenceUserOverride_UserID];


GO
PRINT N'Dropping [dbo].[DF_PreferenceUserOverride_Value]...';


GO
ALTER TABLE [dbo].[PreferenceUserOverride] DROP CONSTRAINT [DF_PreferenceUserOverride_Value];


GO
PRINT N'Dropping [dbo].[DF_Product_CancellationEnteredDate]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_CancellationEnteredDate];


GO
PRINT N'Dropping [dbo].[DF_Product_Description]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_Description];


GO
PRINT N'Dropping [dbo].[DF_Product_EndDate]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Product_EndDateTime]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_Product_IsDeleted]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_Product_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Product_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Product_SetupValidationDate]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_SetupValidationDate];


GO
PRINT N'Dropping [dbo].[DF_Product_StartDate]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Product_StartDateTime]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_Product_SystemProductID]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_SystemProductID];


GO
PRINT N'Dropping [dbo].[DF_Product_TargetStartDate]...';


GO
ALTER TABLE [dbo].[Product] DROP CONSTRAINT [DF_Product_TargetStartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_AlertID]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_AlertID];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_ProcessAlertTypes]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_ProcessAlertTypes];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_QueueID]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_QueueID];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_AlertProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_AlertProcess] DROP CONSTRAINT [DF_Queue_AlertProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_ChildRequestIDList]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_ChildRequestIDList];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_CloseDate]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_CloseDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_Date]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_Date];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_Email]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_Email];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_IsLockPayPeriod]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_IsLockPayPeriod];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_UserID_1]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserID_1];


GO
PRINT N'Dropping [dbo].[DF_Queue_CloseTimeCardProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_CloseTimeCardProcess] DROP CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_CustomFieldID]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_CustomFieldID];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_DataDate]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_DataMoney]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataMoney];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_DataNumber]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataNumber];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_DataSelect]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataSelect];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_DataString]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataString];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_CustomFieldDataProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_CustomFieldDataProcess] DROP CONSTRAINT [DF_Queue_CustomFieldDataProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_FTPImport_ImportIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_FTPImport] DROP CONSTRAINT [DF_FTPImport_ImportIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_FTPImport_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_FTPImport] DROP CONSTRAINT [DF_FTPImport_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_FTPImport_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_FTPImport] DROP CONSTRAINT [DF_FTPImport_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_HolidayListID]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_HolidayListID];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_HolidayProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_HolidayProcess] DROP CONSTRAINT [DF_Queue_HolidayProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_JobProcessHistoryID]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_JobProcessHistoryID];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_JobProcessType]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_JobProcessType];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_JobSettingID]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_JobSettingID];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_JobProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_JobProcess] DROP CONSTRAINT [DF_Queue_JobProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_DuplicateEntryDays]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_DuplicateEntryDays];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_IncludeSaturday]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_IncludeSaturday];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_IncludeSunday]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_IncludeSunday];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_ModifierIDs]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifierIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_TransactionType]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_UserID_1]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_UserID_1];


GO
PRINT N'Dropping [dbo].[DF_Queue_MassTimeCardProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_MassTimeCardProcess] DROP CONSTRAINT [DF_Queue_MassTimeCardProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_PayAdjustmentDataIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_PayAdjustmentDataIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_PayAdjustmentIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_PayAdjustmentIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_PayAdjustmentProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_PayAdjustmentProcess] DROP CONSTRAINT [DF_Queue_PayAdjustmentProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_PointsTrackingProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_PointsTrackingProcess] DROP CONSTRAINT [DF_Queue_PointsTrackingProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_ChildRequestIDList]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ChildRequestIDList];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_Email]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_Email];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_IsOpenTimeCard]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_IsOpenTimeCard];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_ReopenDate]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ReopenDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReopenTimeCardProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_ReopenTimeCardProcess] DROP CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_AutoExportMatrixSelectionType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_AutoExportMatrixSelectionType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_CurrentRangeType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_CurrentRangeType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_DataURL]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_DataURL];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_DisplayReportNameEnabled]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_DisplayReportNameEnabled];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_EmailToOthersEnabled]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_EmailToOthersEnabled];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_EmailToUserEnabled]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_EmailToUserEnabled];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ExportCodeID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ExportCodeID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_FilterData]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_FilterData];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_FilterID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_FilterID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtBiWeeklyDay]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtBiWeeklyDay];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtBiWeeklyStartAftrNxt]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtBiWeeklyStartAftrNxt];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtDailyIncludeWeekend]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtDailyIncludeWeekend];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtMonthlyType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtMonthlyType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtOnDate]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtOnDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtSemiMonthlyType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtSemiMonthlyType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtTime]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtTime];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtTimezoneKey]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtTimezoneKey];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_GenerateAtWeeklyDay]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_GenerateAtWeeklyDay];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IncludeFooter]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IncludeFooter];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsAdhoc]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsAdhoc];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsCurrentRange]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsCurrentRange];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsFavorite]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsFavorite];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAsap]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAsap];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAt]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAt];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtBiWeekly]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtBiWeekly];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtDaily]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtDaily];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtMonthly]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtMonthly];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtOn]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtSemiMonthly]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtSemiMonthly];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsGenerateAtWeekly]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtWeekly];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsManExportMatrixSelection]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsManExportMatrixSelection];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsNextRange]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsNextRange];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsPastRange]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsPastRange];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsPreviousRange]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsPreviousRange];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_IsUserDefinedRange]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_IsUserDefinedRange];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_NextRangeType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_NextRangeType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_NextScheduleUtcDateTime]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_NextScheduleUtcDateTime];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_OrderByType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_OrderByType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_OtherEmailAddresses]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_OtherEmailAddresses];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_PastRangeCount]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_PastRangeCount];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_PastRangeType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_PastRangeType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_PreviousRangeType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_PreviousRangeType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_QueueID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_QueueID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_RefPayrollPolicyID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_RefPayrollPolicyID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ReportFormatType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ReportFormatType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ReportID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ReportID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ReportName]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ReportName];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ReportSettingType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ReportSettingType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_ReportSpecificSettings]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_ReportSpecificSettings];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_StatusType]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_StatusType];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_UseCompanyLogo]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_UseCompanyLogo];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_UserDefinedRangeFrom]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_UserDefinedRangeFrom];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_UserDefinedRangeTo]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_UserDefinedRangeTo];


GO
PRINT N'Dropping [dbo].[DF_Queue_ReportSetting_UserID]...';


GO
ALTER TABLE [dbo].[Queue_ReportSetting] DROP CONSTRAINT [DF_Queue_ReportSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_DeleteAfterFirstRun]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_DeleteAfterFirstRun];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_GenerateTo]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_GenerateTo];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_GenerateUntil]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_GenerateUntil];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_ScheduleTempID]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ScheduleTempID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_ScheduleGenerateProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_ScheduleGenerateProcess] DROP CONSTRAINT [DF_Queue_ScheduleGenerateProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_IsScheduled]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_IsScheduled];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_TimeSlicePreIDs]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_TimeSlicePreIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeCardProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_TimeCardProcess] DROP CONSTRAINT [DF_Queue_TimeCardProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_EndDate]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_EndDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_IsScheduled]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_IsScheduled];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_LanguageID]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_PayTypeID]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_StartDate]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_StartDate];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_UserIDs]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_UserIDs];


GO
PRINT N'Dropping [dbo].[DF_Queue_TimeOffProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_TimeOffProcess] DROP CONSTRAINT [DF_Queue_TimeOffProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Queue_UserImportProcess_ImportID]...';


GO
ALTER TABLE [dbo].[Queue_UserImportProcess] DROP CONSTRAINT [DF_Queue_UserImportProcess_ImportID];


GO
PRINT N'Dropping [dbo].[DF_Queue_UserImportProcess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Queue_UserImportProcess] DROP CONSTRAINT [DF_Queue_UserImportProcess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Queue_UserImportProcess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Queue_UserImportProcess] DROP CONSTRAINT [DF_Queue_UserImportProcess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Queue_UserImportProcess_UserID]...';


GO
ALTER TABLE [dbo].[Queue_UserImportProcess] DROP CONSTRAINT [DF_Queue_UserImportProcess_UserID];


GO
PRINT N'Dropping [dbo].[DF_Queue_UserImportProcess_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[Queue_UserImportProcess] DROP CONSTRAINT [DF_Queue_UserImportProcess_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_IsSharedTemplate]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_IsSharedTemplate];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ReportConditions]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ReportConditions];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ReportFields]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ReportFields];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ReportName]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ReportName];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_ShowDurationInDecimal]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_ShowDurationInDecimal];


GO
PRINT N'Dropping [dbo].[DF_ReportAdhoc_UserID]...';


GO
ALTER TABLE [dbo].[ReportAdhoc] DROP CONSTRAINT [DF_ReportAdhoc_UserID];


GO
PRINT N'Dropping [dbo].[DF_ReportAssignment_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ReportAssignment] DROP CONSTRAINT [DF_ReportAssignment_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ReportAssignment_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ReportAssignment] DROP CONSTRAINT [DF_ReportAssignment_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ReportAssignment_ReportID]...';


GO
ALTER TABLE [dbo].[ReportAssignment] DROP CONSTRAINT [DF_ReportAssignment_ReportID];


GO
PRINT N'Dropping [dbo].[DF_ReportData_GeneratedOn]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_GeneratedOn];


GO
PRINT N'Dropping [dbo].[DF_ReportData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ReportData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ReportData_ReportFormatType]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_ReportFormatType];


GO
PRINT N'Dropping [dbo].[DF_ReportData_ReportSettingID]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_ReportSettingID];


GO
PRINT N'Dropping [dbo].[DF_ReportData_UserID]...';


GO
ALTER TABLE [dbo].[ReportData] DROP CONSTRAINT [DF_ReportData_UserID];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_EndDate]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_EndDate];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_ReprocessType]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_ReprocessType];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_StartDate]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_StartDate];


GO
PRINT N'Dropping [dbo].[DF_ReprocessLog_UserIDToProcess]...';


GO
ALTER TABLE [dbo].[ReprocessLog] DROP CONSTRAINT [DF_ReprocessLog_UserIDToProcess];


GO
PRINT N'Dropping [dbo].[DF_Schedule_EndDateTime]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_Schedule_IsAutoGenerated]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_IsAutoGenerated];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID1]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID10]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID11]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID12]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID13]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID14]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID15]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID2]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID3]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID4]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID5]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID6]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID7]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID8]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_Schedule_LLDetailID9]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_Schedule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Schedule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Schedule_PayTypeID]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_Schedule_StartDateTime]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_Schedule_UserID]...';


GO
ALTER TABLE [dbo].[Schedule] DROP CONSTRAINT [DF_Schedule_UserID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_IsAutoGenerated]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_IsAutoGenerated];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID1]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID10]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID11]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID12]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID13]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID14]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID15]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID2]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID3]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID4]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID5]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID6]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID7]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID8]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_LLDetailID9]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_PayTypeID]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_ScheduleID]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_ScheduleID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleDetail] DROP CONSTRAINT [DF_ScheduleDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_AutoGenerate]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_AutoGenerate];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_AutoGeneratedUntil]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_AutoGeneratedUntil];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_AutoGenerateOn]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_AutoGenerateOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_NoOfDays]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_NoOfDays];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_OverrideAutoGenerated]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_OverrideAutoGenerated];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_OverrideManuallyCreated]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_OverrideManuallyCreated];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_ScheduleTempName]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_ScheduleTempName];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTemp_StartDay]...';


GO
ALTER TABLE [dbo].[ScheduleTemp] DROP CONSTRAINT [DF_ScheduleTemp_StartDay];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_ScheduleTempID]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_ScheduleTempID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempAssign_UserID]...';


GO
ALTER TABLE [dbo].[ScheduleTempAssign] DROP CONSTRAINT [DF_ScheduleTempAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_DayIndexIn]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_DayIndexIn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_DayIndexOut]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_DayIndexOut];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_EndDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID1]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID10]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID11]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID12]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID13]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID14]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID15]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID2]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID3]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID4]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID5]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID6]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID7]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID8]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_LLDetailID9]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_PayTypeID]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_ScheduleTempID]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_ScheduleTempID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempSchedule_StartDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempSchedule] DROP CONSTRAINT [DF_ScheduleTempSchedule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_DayIndexIn]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_DayIndexIn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_DayIndexOut]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_DayIndexOut];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID1]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID10]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID11]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID12]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID13]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID14]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID15]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID2]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID3]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID4]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID5]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID6]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID7]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID8]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_LLDetailID9]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_PayTypeID]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_ScheduleTempScheduleID]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_ScheduleTempScheduleID];


GO
PRINT N'Dropping [dbo].[DF_ScheduleTempScheduleDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[ScheduleTempScheduleDetail] DROP CONSTRAINT [DF_ScheduleTempScheduleDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_SessionState_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SessionState] DROP CONSTRAINT [DF_SessionState_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SessionState_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SessionState] DROP CONSTRAINT [DF_SessionState_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SessionState_SessionValue]...';


GO
ALTER TABLE [dbo].[SessionState] DROP CONSTRAINT [DF_SessionState_SessionValue];


GO
PRINT N'Dropping [dbo].[DF_SessionState_UserID]...';


GO
ALTER TABLE [dbo].[SessionState] DROP CONSTRAINT [DF_SessionState_UserID];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_FilterData]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_FilterData];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_FilterID]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_FilterID];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_SharedTemplateType]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_SharedTemplateType];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_TemplateID]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_TemplateID];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplate_TemplateOptionType]...';


GO
ALTER TABLE [dbo].[SharedTemplate] DROP CONSTRAINT [DF_SharedTemplate_TemplateOptionType];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplateUser_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SharedTemplateUser] DROP CONSTRAINT [DF_SharedTemplateUser_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplateUser_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SharedTemplateUser] DROP CONSTRAINT [DF_SharedTemplateUser_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplateUser_SharedTemplateID]...';


GO
ALTER TABLE [dbo].[SharedTemplateUser] DROP CONSTRAINT [DF_SharedTemplateUser_SharedTemplateID];


GO
PRINT N'Dropping [dbo].[DF_SharedTemplateUser_UserID]...';


GO
ALTER TABLE [dbo].[SharedTemplateUser] DROP CONSTRAINT [DF_SharedTemplateUser_UserID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_AllowOverlapping]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_AllowOverlapping];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_EndDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_NoShiftDiffOnOvertime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_NoShiftDiffOnOvertime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_OverlappingType]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_OverlappingType];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_OverridePayTypeQualifier]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_OverridePayTypeQualifier];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_ShiftDiffAfterOvertimeEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffAfterOvertimeEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_ShiftDiffPolicyID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_ShiftDiffPolicyName]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffPolicyName];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicy_StartDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicy] DROP CONSTRAINT [DF_ShiftDiffPolicy_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_ShiftDiffPolicyID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_ShiftDiffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyAssign] DROP CONSTRAINT [DF_ShiftDiffPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_AdditionalWage]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_AdditionalWage];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_DayOfWeek]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_DayOfWeek];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_DoesNotWorkTimeSpanShiftCodeID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_DoesNotWorkTimeSpanShiftCodeID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_DoesNotWorkTimespanShouldGetSD]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_DoesNotWorkTimespanShouldGetSD];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_Duration]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_Duration];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtw]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtw];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwEndTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwEndTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwStartTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwStartTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_IsDeleted]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkAdvancedRulesEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkAdvancedRulesEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkApplyToEntireShift]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkApplyToEntireShift];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffType]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffType];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiff]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiff];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiffSecs]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiffSecs];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkNonFixShiftDiffType]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkNonFixShiftDiffType];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_NonWorkShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_PayFactor]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_PayFactor];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ShiftDiffCode]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffCode];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ShiftDiffDisabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffDisabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ShiftDiffPolicyDetailID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffPolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_ShiftDiffPolicyID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_StartTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_StartTime];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkAdvancedRulesEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkAdvancedRulesEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkApplyToEntireShift]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkApplyToEntireShift];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkFixShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkFixShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkFixShiftDiffType]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkFixShiftDiffType];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkMinInShiftDiff]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMinInShiftDiff];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkMinInShiftDiffSecs]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMinInShiftDiffSecs];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkMustTimeBtw1]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtw1];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkMustTimeBtwEndTime1]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtwEndTime1];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkMustTimeBtwStartTime1]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtwStartTime1];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkNonFixShiftDiffType]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNonFixShiftDiffType];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiff1]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiff1];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiffCode1]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiffCode1];


GO
PRINT N'Dropping [dbo].[DF_ShiftDiffPolicyDetail_WorkShiftDiffEnabled]...';


GO
ALTER TABLE [dbo].[ShiftDiffPolicyDetail] DROP CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkShiftDiffEnabled];


GO
PRINT N'Dropping [dbo].[DF_SSOLogin_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SSOLogin] DROP CONSTRAINT [DF_SSOLogin_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SSOLogin_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SSOLogin] DROP CONSTRAINT [DF_SSOLogin_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_EmpNote]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_EmpNote];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID1]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID10]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID11]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID12]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID13]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID14]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID15]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID2]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID3]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID4]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID5]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID6]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID7]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID8]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_LLDetailID9]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_ModifiedBy]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_ModifiedOn]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_StatusType]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_StatusType];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_TransactionDateTime]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_TransactionDateTime];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_TransactionType]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_TransactionUTCDateTime]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_TransactionUTCDateTime];


GO
PRINT N'Dropping [dbo].[DF_StatusBoard_UserID]...';


GO
ALTER TABLE [dbo].[StatusBoard] DROP CONSTRAINT [DF_StatusBoard_UserID];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_ApproachingOTLimitSecs]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_ApproachingOTLimitSecs];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_HomeWidgetSettingType]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_HomeWidgetSettingType];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_PreferenceID]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSetting_UserID]...';


GO
ALTER TABLE [dbo].[StatusBoardSetting] DROP CONSTRAINT [DF_StatusBoardSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSettingDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[StatusBoardSettingDetail] DROP CONSTRAINT [DF_StatusBoardSettingDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSettingDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[StatusBoardSettingDetail] DROP CONSTRAINT [DF_StatusBoardSettingDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSettingDetail_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[StatusBoardSettingDetail] DROP CONSTRAINT [DF_StatusBoardSettingDetail_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_StatusBoardSettingDetail_StatusBoardSettingID]...';


GO
ALTER TABLE [dbo].[StatusBoardSettingDetail] DROP CONSTRAINT [DF_StatusBoardSettingDetail_StatusBoardSettingID];


GO
PRINT N'Dropping [dbo].[DF_Table_1_UserID]...';


GO
ALTER TABLE [dbo].[StatusBoardSettingDetail] DROP CONSTRAINT [DF_Table_1_UserID];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_ColorCode1]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_ColorCode1];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_ColorCode2]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_ColorCode2];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_DefaultToType]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_DefaultToType];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_HomeWidgetSettingType]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_HomeWidgetSettingType];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_PreferenceID]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_SummaryWidgetSettingType]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_SummaryWidgetSettingType];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_UserID]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSetting_WeekBeginsOn]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSetting] DROP CONSTRAINT [DF_SummaryWidgetSetting_WeekBeginsOn];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_SummaryType]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryType];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_SummaryTypeID]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryTypeID];


GO
PRINT N'Dropping [dbo].[DF_SummaryWidgetSettingDetail_SummaryWidgetSettingID]...';


GO
ALTER TABLE [dbo].[SummaryWidgetSettingDetail] DROP CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryWidgetSettingID];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_EndDateTime]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_ModifiedBy]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_ModifiedOn]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_StartDateTime]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_SupportAcessPeriodType]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_SupportAcessPeriodType];


GO
PRINT N'Dropping [dbo].[DF_SupportAccessGrant_UserID]...';


GO
ALTER TABLE [dbo].[SupportAccessGrant] DROP CONSTRAINT [DF_SupportAccessGrant_UserID];


GO
PRINT N'Dropping [dbo].[DF_Tag_Feature]...';


GO
ALTER TABLE [dbo].[Tag] DROP CONSTRAINT [DF_Tag_Feature];


GO
PRINT N'Dropping [dbo].[DF_Tag_LanguageID]...';


GO
ALTER TABLE [dbo].[Tag] DROP CONSTRAINT [DF_Tag_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_Tag_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Tag] DROP CONSTRAINT [DF_Tag_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Tag_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Tag] DROP CONSTRAINT [DF_Tag_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Tag_TagName]...';


GO
ALTER TABLE [dbo].[Tag] DROP CONSTRAINT [DF_Tag_TagName];


GO
PRINT N'Dropping [dbo].[DF_Telephones_ModifiedBy]...';


GO
ALTER TABLE [dbo].[Telephones] DROP CONSTRAINT [DF_Telephones_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_Telephones_ModifiedOn]...';


GO
ALTER TABLE [dbo].[Telephones] DROP CONSTRAINT [DF_Telephones_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchCall_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchCall] DROP CONSTRAINT [DF_TelePunchCall_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchCall_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchCall] DROP CONSTRAINT [DF_TelePunchCall_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_AllowPayAdjustmentEntry]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_AllowPayAdjustmentEntry];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApprovalsEnabled]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApprovalsEnabled];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApproveCurrentPayPeriod]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApproveCurrentPayPeriod];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApproveCurrentWeek]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApproveCurrentWeek];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApprovePreviousPayPeriod]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApprovePreviousPayPeriod];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApprovePreviousWeek]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApprovePreviousWeek];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApproveToday]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApproveToday];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ApproveYesterday]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ApproveYesterday];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchConfig_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchConfig] DROP CONSTRAINT [DF_TelePunchConfig_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchLLPrompt_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchLLPrompt] DROP CONSTRAINT [DF_TelePunchLLPrompt_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchLLPrompt_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchLLPrompt] DROP CONSTRAINT [DF_TelePunchLLPrompt_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchLLPrompt_TelePunchLLPromptName]...';


GO
ALTER TABLE [dbo].[TelePunchLLPrompt] DROP CONSTRAINT [DF_TelePunchLLPrompt_TelePunchLLPromptName];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_LanguageID]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_LanguageID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_Message]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_Message];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_SystemTelePunchNumberID]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_SystemTelePunchNumberID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_TelePunchPrompt_ID]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_TelePunchPrompt_ID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchMessage_Version]...';


GO
ALTER TABLE [dbo].[TelePunchMessage] DROP CONSTRAINT [DF_TelePunchMessage_Version];


GO
PRINT N'Dropping [dbo].[DF_TelePunchNumber_Description]...';


GO
ALTER TABLE [dbo].[TelePunchNumber] DROP CONSTRAINT [DF_TelePunchNumber_Description];


GO
PRINT N'Dropping [dbo].[DF_TelePunchNumber_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchNumber] DROP CONSTRAINT [DF_TelePunchNumber_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchNumber_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchNumber] DROP CONSTRAINT [DF_TelePunchNumber_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchNumber_Phone]...';


GO
ALTER TABLE [dbo].[TelePunchNumber] DROP CONSTRAINT [DF_TelePunchNumber_Phone];


GO
PRINT N'Dropping [dbo].[DF_TelePunchNumber_TelePunchPolicyID]...';


GO
ALTER TABLE [dbo].[TelePunchNumber] DROP CONSTRAINT [DF_TelePunchNumber_TelePunchPolicyID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[TelePunchPolicy] DROP CONSTRAINT [DF_TelePunchPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchPolicy] DROP CONSTRAINT [DF_TelePunchPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchPolicy] DROP CONSTRAINT [DF_TelePunchPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicy_TelePunchLLPromptID]...';


GO
ALTER TABLE [dbo].[TelePunchPolicy] DROP CONSTRAINT [DF_TelePunchPolicy_TelePunchLLPromptID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicy_TelePunchPolicyName]...';


GO
ALTER TABLE [dbo].[TelePunchPolicy] DROP CONSTRAINT [DF_TelePunchPolicy_TelePunchPolicyName];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_IsActive]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_IsActive];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_TelePunchPolicyID]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_TelePunchPolicyID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[TelePunchPolicyAssign] DROP CONSTRAINT [DF_TelePunchPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_LLID]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_LLID];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_ManualEntryEnabled]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_ManualEntryEnabled];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_PromptClockIn]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_PromptClockIn];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_PromptEndBreak]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_PromptEndBreak];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_PromptEndLunch]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_PromptEndLunch];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_PromptOrder]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_PromptOrder];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_PromptText]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_PromptText];


GO
PRINT N'Dropping [dbo].[DF_TelePunchPrompt_TelePunchLLPromptID]...';


GO
ALTER TABLE [dbo].[TelePunchPrompt] DROP CONSTRAINT [DF_TelePunchPrompt_TelePunchLLPromptID];


GO
PRINT N'Dropping [dbo].[DF_TerminalStatusWidgetSetting_EndRangeSecs]...';


GO
ALTER TABLE [dbo].[TerminalStatusWidgetSetting] DROP CONSTRAINT [DF_TerminalStatusWidgetSetting_EndRangeSecs];


GO
PRINT N'Dropping [dbo].[DF_TerminalStatusWidgetSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TerminalStatusWidgetSetting] DROP CONSTRAINT [DF_TerminalStatusWidgetSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TerminalStatusWidgetSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TerminalStatusWidgetSetting] DROP CONSTRAINT [DF_TerminalStatusWidgetSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TerminalStatusWidgetSetting_StartRangeSecs]...';


GO
ALTER TABLE [dbo].[TerminalStatusWidgetSetting] DROP CONSTRAINT [DF_TerminalStatusWidgetSetting_StartRangeSecs];


GO
PRINT N'Dropping [dbo].[DF_TerminalStatusWidgetSetting_UserID]...';


GO
ALTER TABLE [dbo].[TerminalStatusWidgetSetting] DROP CONSTRAINT [DF_TerminalStatusWidgetSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeCardApprovalSetting_ColumnType]...';


GO
ALTER TABLE [dbo].[TimeCardApprovalSetting] DROP CONSTRAINT [DF_TimeCardApprovalSetting_ColumnType];


GO
PRINT N'Dropping [dbo].[DF_TimeCardApprovalSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeCardApprovalSetting] DROP CONSTRAINT [DF_TimeCardApprovalSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeCardApprovalSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeCardApprovalSetting] DROP CONSTRAINT [DF_TimeCardApprovalSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeCardApprovalSetting_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[TimeCardApprovalSetting] DROP CONSTRAINT [DF_TimeCardApprovalSetting_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_TimeCardApprovalSetting_UserID]...';


GO
ALTER TABLE [dbo].[TimeCardApprovalSetting] DROP CONSTRAINT [DF_TimeCardApprovalSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeCardNote_Code]...';


GO
ALTER TABLE [dbo].[TimeCardNote] DROP CONSTRAINT [DF_TimeCardNote_Code];


GO
PRINT N'Dropping [dbo].[DF_TimeCardNote_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeCardNote] DROP CONSTRAINT [DF_TimeCardNote_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeCardNote_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeCardNote] DROP CONSTRAINT [DF_TimeCardNote_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_Table_1_HolidayListidS]...';


GO
ALTER TABLE [dbo].[TimeOffCalendarSetting] DROP CONSTRAINT [DF_Table_1_HolidayListidS];


GO
PRINT N'Dropping [dbo].[DF_TimeOffCalendarSetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffCalendarSetting] DROP CONSTRAINT [DF_TimeOffCalendarSetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffCalendarSetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffCalendarSetting] DROP CONSTRAINT [DF_TimeOffCalendarSetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffCalendarSetting_PayTypeIDs]...';


GO
ALTER TABLE [dbo].[TimeOffCalendarSetting] DROP CONSTRAINT [DF_TimeOffCalendarSetting_PayTypeIDs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffCalendarSetting_UserID]...';


GO
ALTER TABLE [dbo].[TimeOffCalendarSetting] DROP CONSTRAINT [DF_TimeOffCalendarSetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_AccruedSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_AccruedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_AnchorPoint]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_AnchorPoint];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_AvailableSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_AvailableSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_DelayedGrantSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_DelayedGrantSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ForfeitedSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ForfeitedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_GrantedSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_GrantedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_GrantorUserID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_GrantorUserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_IsRollover]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_IsRollover];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_IsSystemGenerated]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_IsSystemGenerated];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_MakeUpSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_MakeUpSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ManSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ManSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ManType]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ManType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_Notes]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_Notes];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_ProcessIndex]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_ProcessIndex];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_RolloverSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_RolloverSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_SecondsWorkedStore]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_SecondsWorkedStore];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TimeOffEntryDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TimeOffEntryDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TimeOffProcessDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TimeOffProcessDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TotalAccruedSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TotalAccruedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TransferInID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TransferInID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TransferInSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TransferInSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TransferOutID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TransferOutID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_TransferOutSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_TransferOutSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_UsedSecs]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_UsedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffData_UserID]...';


GO
ALTER TABLE [dbo].[TimeOffData] DROP CONSTRAINT [DF_TimeOffData_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPausedUser_PausedFrom]...';


GO
ALTER TABLE [dbo].[TimeOffPausedUser] DROP CONSTRAINT [DF_TimeOffPausedUser_PausedFrom];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPausedUser_PausedUntil]...';


GO
ALTER TABLE [dbo].[TimeOffPausedUser] DROP CONSTRAINT [DF_TimeOffPausedUser_PausedUntil];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPausedUser_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeOffPausedUser] DROP CONSTRAINT [DF_TimeOffPausedUser_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPausedUser_UserID]...';


GO
ALTER TABLE [dbo].[TimeOffPausedUser] DROP CONSTRAINT [DF_TimeOffPausedUser_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_DefaultTORTo]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_DefaultTORTo];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_EndDate]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_EndDate];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_HideAccruedOnEmpDash]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_HideAccruedOnEmpDash];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_HideGrantedOnEmpDash]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_HideGrantedOnEmpDash];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_HideIncludeWeekendsOnEmpDash]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_HideIncludeWeekendsOnEmpDash];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_IsDeleted]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_MinTORRestrictionEnabled]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_MinTORRestrictionEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_MinTORSecs]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_MinTORSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_StartDate]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_StartDate];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicy_TimeOffPolicyName]...';


GO
ALTER TABLE [dbo].[TimeOffPolicy] DROP CONSTRAINT [DF_TimeOffPolicy_TimeOffPolicyName];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_TimeOffPolicyID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_TimeOffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyAssign_UserID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyAssign] DROP CONSTRAINT [DF_TimeOffPolicyAssign_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrualCustomFreq]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreq];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrualCustomFreqRefDate]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreqRefDate];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrualCustomFreqType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreqType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrualFreqType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrualFreqType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrualTimeAtType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrualTimeAtType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AccrueBeforeEmployeeStart]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AccrueBeforeEmployeeStart];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AdjustmentExceedCapAllowed]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AdjustmentExceedCapAllowed];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_AutoResetQualifyByHoursWorked]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_AutoResetQualifyByHoursWorked];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_CalculationType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_CalculationType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_DeductUnpaidTimeFromBalance]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_DeductUnpaidTimeFromBalance];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_DoNotAllowTORBelowMaxNegative]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_DoNotAllowTORBelowMaxNegative];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_EmailAlertsEnabled]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_EmailAlertsEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_EmpDashDisplayEnabled]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_EmpDashDisplayEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_ExcludeOvertimeFromHoursWorked]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_ExcludeOvertimeFromHoursWorked];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantCustomFreq]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreq];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantCustomFreqRefDate]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreqRefDate];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantCustomFreqType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreqType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantFirstThenRolloverEnabled]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantFirstThenRolloverEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantFreqType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantFreqType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_GrantTimeAtType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_GrantTimeAtType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_HideBalanceOnEmpTOR]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_HideBalanceOnEmpTOR];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_IncludeInExports]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_IncludeInExports];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_IsDefaultOnEmpDash]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_IsDefaultOnEmpDash];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_IsDeleted]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_LimitAnnualAccrual]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_LimitAnnualAccrual];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_MaxNegativeIncludeFutureTOR]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_MaxNegativeIncludeFutureTOR];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_MaxNegativeOnRemainingEnabled]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_MaxNegativeOnRemainingEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_QualifyMinWorkFreq]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkFreq];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_QualifyMinWorkFreqType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkFreqType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_QualifyMinWorkRequired]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkRequired];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_QualifyMinWorkSecs]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_ResetDateOther]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_ResetDateOther];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_ResetDateType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_ResetDateType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictAccrualPeriod]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictAccrualPeriod];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictAccrualPeriodType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictAccrualPeriodType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictMinWorkRequired]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictMinWorkRequired];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictMinWorkSecs]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictMinWorkSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictProbationPeriod]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictProbationPeriod];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_RestrictProbationPeriodType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_RestrictProbationPeriodType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_SeniorityDateType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_SeniorityDateType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_TimeOffPolicyDetailID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_TimeOffPolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_TimeOffPolicyID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_TimeOffPolicyID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_TORAllowed]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_TORAllowed];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_TORBalanceAdjustmentType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_TORBalanceAdjustmentType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_UsedTotalIncludesFutureTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_UsedTotalIncludesFutureTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_UseProjectedAvailableBalance]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_UseProjectedAvailableBalance];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_WorkHoursRequiredForAccrual]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_WorkHoursRequiredForAccrual];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetail_WorkYearHours]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetail] DROP CONSTRAINT [DF_TimeOffPolicyDetail_WorkYearHours];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_AccrualCap]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_AccrualCap];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_FromMonth]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_FromMonth];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_HoursToAccrue]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_HoursToAccrue];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_HoursToAccrueType]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_HoursToAccrueType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_IsDeleted]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_MaxCarryOver]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_MaxCarryOver];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_NegativeMax]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_NegativeMax];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailRuleID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailRuleID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_ToMonth]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_ToMonth];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_TransferOverageAllowed]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageAllowed];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_TransferOverageFactor]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageFactor];


GO
PRINT N'Dropping [dbo].[DF_TimeOffPolicyDetailRule_TransferOverageToPayTypeID]...';


GO
ALTER TABLE [dbo].[TimeOffPolicyDetailRule] DROP CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageToPayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_DateTimeSubmitted]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_DateTimeSubmitted];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_DurationPerDaySecs]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_DurationPerDaySecs];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_EmpNotes]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_EmpNotes];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_IncludeWeekends]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_IncludeWeekends];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_StatusChangedOn]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_StatusChangedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_StatusType]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_StatusType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_TimeOffPolicyDetailID]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_TimeOffPolicyDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequest_UserID]...';


GO
ALTER TABLE [dbo].[TimeOffRequest] DROP CONSTRAINT [DF_TimeOffRequest_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_AutoResetQualifyByHoursWorked]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_AutoResetQualifyByHoursWorked];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_IsDeleted]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_MgrNotes]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_MgrNotes];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_StatusChangedBy]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_StatusChangedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_StatusChangedOn]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_StatusChangedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_StatusType]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_StatusType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_TimeOffRequestID]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_TimeOffRequestID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestDetail_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[TimeOffRequestDetail] DROP CONSTRAINT [DF_TimeOffRequestDetail_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestHistory_Notes]...';


GO
ALTER TABLE [dbo].[TimeOffRequestHistory] DROP CONSTRAINT [DF_TimeOffRequestHistory_Notes];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestHistory_StatusChangedBy]...';


GO
ALTER TABLE [dbo].[TimeOffRequestHistory] DROP CONSTRAINT [DF_TimeOffRequestHistory_StatusChangedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestHistory_StatusChangedOn]...';


GO
ALTER TABLE [dbo].[TimeOffRequestHistory] DROP CONSTRAINT [DF_TimeOffRequestHistory_StatusChangedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestHistory_StatusType]...';


GO
ALTER TABLE [dbo].[TimeOffRequestHistory] DROP CONSTRAINT [DF_TimeOffRequestHistory_StatusType];


GO
PRINT N'Dropping [dbo].[DF_TimeOffRequestHistory_TimeOffRequestDetailID]...';


GO
ALTER TABLE [dbo].[TimeOffRequestHistory] DROP CONSTRAINT [DF_TimeOffRequestHistory_TimeOffRequestDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column1Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column1Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column1Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column1Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column2Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column2Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column2Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column2Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column3Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column3Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column3Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column3Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column4Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column4Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column4Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column4Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column5Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column5Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column5Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column5Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column6Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column6Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column6Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column6Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column7Type]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column7Type];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_Column7Value]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_Column7Value];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_ExpressEntryShiftsPerDay]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_ExpressEntryShiftsPerDay];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_ShowAllLLs]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_ShowAllLLs];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetEntrySetting_UserID]...';


GO
ALTER TABLE [dbo].[TimeSheetEntrySetting] DROP CONSTRAINT [DF_TimeSheetEntrySetting_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_Duration]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_Duration];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID1]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID10]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID11]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID12]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID13]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID14]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID15]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID2]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID3]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID4]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID5]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID6]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID7]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID8]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_LLDetailID9]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_OrdinalPosition]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_OrdinalPosition];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_StartTime]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_StartTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSheetTemplate_UserID]...';


GO
ALTER TABLE [dbo].[TimeSheetTemplate] DROP CONSTRAINT [DF_TimeSheetTemplate_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ActualDateTimeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ActualDateTimeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ActualDateTimeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ActualDateTimeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_AdminApprovedByIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_AdminApprovedByIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_AdminApprovedByOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_AdminApprovedByOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_AdminApprovedIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_AdminApprovedIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_AdminApprovedOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_AdminApprovedOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ApplyToDate]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ApplyToDate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ApplyToOvertime]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ApplyToOvertime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ChargeRate]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ChargeRate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_CompTimeOTConvertedSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_CompTimeOTConvertedSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_CompTimeRequestID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_CompTimeRequestID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_CountTowardsHolidayMin]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_CountTowardsHolidayMin];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_EmpApprovedIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_EmpApprovedIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_EmpApprovedOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_EmpApprovedOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_EmpNoteIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_EmpNoteIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_EmpNoteOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_EmpNoteOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_HasModifier]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_HasModifier];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_HasShiftDiff]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_HasShiftDiff];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsCallBack]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsCallBack];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsCanceled]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsCanceled];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsClosed]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsClosed];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsCompTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsCompTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsForecast]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsForecast];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsMealPremium]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsMealPremium];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsModifiedIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsModifiedIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsModifiedOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsModifiedOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsReconcile]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsReconcile];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsSwipAndGoIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsSwipAndGoIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_IsSwipeAndGoOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_IsSwipeAndGoOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LatitudeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LatitudeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LatitudeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LatitudeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID1]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID10]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID11]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID12]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID13]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID14]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID15]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID2]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID3]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID4]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID5]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID6]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID7]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID8]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LLDetailID9]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LongitudeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LongitudeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_LongitudeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_LongitudeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_Mgr2ApprovedByIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedByIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_Mgr2ApprovedByOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedByOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_Mgr2ApprovedIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_Mgr2ApprovedOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrApprovedByIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrApprovedByIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrApprovedByOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrApprovedByOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrApprovedIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrApprovedIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrApprovedOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrApprovedOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrNoteIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrNoteIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MgrNoteOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MgrNoteOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MissingPunchTypeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MissingPunchTypeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_MissingPunchTypeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_MissingPunchTypeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_OTDurationSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_OTDurationSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_PayLevelRateType]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_PayLevelRateType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_PayRate]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_PayRate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_PopulatedFromScheduleIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_PopulatedFromScheduleIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_PopulatedFromScheduleOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_PopulatedFromScheduleOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_RegDurationSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_RegDurationSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_RoundedDateTimeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_RoundedDateTimeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_RoundedDateTimeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_RoundedDateTimeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ScheduleDetailID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ScheduleDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_ScheduleID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_ScheduleID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TimeSheetSubmissionIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TimeSheetSubmissionIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TimeSheetSubmissionOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TimeSheetSubmissionOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TimeSliceGroupID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TimeSliceGroupID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TimeSlicePreIDIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TimeSlicePreIDIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TimeSlicePreIDOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TimeSlicePreIDOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TotalEarnings]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TotalEarnings];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TotalPaidDurationSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TotalPaidDurationSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TransactionSourceIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TransactionSourceIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TransactionSourceOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TransactionSourceOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TransactionTypeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TransactionTypeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_TransactionTypeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_TransactionTypeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_UnpaidDurationSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_UnpaidDurationSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_UserID]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_UTCDateTimeIn]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_UTCDateTimeIn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePost_UTCDateTimeOut]...';


GO
ALTER TABLE [dbo].[TimeSlicePost] DROP CONSTRAINT [DF_TimeSlicePost_UTCDateTimeOut];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_AcknowledgedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_AcknowledgedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_DateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_DateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ExceptionParameterSecs]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionParameterSecs];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ExceptionPolicyRuleID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionPolicyRuleID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ExceptionType]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_IsAcknowledged]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_IsAcknowledged];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_MgrNotes]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_MgrNotes];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_ScheduleID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_ScheduleID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_TimeSlicePostID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_TimeSlicePostID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_TransactionType]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostExceptionDetail_UserID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostExceptionDetail] DROP CONSTRAINT [DF_TimeSlicePostExceptionDetail_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_BlendedRate]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_BlendedRate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_Duration]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_Duration];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_OvertimePayTypeFactor]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimePayTypeFactor];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_OvertimePayTypeID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimePayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_OvertimeRuleID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimeRuleID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_PayRate]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_PayRate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_RuleDurationDays]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_RuleDurationDays];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_RulePriority]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_RulePriority];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostOvertimeDetail_TimeSlicePostID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostOvertimeDetail] DROP CONSTRAINT [DF_TimeSlicePostOvertimeDetail_TimeSlicePostID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_EndDateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_EndDateTimeUTC]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_EndDateTimeUTC];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_FinalPayRate]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_FinalPayRate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ShiftDiffAdditional]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffAdditional];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ShiftDiffAfterOvertime]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffAfterOvertime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ShiftDiffCode]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffCode];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ShiftDiffDetailID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffDetailID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_ShiftDiffFactor]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffFactor];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_StartDateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_StartDateTimeUTC]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_StartDateTimeUTC];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePostShiftDiffDetail_TimeSlicePostID]...';


GO
ALTER TABLE [dbo].[TimeSlicePostShiftDiffDetail] DROP CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_TimeSlicePostID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_AdminApproved]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_AdminApproved];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_AdminApprovedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_AdminApprovedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_ApplyToDate]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_ApplyToDate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_ApplyToOvertime]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_ApplyToOvertime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_CreatedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_CreatedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_CreatedGUID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_CreatedGUID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_CreatedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_CreatedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_EmpApproved]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_EmpApproved];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_EmpNote]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_EmpNote];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_HardwareTerminalID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_HardwareTerminalID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_IsCallBack]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_IsCallBack];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_IsClosed]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_IsClosed];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_IsMealPremium]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_IsMealPremium];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_IsModified]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_IsModified];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_IsTimeSheetSubmission]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_IsTimeSheetSubmission];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_Latitude]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_Latitude];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID1]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID10]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID11]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID12]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID13]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID14]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID15]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID2]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID3]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID4]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID5]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID6]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID7]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID8]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_LLDetailID9]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_Longitude]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_Longitude];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_Mgr2Approved]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_Mgr2Approved];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_Mgr2ApprovedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_Mgr2ApprovedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_MgrApproved]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_MgrApproved];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_MgrApprovedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_MgrApprovedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_MgrNote]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_MgrNote];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_ModifiedGUID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_ModifiedGUID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_ModifiedOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_PayLevelRateType]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_PayLevelRateType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_PayTypeID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_SwipeGoInEnabled]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_SwipeGoInEnabled];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_TimeSliceGroupID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_TimeSliceGroupID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_TransactionDateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_TransactionDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_TransactionSource]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_TransactionSource];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_TransactionType]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_TransactionType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_TransactionUTCDateTime]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_TransactionUTCDateTime];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_UserID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_UserID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePre_WebKioskTerminalID]...';


GO
ALTER TABLE [dbo].[TimeSlicePre] DROP CONSTRAINT [DF_TimeSlicePre_WebKioskTerminalID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ApplyToDate]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ApplyToDate];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_HashValue]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_HashValue];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifiedBy]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierDateTime1]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierDateTime1];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierDateTime2]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierDateTime2];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierOn]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierOn];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierParam1]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam1];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierParam2]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam2];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierParam3]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam3];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_ModifierType]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_ModifierType];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_TimeSlicePostID]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_TimeSlicePostID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_TimeSlicePreID]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_TimeSlicePreID];


GO
PRINT N'Dropping [dbo].[DF_TimeSlicePreModifier_UserID]...';


GO
ALTER TABLE [dbo].[TimeSlicePreModifier] DROP CONSTRAINT [DF_TimeSlicePreModifier_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserGroup_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserGroup] DROP CONSTRAINT [DF_UserGroup_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserGroup_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserGroup] DROP CONSTRAINT [DF_UserGroup_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserGroup_UserGroupNumber]...';


GO
ALTER TABLE [dbo].[UserGroup] DROP CONSTRAINT [DF_UserGroup_UserGroupNumber];


GO
PRINT N'Dropping [dbo].[DF_UserGroupAccess_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserGroupAccess] DROP CONSTRAINT [DF_UserGroupAccess_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserGroupAccess_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserGroupAccess] DROP CONSTRAINT [DF_UserGroupAccess_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserGroupAccess_UserID]...';


GO
ALTER TABLE [dbo].[UserGroupAccess] DROP CONSTRAINT [DF_UserGroupAccess_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMember_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserGroupMember] DROP CONSTRAINT [DF_UserGroupMember_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMember_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserGroupMember] DROP CONSTRAINT [DF_UserGroupMember_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMember_UserGroupID]...';


GO
ALTER TABLE [dbo].[UserGroupMember] DROP CONSTRAINT [DF_UserGroupMember_UserGroupID];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMember_UserID]...';


GO
ALTER TABLE [dbo].[UserGroupMember] DROP CONSTRAINT [DF_UserGroupMember_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_CanAccessSubordinateGroup]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_CanAccessSubordinateGroup];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_CanAssignProxyMgr]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_CanAssignProxyMgr];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_CanAssignSubordinateMgr]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_CanAssignSubordinateMgr];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_EndDateManagement]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_EndDateManagement];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_MgrType]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_MgrType];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_ReceiveTORNotification]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_ReceiveTORNotification];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_StartDateManagement]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_StartDateManagement];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_UserGroupID]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_UserGroupID];


GO
PRINT N'Dropping [dbo].[DF_UserGroupMgr_UserID]...';


GO
ALTER TABLE [dbo].[UserGroupMgr] DROP CONSTRAINT [DF_UserGroupMgr_UserID];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfo]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF__UserInfo__Phone1__34FEAF52];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfo]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF__UserInfo__Payrol__35F2D38B];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfo]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF__UserInfo__Employ__36E6F7C4];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfo]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF__UserInfo__Phone2__37DB1BFD];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfo]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF__UserInfo__AutoDi__39C3646F];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_AdditionalMonthsOfService]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_AdditionalMonthsOfService];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Address1]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Address1];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Address2]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Address2];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_AlertEmail]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_AlertEmail];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_AttendanceShiftLength]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_AttendanceShiftLength];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Badge]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Badge];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_City]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_City];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ClientID]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ClientID];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_CreatedBy]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_CreatedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_CreatedOn]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_CreatedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_DisablePunchWithoutGeolocation]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_DisablePunchWithoutGeolocation];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Email]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Email];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_EmpIdentifier]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_EmpIdentifier];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_EmployeeClassification]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_EmployeeClassification];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_EndDate]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_EndDate];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_EnforceIPAccessOnMobileWeb]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_EnforceIPAccessOnMobileWeb];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_FirstName]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_FirstName];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_GovernmentID]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_GovernmentID];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_HandTemplate]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_HandTemplate];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_HomeEmail]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_HomeEmail];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_IPAccessPolicyID]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_IPAccessPolicyID];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_IsTopMostMgr]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_IsTopMostMgr];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_LastLockedOut]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_LastLockedOut];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_LastName]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_LastName];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MiddleName]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MiddleName];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Minutiae1]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Minutiae1];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Minutiae2]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Minutiae2];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MobileNonWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MobileNonWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MobileTimeSheetDefaultPaid]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MobileTimeSheetDefaultPaid];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MobileTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MobileTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MobileWebPunchEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MobileWebPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_MobileWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_MobileWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_NonWorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_NonWorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_PasswordAttempts]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_PasswordAttempts];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_PasswordExpires]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_PasswordExpires];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_PasswordPolicyID]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_PasswordPolicyID];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Phone1]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Phone1];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Phone2]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Phone2];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Phone3]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Phone3];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_PostalCode]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_PostalCode];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_PreferenceID]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_PreferenceID];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_QualifiedForAccrualsByHoursWorked]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_QualifiedForAccrualsByHoursWorked];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ResetPasswordLink]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ResetPasswordLink];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ResetPasswordLinkGeneratedOn]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ResetPasswordLinkGeneratedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_RestrictShortLunchEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_RestrictShortLunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_RestrictToScheduleEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_RestrictToScheduleEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_ScheduledHours]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_ScheduledHours];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_SessionState]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_SessionState];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_SpecialMinutiae]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_SpecialMinutiae];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_SSOLoginOnly]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_SSOLoginOnly];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_State]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_State];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TelepunchPin]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TelepunchPin];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeCardClosedThru]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeCardClosedThru];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeCardLockedThru]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeCardLockedThru];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeOffStartDate]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeOffStartDate];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeSheetDefaultClockIn]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeSheetDefaultClockIn];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeSheetDefaultPaid]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeSheetDefaultPaid];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TimeZoneKey]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TimeZoneKey];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_Title]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_Title];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TrackAttendanceOnlyEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TrackAttendanceOnlyEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_TrackGeolocation]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_TrackGeolocation];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WebAccessEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WebAccessEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WebKioskPunchEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WebKioskPunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WebLogin]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WebLogin];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WebPassword]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WebPassword];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WebPunchingEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WebPunchingEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfo_WorkTimeSheetSubmitEnabled]...';


GO
ALTER TABLE [dbo].[UserInfo] DROP CONSTRAINT [DF_UserInfo_WorkTimeSheetSubmitEnabled];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_ChargeRate]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_ChargeRate];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoChargeRate_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoChargeRate] DROP CONSTRAINT [DF_UserInfoChargeRate_UserID];


GO
PRINT N'Dropping unnamed constraint on [dbo].[UserInfoEmpStatus]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF__UserInfoE__Descr__4DCA5D1C];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_EmpStatus]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_EmpStatus];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoEmpStatus_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoEmpStatus] DROP CONSTRAINT [DF_UserInfoEmpStatus_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_NonWorkedHolDuration]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_NonWorkedHolDuration];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoHolDurationOverride_WorkedHolDuration]...';


GO
ALTER TABLE [dbo].[UserInfoHolDurationOverride] DROP CONSTRAINT [DF_UserInfoHolDurationOverride_WorkedHolDuration];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_IsExempt]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_IsExempt];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsExempt_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoIsExempt] DROP CONSTRAINT [DF_UserInfoIsExempt_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_IsSalary]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_IsSalary];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoIsSalary_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoIsSalary] DROP CONSTRAINT [DF_UserInfoIsSalary_UserID];


GO
PRINT N'Dropping [dbo].[DF_Table_1_FirstNname]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_Table_1_FirstNname];


GO
PRINT N'Dropping [dbo].[DF_Table_1_UserTimezone]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_Table_1_UserTimezone];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_Culture]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_Culture];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_CustomerSiteAccessLogID]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_CustomerSiteAccessLogID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_DateTimeServer]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_DateTimeServer];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_DateTimeUser]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_DateTimeUser];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_DateTimeUTC]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_DateTimeUTC];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_GUID]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_GUID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_LastName]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_LastName];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_LoginMachine]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_LoginMachine];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_MiddleName]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_MiddleName];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_TokenSource]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_TokenSource];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_UserIP]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_UserIP];


GO
PRINT N'Dropping [dbo].[DF_UserInfoLoginDetail_UserType]...';


GO
ALTER TABLE [dbo].[UserInfoLoginDetail] DROP CONSTRAINT [DF_UserInfoLoginDetail_UserType];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_PayRate]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_PayRate];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_PayTypeID]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_PayTypeID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoNonWorkPayRate_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoNonWorkPayRate] DROP CONSTRAINT [DF_UserInfoNonWorkPayRate_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_PayFrequency]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_PayFrequency];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayFreq_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoPayFreq] DROP CONSTRAINT [DF_UserInfoPayFreq_UserID];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_EndDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_PayRate]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_PayRate];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_StartDateTime]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_UserInfoPayRate_UserID]...';


GO
ALTER TABLE [dbo].[UserInfoPayRate] DROP CONSTRAINT [DF_UserInfoPayRate_UserID];


GO
PRINT N'Dropping [dbo].[DF_Versions_VersionDate]...';


GO
ALTER TABLE [dbo].[Versions] DROP CONSTRAINT [DF_Versions_VersionDate];


GO
PRINT N'Dropping [dbo].[DF_Versions_VersionNumber]...';


GO
ALTER TABLE [dbo].[Versions] DROP CONSTRAINT [DF_Versions_VersionNumber];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_AllowPayAdjustmentEntry]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_AllowPayAdjustmentEntry];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_BreakEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_BreakEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_EmpPasswordRequiredEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_EmpPasswordRequiredEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_IsDeleted]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_IsDeleted];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LastRefreshDateTime]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LastRefreshDateTime];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID1]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID1];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID10]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID10];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID11]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID11];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID12]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID12];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID13]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID13];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID14]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID14];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID15]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID15];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID2]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID2];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID3]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID3];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID4]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID4];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID5]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID5];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID6]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID6];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID7]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID7];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID8]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID8];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLDetailID9]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLDetailID9];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLPromptOnClockInEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLPromptOnClockInEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLPromptOnEndBreakEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLPromptOnEndBreakEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLPromptOnEndLunchEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLPromptOnEndLunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LLPromptOnTransferEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LLPromptOnTransferEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_LunchEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_LunchEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_ModifiedBy]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_ModifiedOn]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_PunchScreenType]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_PunchScreenType];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_TimeZoneKey]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_TimeZoneKey];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_TransferEnabled]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_TransferEnabled];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_VerificationIDType]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_VerificationIDType];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminal_WebKioskTerminalName]...';


GO
ALTER TABLE [dbo].[WebKioskTerminal] DROP CONSTRAINT [DF_WebKioskTerminal_WebKioskTerminalName];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminalPrompt_LLID]...';


GO
ALTER TABLE [dbo].[WebKioskTerminalPrompt] DROP CONSTRAINT [DF_WebKioskTerminalPrompt_LLID];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminalPrompt_ModifiedBy]...';


GO
ALTER TABLE [dbo].[WebKioskTerminalPrompt] DROP CONSTRAINT [DF_WebKioskTerminalPrompt_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminalPrompt_ModifiedOn]...';


GO
ALTER TABLE [dbo].[WebKioskTerminalPrompt] DROP CONSTRAINT [DF_WebKioskTerminalPrompt_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminalPrompt_PromptText]...';


GO
ALTER TABLE [dbo].[WebKioskTerminalPrompt] DROP CONSTRAINT [DF_WebKioskTerminalPrompt_PromptText];


GO
PRINT N'Dropping [dbo].[DF_WebKioskTerminalPrompt_WebKioskTerminalID]...';


GO
ALTER TABLE [dbo].[WebKioskTerminalPrompt] DROP CONSTRAINT [DF_WebKioskTerminalPrompt_WebKioskTerminalID];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_AcknowledgeMessageEnabled]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_AcknowledgeMessageEnabled];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_EndDateTime]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_EndDateTime];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_IsCheckedForAllUsers]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_IsCheckedForAllUsers];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_MessageType]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_MessageType];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_ModifiedBy]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_ModifiedOn]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_StartDateTime]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_StartDateTime];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_WelcomeMessageBody]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_WelcomeMessageBody];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessage_WelcomeMessageTitle]...';


GO
ALTER TABLE [dbo].[WelcomeMessage] DROP CONSTRAINT [DF_WelcomeMessage_WelcomeMessageTitle];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_DateFirstViewed]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_DateFirstViewed];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_DisplayMessageDisabled]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_DisplayMessageDisabled];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_ModifiedBy]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_ModifiedOn]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_UserID]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_UserID];


GO
PRINT N'Dropping [dbo].[DF_WelcomeMessageDetail_WelcomeMessageID]...';


GO
ALTER TABLE [dbo].[WelcomeMessageDetail] DROP CONSTRAINT [DF_WelcomeMessageDetail_WelcomeMessageID];


GO
PRINT N'Dropping unnamed constraint on [dbo].[Workday_UserInfo]...';


GO
ALTER TABLE [dbo].[Workday_UserInfo] DROP CONSTRAINT [DF__Workday_U__WorkS__49C4C20E];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_AbsenceManagementURL]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_AbsenceManagementURL];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_AccrualStartDate]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_AccrualStartDate];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_AutoEmpGroupEnabled]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_AutoEmpGroupEnabled];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_BadgeNumberMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_BadgeNumberMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_BadgeNumberSelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_BadgeNumberSelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_EmailSource]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_EmailSource];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_EmpGroupMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_EmpGroupMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_EmployeeGroupSelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_EmployeeGroupSelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_EmployeeStartDate]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_EmployeeStartDate];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeCity]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeCity];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeContingentWorkers]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeContingentWorkers];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludePhone1]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludePhone1];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeState]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeState];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeStreet]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeStreet];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeTitle]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeTitle];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ExcludeZip]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ExcludeZip];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FATMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FATMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FATSelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FATSelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID01]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID01];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID02]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID02];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID03]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID03];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID04]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID04];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID05]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID05];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID06]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID06];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID07]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID07];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID08]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID08];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID09]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID09];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID10]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID10];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID11]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID11];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID12]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID12];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID13]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID13];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID14]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID14];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganization_ID15]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID15];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType01]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType01];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType02]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType02];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType03]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType03];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType04]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType04];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType05]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType05];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType06]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType06];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType07]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType07];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType08]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType08];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType09]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType09];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType10]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType10];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType11]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType11];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType12]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType12];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType13]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType13];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType14]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType14];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_FilterOrganizationType15]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType15];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_HumanResourcesURL]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_HumanResourcesURL];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ImportHourlyPayRate]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ImportHourlyPayRate];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ImportPayRate]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ImportPayRate];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_IncludeOrgaizationIDs]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_IncludeOrgaizationIDs];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_IncludeUSEmpOnly]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_IncludeUSEmpOnly];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_IPAccessPolicyMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_IPAccessPolicyMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_IPAccessPolicySelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_IPAccessPolicySelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL10Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL10Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL10Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL10Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL11Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL11Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL11Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL11Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL12Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL12Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL12Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL12Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL13Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL13Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL13Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL13Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL14Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL14Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL14Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL14Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL15Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL15Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL15Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL15Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL1Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL1Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL1Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL1Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL2Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL2Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL2Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL2Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL3Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL3Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL3Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL3Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL4Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL4Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL4Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL4Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL5Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL5Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL5Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL5Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL6Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL6Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL6Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL6Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL7Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL7Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL7Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL7Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL8Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL8Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL8Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL8Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL9Mapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL9Mapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_LL9Selection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_LL9Selection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ManagerFATMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ManagerFATMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ModifiedBy]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ModifiedBy];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ModifiedOn]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ModifiedOn];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_NotificationEmail]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_NotificationEmail];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_Password]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_Password];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_PasswordMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_PasswordMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_PasswordSelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_PasswordSelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_PayrollPolicyMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_PayrollPolicyMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_PayrollPolicySelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_PayrollPolicySelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_PayrollURL]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_PayrollURL];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ShiftDiffPolicyMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ShiftDiffPolicyMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_ShiftDiffPolicySelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_ShiftDiffPolicySelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_Tenant]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_Tenant];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_TimeOffPolicyMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_TimeOffPolicyMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_TimeOffPolicySelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_TimeOffPolicySelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_UseManagerForFAT]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_UseManagerForFAT];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_UserLoginMapping]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_UserLoginMapping];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_UserLoginSelection]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_UserLoginSelection];


GO
PRINT N'Dropping [dbo].[DF_WorkdayIntegration_Username]...';


GO
ALTER TABLE [dbo].[WorkdayIntegration] DROP CONSTRAINT [DF_WorkdayIntegration_Username];


GO
PRINT N'Dropping [dbo].[DF_WSLog_ErrorLogID]...';


GO
ALTER TABLE [dbo].[WSLog] DROP CONSTRAINT [DF_WSLog_ErrorLogID];


GO
PRINT N'Dropping [dbo].[DF_WSLog_LogEntryDateTime]...';


GO
ALTER TABLE [dbo].[WSLog] DROP CONSTRAINT [DF_WSLog_LogEntryDateTime];


GO
PRINT N'Dropping [dbo].[DF_WSLog_LogMessage]...';


GO
ALTER TABLE [dbo].[WSLog] DROP CONSTRAINT [DF_WSLog_LogMessage];


GO
PRINT N'Dropping [dbo].[DF_WSLog_LogType]...';


GO
ALTER TABLE [dbo].[WSLog] DROP CONSTRAINT [DF_WSLog_LogType];


GO
PRINT N'Starting rebuilding table [conv].[ConverterProgress]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [conv].[tmp_ms_xx_ConverterProgress] (
    [ID]                 BIGINT        IDENTITY (1, 1) NOT NULL,
    [SessionID]          BIGINT        NOT NULL,
    [TLOCustomerID]      INT           NOT NULL,
    [StagedByUser]       VARCHAR (50)  NOT NULL,
    [DateStagedOn]       DATETIME      CONSTRAINT [DFConConverterProgressStagingDate] DEFAULT (getdate()) NOT NULL,
    [ConversionStep]     INT           NOT NULL,
    [TLOSourceTable]     VARCHAR (100) NOT NULL,
    [TLOSourceTableID]   INT           NOT NULL,
    [StratusDestTable]   VARCHAR (100) NULL,
    [StratusDestTableID] INT           NULL,
    [Notes]              VARCHAR (MAX) NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PKConvConverterProgress1] PRIMARY KEY CLUSTERED ([ID] ASC) WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = ON)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [conv].[ConverterProgress])
    BEGIN
        SET IDENTITY_INSERT [conv].[tmp_ms_xx_ConverterProgress] ON;
        INSERT INTO [conv].[tmp_ms_xx_ConverterProgress] ([ID], [SessionID], [TLOCustomerID], [StagedByUser], [DateStagedOn], [ConversionStep], [TLOSourceTable], [TLOSourceTableID], [StratusDestTable], [StratusDestTableID], [Notes])
        SELECT   [ID],
                 [SessionID],
                 [TLOCustomerID],
                 [StagedByUser],
                 [DateStagedOn],
                 [ConversionStep],
                 [TLOSourceTable],
                 [TLOSourceTableID],
                 [StratusDestTable],
                 [StratusDestTableID],
                 [Notes]
        FROM     [conv].[ConverterProgress]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [conv].[tmp_ms_xx_ConverterProgress] OFF;
    END

DROP TABLE [conv].[ConverterProgress];

EXECUTE sp_rename N'[conv].[tmp_ms_xx_ConverterProgress]', N'ConverterProgress';

EXECUTE sp_rename N'[conv].[tmp_ms_xx_constraint_PKConvConverterProgress1]', N'PKConvConverterProgress', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [conv].[TimeSlicePost_Staged]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [conv].[tmp_ms_xx_TimeSlicePost_Staged] (
    [TimeSlicePostID]               INT           NULL,
    [TimeSliceGroupID]              INT           NULL,
    [UserID]                        INT           NULL,
    [PayTypeID]                     INT           NULL,
    [ActualTimeIn]                  DATETIME      NULL,
    [ActualTimeOut]                 DATETIME      NULL,
    [ActualPaidDuration]            INT           NULL,
    [RegDuration]                   INT           NULL,
    [OT1Duration]                   INT           NULL,
    [OT2Duration]                   INT           NULL,
    [UnpaidDuration]                INT           NULL,
    [Modified]                      BIT           NULL,
    [PayRate]                       MONEY         NULL,
    [FinalRate]                     MONEY         NULL,
    [ChargeRate]                    MONEY         NULL,
    [TimeSlicePreID_Candidate]      INT           NULL,
    [TimeSlicePreID_In]             INT           NULL,
    [TimeSlicePreID_Out]            INT           NULL,
    [TimeSlicepostTypeID]           INT           NULL,
    [IsSwipeAndGo]                  BIT           NULL,
    [RoundedTimeIn]                 DATETIME      NULL,
    [RoundedTimeOut]                DATETIME      NULL,
    [PayType_Description]           VARCHAR (50)  NULL,
    [OverridesAbsence]              BIT           NULL,
    [TimeSlicePreTypeID]            INT           NULL,
    [ApplyToOT]                     BIT           NULL,
    [EmployeeNoteIn]                VARCHAR (255) NULL,
    [EmployeeNoteOut]               VARCHAR (255) NULL,
    [SupervisorNoteIn]              VARCHAR (255) NULL,
    [SupervisorNoteOut]             VARCHAR (255) NULL,
    [EmployeeApprovedIn]            BIT           NULL,
    [EmployeeApprovedOut]           BIT           NULL,
    [SupervisorApprovedIn]          BIT           NULL,
    [SupervisorApprovedOut]         BIT           NULL,
    [TimeSlicePreTypeIn]            INT           NULL,
    [TimeSlicePreTypeOut]           INT           NULL,
    [IsModifiedIn]                  BIT           NULL,
    [IsModifiedOut]                 BIT           NULL,
    [ApplyToDate]                   DATETIME      NULL,
    [TimeSheetSubmission]           BIT           NULL,
    [RecordOriginIDIn]              SMALLINT      NULL,
    [RecordOriginIDOut]             SMALLINT      NULL,
    [PayLevelID]                    INT           NULL,
    [CountTowardsHolidayMinMinutes] BIT           NULL,
    [TimeZone]                      VARCHAR (100) NULL,
    [OverTimeRegularFactor]         FLOAT (53)    NULL,
    [OverTimeSecondFactor]          FLOAT (53)    NULL,
    [EmployeeNumber]                VARCHAR (50)  NULL,
    [BadgeNumber]                   INT           NULL,
    [LLDetailID1]                   INT           NULL,
    [LLDetailID2]                   INT           NULL,
    [LLDetailID3]                   INT           NULL,
    [LLDetailID4]                   INT           NULL,
    [LLDetailID5]                   INT           NULL,
    [LLDetailID6]                   INT           NULL,
    [LLDetailID7]                   INT           NULL,
    [LLDetailID8]                   INT           NULL,
    [LLDetailID9]                   INT           NULL,
    [LLDetailID10]                  INT           NULL,
    [LLDetailID11]                  INT           NULL,
    [LLDetailID12]                  INT           NULL,
    [LLDetailID13]                  INT           NULL,
    [LLDetailID14]                  INT           NULL,
    [LLDetailID15]                  INT           NULL,
    [LLDetailCode1]                 VARCHAR (50)  NULL,
    [LLDetailCode2]                 VARCHAR (50)  NULL,
    [LLDetailCode3]                 VARCHAR (50)  NULL,
    [LLDetailCode4]                 VARCHAR (50)  NULL,
    [LLDetailCode5]                 VARCHAR (50)  NULL,
    [LLDetailCode6]                 VARCHAR (50)  NULL,
    [LLDetailCode7]                 VARCHAR (50)  NULL,
    [LLDetailCode8]                 VARCHAR (50)  NULL,
    [LLDetailCode9]                 VARCHAR (50)  NULL,
    [LLDetailCode10]                VARCHAR (50)  NULL,
    [LLDetailCode11]                VARCHAR (50)  NULL,
    [LLDetailCode12]                VARCHAR (50)  NULL,
    [LLDetailCode13]                VARCHAR (50)  NULL,
    [LLDetailCode14]                VARCHAR (50)  NULL,
    [LLDetailCode15]                VARCHAR (50)  NULL,
    [LLID1]                         INT           NULL,
    [LLID2]                         INT           NULL,
    [LLID3]                         INT           NULL,
    [LLID4]                         INT           NULL,
    [LLID5]                         INT           NULL,
    [LLID6]                         INT           NULL,
    [LLID7]                         INT           NULL,
    [LLID8]                         INT           NULL,
    [LLID9]                         INT           NULL,
    [LLID10]                        INT           NULL,
    [LLID11]                        INT           NULL,
    [LLID12]                        INT           NULL,
    [LLID13]                        INT           NULL,
    [LLID14]                        INT           NULL,
    [LLID15]                        INT           NULL,
    [Tlo_TimeSlicePostID]           INT           NULL,
    [Stratus_TimeSlicePostID]       INT           NULL,
    [StagedOn]                      DATETIME      NULL,
    [StageSession]                  BIGINT        NULL,
    [StageComplete]                 BIT           NULL,
    [StagedBy]                      VARCHAR (50)  NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [conv].[TimeSlicePost_Staged])
    BEGIN
        INSERT INTO [conv].[tmp_ms_xx_TimeSlicePost_Staged] ([TimeSlicePostID], [TimeSliceGroupID], [UserID], [PayTypeID], [ActualTimeIn], [ActualTimeOut], [ActualPaidDuration], [RegDuration], [OT1Duration], [OT2Duration], [UnpaidDuration], [Modified], [PayRate], [FinalRate], [ChargeRate], [TimeSlicePreID_Candidate], [TimeSlicePreID_In], [TimeSlicePreID_Out], [TimeSlicepostTypeID], [IsSwipeAndGo], [RoundedTimeIn], [RoundedTimeOut], [PayType_Description], [OverridesAbsence], [TimeSlicePreTypeID], [ApplyToOT], [EmployeeNoteIn], [EmployeeNoteOut], [SupervisorNoteIn], [SupervisorNoteOut], [EmployeeApprovedIn], [EmployeeApprovedOut], [SupervisorApprovedIn], [SupervisorApprovedOut], [TimeSlicePreTypeIn], [TimeSlicePreTypeOut], [IsModifiedIn], [IsModifiedOut], [ApplyToDate], [TimeSheetSubmission], [RecordOriginIDIn], [RecordOriginIDOut], [PayLevelID], [CountTowardsHolidayMinMinutes], [TimeZone], [OverTimeRegularFactor], [OverTimeSecondFactor], [EmployeeNumber], [BadgeNumber], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [LLDetailCode1], [LLDetailCode2], [LLDetailCode3], [LLDetailCode4], [LLDetailCode5], [LLDetailCode6], [LLDetailCode7], [LLDetailCode8], [LLDetailCode9], [LLDetailCode10], [LLDetailCode11], [LLDetailCode12], [LLDetailCode13], [LLDetailCode14], [LLDetailCode15], [LLID1], [LLID2], [LLID3], [LLID4], [LLID5], [LLID6], [LLID7], [LLID8], [LLID9], [LLID10], [LLID11], [LLID12], [LLID13], [LLID14], [LLID15], [Tlo_TimeSlicePostID], [Stratus_TimeSlicePostID], [StagedOn], [StageSession], [StageComplete], [StagedBy])
        SELECT [TimeSlicePostID],
               [TimeSliceGroupID],
               [UserID],
               [PayTypeID],
               [ActualTimeIn],
               [ActualTimeOut],
               [ActualPaidDuration],
               [RegDuration],
               [OT1Duration],
               [OT2Duration],
               [UnpaidDuration],
               [Modified],
               [PayRate],
               [FinalRate],
               [ChargeRate],
               [TimeSlicePreID_Candidate],
               [TimeSlicePreID_In],
               [TimeSlicePreID_Out],
               [TimeSlicepostTypeID],
               [IsSwipeAndGo],
               [RoundedTimeIn],
               [RoundedTimeOut],
               [PayType_Description],
               [OverridesAbsence],
               [TimeSlicePreTypeID],
               [ApplyToOT],
               [EmployeeNoteIn],
               [EmployeeNoteOut],
               [SupervisorNoteIn],
               [SupervisorNoteOut],
               [EmployeeApprovedIn],
               [EmployeeApprovedOut],
               [SupervisorApprovedIn],
               [SupervisorApprovedOut],
               [TimeSlicePreTypeIn],
               [TimeSlicePreTypeOut],
               [IsModifiedIn],
               [IsModifiedOut],
               [ApplyToDate],
               [TimeSheetSubmission],
               [RecordOriginIDIn],
               [RecordOriginIDOut],
               [PayLevelID],
               [CountTowardsHolidayMinMinutes],
               [TimeZone],
               [OverTimeRegularFactor],
               [OverTimeSecondFactor],
               [EmployeeNumber],
               [BadgeNumber],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [LLDetailCode1],
               [LLDetailCode2],
               [LLDetailCode3],
               [LLDetailCode4],
               [LLDetailCode5],
               [LLDetailCode6],
               [LLDetailCode7],
               [LLDetailCode8],
               [LLDetailCode9],
               [LLDetailCode10],
               [LLDetailCode11],
               [LLDetailCode12],
               [LLDetailCode13],
               [LLDetailCode14],
               [LLDetailCode15],
               [LLID1],
               [LLID2],
               [LLID3],
               [LLID4],
               [LLID5],
               [LLID6],
               [LLID7],
               [LLID8],
               [LLID9],
               [LLID10],
               [LLID11],
               [LLID12],
               [LLID13],
               [LLID14],
               [LLID15],
               [Tlo_TimeSlicePostID],
               [Stratus_TimeSlicePostID],
               [StagedOn],
               [StageSession],
               [StageComplete],
               [StagedBy]
        FROM   [conv].[TimeSlicePost_Staged];
    END

DROP TABLE [conv].[TimeSlicePost_Staged];

EXECUTE sp_rename N'[conv].[tmp_ms_xx_TimeSlicePost_Staged]', N'TimeSlicePost_Staged';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [conv].[TimeSlicePost_Tlo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [conv].[tmp_ms_xx_TimeSlicePost_Tlo] (
    [TimeSlicePostID]               INT           NOT NULL,
    [TimeSliceGroupID]              INT           NOT NULL,
    [UserID]                        INT           NOT NULL,
    [PayTypeID]                     INT           NOT NULL,
    [ActualTimeIn]                  DATETIME      NOT NULL,
    [ActualTimeOut]                 DATETIME      NOT NULL,
    [ActualPaidDuration]            INT           NOT NULL,
    [RegDuration]                   INT           NOT NULL,
    [OT1Duration]                   INT           NOT NULL,
    [OT2Duration]                   INT           NOT NULL,
    [UnpaidDuration]                INT           NOT NULL,
    [Modified]                      BIT           NOT NULL,
    [PayRate]                       MONEY         NOT NULL,
    [FinalRate]                     MONEY         NOT NULL,
    [ChargeRate]                    MONEY         NOT NULL,
    [TimeSlicePreID_Candidate]      INT           NOT NULL,
    [TimeSlicePreID_In]             INT           NOT NULL,
    [TimeSlicePreID_Out]            INT           NOT NULL,
    [TimeSlicepostTypeID]           INT           NOT NULL,
    [IsSwipeAndGo]                  BIT           NOT NULL,
    [RoundedTimeIn]                 DATETIME      NOT NULL,
    [RoundedTimeOut]                DATETIME      NOT NULL,
    [PayType_Description]           VARCHAR (50)  NOT NULL,
    [OverridesAbsence]              BIT           NOT NULL,
    [TimeSlicePreTypeID]            INT           NOT NULL,
    [ApplyToOT]                     BIT           NOT NULL,
    [EmployeeNoteIn]                VARCHAR (255) NOT NULL,
    [EmployeeNoteOut]               VARCHAR (255) NOT NULL,
    [SupervisorNoteIn]              VARCHAR (255) NOT NULL,
    [SupervisorNoteOut]             VARCHAR (255) NOT NULL,
    [EmployeeApprovedIn]            BIT           NULL,
    [EmployeeApprovedOut]           BIT           NULL,
    [SupervisorApprovedIn]          BIT           NULL,
    [SupervisorApprovedOut]         BIT           NULL,
    [TimeSlicePreTypeIn]            INT           NULL,
    [TimeSlicePreTypeOut]           INT           NULL,
    [IsModifiedIn]                  BIT           NOT NULL,
    [IsModifiedOut]                 BIT           NOT NULL,
    [ApplyToDate]                   DATETIME      NOT NULL,
    [TimeSheetSubmission]           BIT           NULL,
    [RecordOriginIDIn]              SMALLINT      NULL,
    [RecordOriginIDOut]             SMALLINT      NULL,
    [PayLevelID]                    INT           NULL,
    [CountTowardsHolidayMinMinutes] BIT           NULL,
    [TimeZone]                      VARCHAR (100) NOT NULL,
    [OverTimeRegularFactor]         FLOAT (53)    NULL,
    [OverTimeSecondFactor]          FLOAT (53)    NULL,
    [EmployeeNumber]                VARCHAR (50)  NOT NULL,
    [BadgeNumber]                   INT           NOT NULL,
    [LLDetailID1]                   INT           NOT NULL,
    [LLDetailID2]                   INT           NOT NULL,
    [LLDetailID3]                   INT           NOT NULL,
    [LLDetailID4]                   INT           NOT NULL,
    [LLDetailID5]                   INT           NOT NULL,
    [LLDetailID6]                   INT           NOT NULL,
    [LLDetailID7]                   INT           NOT NULL,
    [LLDetailID8]                   INT           NOT NULL,
    [LLDetailID9]                   INT           NOT NULL,
    [LLDetailID10]                  INT           NOT NULL,
    [LLDetailID11]                  INT           NOT NULL,
    [LLDetailID12]                  INT           NOT NULL,
    [LLDetailID13]                  INT           NOT NULL,
    [LLDetailID14]                  INT           NOT NULL,
    [LLDetailID15]                  INT           NOT NULL,
    [LLDetailCode1]                 VARCHAR (50)  NULL,
    [LLDetailCode2]                 VARCHAR (50)  NULL,
    [LLDetailCode3]                 VARCHAR (50)  NULL,
    [LLDetailCode4]                 VARCHAR (50)  NULL,
    [LLDetailCode5]                 VARCHAR (50)  NULL,
    [LLDetailCode6]                 VARCHAR (50)  NULL,
    [LLDetailCode7]                 VARCHAR (50)  NULL,
    [LLDetailCode8]                 VARCHAR (50)  NULL,
    [LLDetailCode9]                 VARCHAR (50)  NULL,
    [LLDetailCode10]                VARCHAR (50)  NULL,
    [LLDetailCode11]                VARCHAR (50)  NULL,
    [LLDetailCode12]                VARCHAR (50)  NULL,
    [LLDetailCode13]                VARCHAR (50)  NULL,
    [LLDetailCode14]                VARCHAR (50)  NULL,
    [LLDetailCode15]                VARCHAR (50)  NULL,
    [LLID1]                         INT           NULL,
    [LLID2]                         INT           NULL,
    [LLID3]                         INT           NULL,
    [LLID4]                         INT           NULL,
    [LLID5]                         INT           NULL,
    [LLID6]                         INT           NULL,
    [LLID7]                         INT           NULL,
    [LLID8]                         INT           NULL,
    [LLID9]                         INT           NULL,
    [LLID10]                        INT           NULL,
    [LLID11]                        INT           NULL,
    [LLID12]                        INT           NULL,
    [LLID13]                        INT           NULL,
    [LLID14]                        INT           NULL,
    [LLID15]                        INT           NULL,
    [StagedOn]                      DATETIME      NULL,
    [StageSession]                  BIGINT        NULL,
    [StageComplete]                 BIT           NULL,
    [StagedBy]                      VARCHAR (50)  NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [conv].[TimeSlicePost_Tlo])
    BEGIN
        INSERT INTO [conv].[tmp_ms_xx_TimeSlicePost_Tlo] ([TimeSlicePostID], [TimeSliceGroupID], [UserID], [PayTypeID], [ActualTimeIn], [ActualTimeOut], [ActualPaidDuration], [RegDuration], [OT1Duration], [OT2Duration], [UnpaidDuration], [Modified], [PayRate], [FinalRate], [ChargeRate], [TimeSlicePreID_Candidate], [TimeSlicePreID_In], [TimeSlicePreID_Out], [TimeSlicepostTypeID], [IsSwipeAndGo], [RoundedTimeIn], [RoundedTimeOut], [PayType_Description], [OverridesAbsence], [TimeSlicePreTypeID], [ApplyToOT], [EmployeeNoteIn], [EmployeeNoteOut], [SupervisorNoteIn], [SupervisorNoteOut], [EmployeeApprovedIn], [EmployeeApprovedOut], [SupervisorApprovedIn], [SupervisorApprovedOut], [TimeSlicePreTypeIn], [TimeSlicePreTypeOut], [IsModifiedIn], [IsModifiedOut], [ApplyToDate], [TimeSheetSubmission], [RecordOriginIDIn], [RecordOriginIDOut], [PayLevelID], [CountTowardsHolidayMinMinutes], [TimeZone], [OverTimeRegularFactor], [OverTimeSecondFactor], [EmployeeNumber], [BadgeNumber], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [LLDetailCode1], [LLDetailCode2], [LLDetailCode3], [LLDetailCode4], [LLDetailCode5], [LLDetailCode6], [LLDetailCode7], [LLDetailCode8], [LLDetailCode9], [LLDetailCode10], [LLDetailCode11], [LLDetailCode12], [LLDetailCode13], [LLDetailCode14], [LLDetailCode15], [LLID1], [LLID2], [LLID3], [LLID4], [LLID5], [LLID6], [LLID7], [LLID8], [LLID9], [LLID10], [LLID11], [LLID12], [LLID13], [LLID14], [LLID15], [StagedOn], [StageSession], [StageComplete], [StagedBy])
        SELECT [TimeSlicePostID],
               [TimeSliceGroupID],
               [UserID],
               [PayTypeID],
               [ActualTimeIn],
               [ActualTimeOut],
               [ActualPaidDuration],
               [RegDuration],
               [OT1Duration],
               [OT2Duration],
               [UnpaidDuration],
               [Modified],
               [PayRate],
               [FinalRate],
               [ChargeRate],
               [TimeSlicePreID_Candidate],
               [TimeSlicePreID_In],
               [TimeSlicePreID_Out],
               [TimeSlicepostTypeID],
               [IsSwipeAndGo],
               [RoundedTimeIn],
               [RoundedTimeOut],
               [PayType_Description],
               [OverridesAbsence],
               [TimeSlicePreTypeID],
               [ApplyToOT],
               [EmployeeNoteIn],
               [EmployeeNoteOut],
               [SupervisorNoteIn],
               [SupervisorNoteOut],
               [EmployeeApprovedIn],
               [EmployeeApprovedOut],
               [SupervisorApprovedIn],
               [SupervisorApprovedOut],
               [TimeSlicePreTypeIn],
               [TimeSlicePreTypeOut],
               [IsModifiedIn],
               [IsModifiedOut],
               [ApplyToDate],
               [TimeSheetSubmission],
               [RecordOriginIDIn],
               [RecordOriginIDOut],
               [PayLevelID],
               [CountTowardsHolidayMinMinutes],
               [TimeZone],
               [OverTimeRegularFactor],
               [OverTimeSecondFactor],
               [EmployeeNumber],
               [BadgeNumber],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [LLDetailCode1],
               [LLDetailCode2],
               [LLDetailCode3],
               [LLDetailCode4],
               [LLDetailCode5],
               [LLDetailCode6],
               [LLDetailCode7],
               [LLDetailCode8],
               [LLDetailCode9],
               [LLDetailCode10],
               [LLDetailCode11],
               [LLDetailCode12],
               [LLDetailCode13],
               [LLDetailCode14],
               [LLDetailCode15],
               [LLID1],
               [LLID2],
               [LLID3],
               [LLID4],
               [LLID5],
               [LLID6],
               [LLID7],
               [LLID8],
               [LLID9],
               [LLID10],
               [LLID11],
               [LLID12],
               [LLID13],
               [LLID14],
               [LLID15],
               [StagedOn],
               [StageSession],
               [StageComplete],
               [StagedBy]
        FROM   [conv].[TimeSlicePost_Tlo];
    END

DROP TABLE [conv].[TimeSlicePost_Tlo];

EXECUTE sp_rename N'[conv].[tmp_ms_xx_TimeSlicePost_Tlo]', N'TimeSlicePost_Tlo';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [conv].[TimeSlicePre_Staged]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [conv].[tmp_ms_xx_TimeSlicePre_Staged] (
    [TimeSlicePreID]           INT             NULL,
    [UserID]                   INT             NULL,
    [PayTypeID]                INT             NULL,
    [TransactionDateTime]      DATETIME        NULL,
    [TransactionUTCDateTime]   DATETIME        NULL,
    [IsModified]               BIT             NULL,
    [ClosedType]               INT             NULL,
    [TransactionType]          INT             NULL,
    [TransactionSource]        INT             NULL,
    [HardwareTerminalID]       INT             NULL,
    [IsTimeSheetSubmission]    BIT             NULL,
    [MgrApproved]              BIT             NULL,
    [MgrNote]                  NVARCHAR (MAX)  NULL,
    [EmpApproved]              BIT             NULL,
    [EmpNote]                  NVARCHAR (MAX)  NULL,
    [ApplyToOvertimeType]      INT             NULL,
    [TimeSliceGroupID]         VARCHAR (50)    NULL,
    [LLDetailID1]              INT             NULL,
    [LLDetailID2]              INT             NULL,
    [LLDetailID3]              INT             NULL,
    [LLDetailID4]              INT             NULL,
    [LLDetailID5]              INT             NULL,
    [LLDetailID6]              INT             NULL,
    [LLDetailID7]              INT             NULL,
    [LLDetailID8]              INT             NULL,
    [LLDetailID9]              INT             NULL,
    [LLDetailID10]             INT             NULL,
    [LLDetailID11]             INT             NULL,
    [LLDetailID12]             INT             NULL,
    [LLDetailID13]             INT             NULL,
    [LLDetailID14]             INT             NULL,
    [LLDetailID15]             INT             NULL,
    [HashValue]                VARCHAR (MAX)   NULL,
    [ApplyToDate]              DATETIME        NULL,
    [PayLevelRateType]         INT             NULL,
    [IsMealPremium]            BIT             NULL,
    [ModifiedBy]               INT             NULL,
    [ModifiedOn]               DATETIME        NULL,
    [Mgr2Approved]             BIT             NULL,
    [AdminApproved]            BIT             NULL,
    [Latitude]                 DECIMAL (18, 4) NULL,
    [Longitude]                DECIMAL (18, 4) NULL,
    [MgrApprovedBy]            INT             NULL,
    [Mgr2ApprovedBy]           INT             NULL,
    [AdminApprovedBy]          INT             NULL,
    [IsSwipeAndGo]             BIT             NULL,
    [IsCallBack]               BIT             NULL,
    [CreatedBy]                INT             NULL,
    [CreatedOn]                DATETIME        NULL,
    [CreatedGUID]              NVARCHAR (50)   NULL,
    [ModifiedGUID]             NVARCHAR (50)   NULL,
    [WebKioskTerminalID]       INT             NULL,
    [PayTypeName]              VARCHAR (50)    NULL,
    [TimeZone]                 VARCHAR (100)   NULL,
    [EmployeeNumber]           VARCHAR (50)    NULL,
    [BadgeNumber]              INT             NULL,
    [LastChangeEmployeeNumber] VARCHAR (50)    NULL,
    [LastChangeBadgeNumber]    INT             NULL,
    [Tlo_TimeSlicePreID]       INT             NULL,
    [Stratus_TimeSlicePreID]   INT             NULL,
    [LLDetailCode1]            VARCHAR (50)    NULL,
    [LLDetailCode2]            VARCHAR (50)    NULL,
    [LLDetailCode3]            VARCHAR (50)    NULL,
    [LLDetailCode4]            VARCHAR (50)    NULL,
    [LLDetailCode5]            VARCHAR (50)    NULL,
    [LLDetailCode6]            VARCHAR (50)    NULL,
    [LLDetailCode7]            VARCHAR (50)    NULL,
    [LLDetailCode8]            VARCHAR (50)    NULL,
    [LLDetailCode9]            VARCHAR (50)    NULL,
    [LLDetailCode10]           VARCHAR (50)    NULL,
    [LLDetailCode11]           VARCHAR (50)    NULL,
    [LLDetailCode12]           VARCHAR (50)    NULL,
    [LLDetailCode13]           VARCHAR (50)    NULL,
    [LLDetailCode14]           VARCHAR (50)    NULL,
    [LLDetailCode15]           VARCHAR (50)    NULL,
    [LLID1]                    INT             NULL,
    [LLID2]                    INT             NULL,
    [LLID3]                    INT             NULL,
    [LLID4]                    INT             NULL,
    [LLID5]                    INT             NULL,
    [LLID6]                    INT             NULL,
    [LLID7]                    INT             NULL,
    [LLID8]                    INT             NULL,
    [LLID9]                    INT             NULL,
    [LLID10]                   INT             NULL,
    [LLID11]                   INT             NULL,
    [LLID12]                   INT             NULL,
    [LLID13]                   INT             NULL,
    [LLID14]                   INT             NULL,
    [LLID15]                   INT             NULL,
    [StagedOn]                 DATETIME        NULL,
    [StageSession]             BIGINT          NULL,
    [StageComplete]            BIT             NULL,
    [StagedBy]                 VARCHAR (50)    NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [conv].[TimeSlicePre_Staged])
    BEGIN
        INSERT INTO [conv].[tmp_ms_xx_TimeSlicePre_Staged] ([TimeSlicePreID], [UserID], [PayTypeID], [TransactionDateTime], [TransactionUTCDateTime], [IsModified], [ClosedType], [TransactionType], [TransactionSource], [HardwareTerminalID], [IsTimeSheetSubmission], [MgrApproved], [MgrNote], [EmpApproved], [EmpNote], [ApplyToOvertimeType], [TimeSliceGroupID], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [HashValue], [ApplyToDate], [PayLevelRateType], [IsMealPremium], [ModifiedBy], [ModifiedOn], [Mgr2Approved], [AdminApproved], [Latitude], [Longitude], [MgrApprovedBy], [Mgr2ApprovedBy], [AdminApprovedBy], [IsSwipeAndGo], [IsCallBack], [CreatedBy], [CreatedOn], [CreatedGUID], [ModifiedGUID], [WebKioskTerminalID], [PayTypeName], [TimeZone], [EmployeeNumber], [BadgeNumber], [LastChangeEmployeeNumber], [LastChangeBadgeNumber], [Tlo_TimeSlicePreID], [Stratus_TimeSlicePreID], [LLDetailCode1], [LLDetailCode2], [LLDetailCode3], [LLDetailCode4], [LLDetailCode5], [LLDetailCode6], [LLDetailCode7], [LLDetailCode8], [LLDetailCode9], [LLDetailCode10], [LLDetailCode11], [LLDetailCode12], [LLDetailCode13], [LLDetailCode14], [LLDetailCode15], [LLID1], [LLID2], [LLID3], [LLID4], [LLID5], [LLID6], [LLID7], [LLID8], [LLID9], [LLID10], [LLID11], [LLID12], [LLID13], [LLID14], [LLID15], [StagedOn], [StageSession], [StageComplete], [StagedBy])
        SELECT [TimeSlicePreID],
               [UserID],
               [PayTypeID],
               [TransactionDateTime],
               [TransactionUTCDateTime],
               [IsModified],
               [ClosedType],
               [TransactionType],
               [TransactionSource],
               [HardwareTerminalID],
               [IsTimeSheetSubmission],
               [MgrApproved],
               [MgrNote],
               [EmpApproved],
               [EmpNote],
               [ApplyToOvertimeType],
               [TimeSliceGroupID],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [HashValue],
               [ApplyToDate],
               [PayLevelRateType],
               [IsMealPremium],
               [ModifiedBy],
               [ModifiedOn],
               [Mgr2Approved],
               [AdminApproved],
               [Latitude],
               [Longitude],
               [MgrApprovedBy],
               [Mgr2ApprovedBy],
               [AdminApprovedBy],
               [IsSwipeAndGo],
               [IsCallBack],
               [CreatedBy],
               [CreatedOn],
               [CreatedGUID],
               [ModifiedGUID],
               [WebKioskTerminalID],
               [PayTypeName],
               [TimeZone],
               [EmployeeNumber],
               [BadgeNumber],
               [LastChangeEmployeeNumber],
               [LastChangeBadgeNumber],
               [Tlo_TimeSlicePreID],
               [Stratus_TimeSlicePreID],
               [LLDetailCode1],
               [LLDetailCode2],
               [LLDetailCode3],
               [LLDetailCode4],
               [LLDetailCode5],
               [LLDetailCode6],
               [LLDetailCode7],
               [LLDetailCode8],
               [LLDetailCode9],
               [LLDetailCode10],
               [LLDetailCode11],
               [LLDetailCode12],
               [LLDetailCode13],
               [LLDetailCode14],
               [LLDetailCode15],
               [LLID1],
               [LLID2],
               [LLID3],
               [LLID4],
               [LLID5],
               [LLID6],
               [LLID7],
               [LLID8],
               [LLID9],
               [LLID10],
               [LLID11],
               [LLID12],
               [LLID13],
               [LLID14],
               [LLID15],
               [StagedOn],
               [StageSession],
               [StageComplete],
               [StagedBy]
        FROM   [conv].[TimeSlicePre_Staged];
    END

DROP TABLE [conv].[TimeSlicePre_Staged];

EXECUTE sp_rename N'[conv].[tmp_ms_xx_TimeSlicePre_Staged]', N'TimeSlicePre_Staged';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [conv].[TimeSlicePre_Tlo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [conv].[tmp_ms_xx_TimeSlicePre_Tlo] (
    [TimeSlicePreID]            INT           NOT NULL,
    [UserID]                    INT           NOT NULL,
    [TimeSlicePreTypeID]        INT           NOT NULL,
    [PayLevelID]                INT           NULL,
    [PayTypeID]                 INT           NOT NULL,
    [ShiftDifferentialDetailID] INT           NULL,
    [TransactionTime]           DATETIME      NOT NULL,
    [TimeDuration]              INT           NOT NULL,
    [OverrideRounding]          BIT           NOT NULL,
    [Modified]                  BIT           NOT NULL,
    [TimeSheetSubmission]       BIT           NOT NULL,
    [OverrideSchedule]          BIT           NOT NULL,
    [SupervisorApproved]        BIT           NOT NULL,
    [SupervisorNote]            VARCHAR (255) NOT NULL,
    [EmployeeApproved]          BIT           NOT NULL,
    [EmployeeNote]              VARCHAR (255) NOT NULL,
    [ApplyToOT]                 BIT           NOT NULL,
    [SystemGeneratedTypeID]     TINYINT       NULL,
    [DateCreated]               DATETIME      NOT NULL,
    [ActualTransactionTime]     DATETIME      NOT NULL,
    [LastChangeTime]            DATETIME      NOT NULL,
    [LastChangeUserID]          INT           NOT NULL,
    [IsSwipeAndGo]              BIT           NOT NULL,
    [xHoursWorkedDetailID]      INT           NULL,
    [xDepartmentID]             INT           NULL,
    [xJobID]                    INT           NULL,
    [SupervisorName]            VARCHAR (100) NULL,
    [AutomaticClockOut]         DATETIME      NULL,
    [AutocreatedAdjustment]     BIT           NOT NULL,
    [LLDetailID1]               INT           NULL,
    [LLDetailID2]               INT           NULL,
    [LLDetailID3]               INT           NULL,
    [LLDetailID4]               INT           NULL,
    [LLDetailID5]               INT           NULL,
    [LLDetailID6]               INT           NULL,
    [LLDetailID7]               INT           NULL,
    [LLDetailID8]               INT           NULL,
    [LLDetailID9]               INT           NULL,
    [LLDetailID10]              INT           NULL,
    [LLDetailID11]              INT           NULL,
    [LLDetailID12]              INT           NULL,
    [LLDetailID13]              INT           NULL,
    [LLDetailID14]              INT           NULL,
    [LLDetailID15]              INT           NULL,
    [IsCallBack]                BIT           NOT NULL,
    [RecordOriginID]            SMALLINT      NOT NULL,
    [MealPenaltyID]             INT           NULL,
    [TimeSlicePreID_ParentIn]   INT           NULL,
    [TimeSlicePreID_ParentOut]  INT           NULL,
    [ClockID]                   INT           NULL,
    [BreakID]                   INT           NULL,
    [LLDeclared]                BIT           NULL,
    [JobID]                     BIGINT        NULL,
    [LaborAssignID]             BIGINT        NULL,
    [TimeSliceGroupID]          INT           NULL,
    [PayTypeName]               VARCHAR (50)  NULL,
    [ApplyToDate]               DATETIME      NULL,
    [TimeZone]                  VARCHAR (100) NULL,
    [EmployeeNumber]            VARCHAR (50)  NULL,
    [BadgeNumber]               INT           NULL,
    [LastChangeEmployeeNumber]  VARCHAR (50)  NULL,
    [LastChangeBadgeNumber]     INT           NULL,
    [LLDetailCode1]             VARCHAR (50)  NULL,
    [LLDetailCode2]             VARCHAR (50)  NULL,
    [LLDetailCode3]             VARCHAR (50)  NULL,
    [LLDetailCode4]             VARCHAR (50)  NULL,
    [LLDetailCode5]             VARCHAR (50)  NULL,
    [LLDetailCode6]             VARCHAR (50)  NULL,
    [LLDetailCode7]             VARCHAR (50)  NULL,
    [LLDetailCode8]             VARCHAR (50)  NULL,
    [LLDetailCode9]             VARCHAR (50)  NULL,
    [LLDetailCode10]            VARCHAR (50)  NULL,
    [LLDetailCode11]            VARCHAR (50)  NULL,
    [LLDetailCode12]            VARCHAR (50)  NULL,
    [LLDetailCode13]            VARCHAR (50)  NULL,
    [LLDetailCode14]            VARCHAR (50)  NULL,
    [LLDetailCode15]            VARCHAR (50)  NULL,
    [LLID1]                     INT           NULL,
    [LLID2]                     INT           NULL,
    [LLID3]                     INT           NULL,
    [LLID4]                     INT           NULL,
    [LLID5]                     INT           NULL,
    [LLID6]                     INT           NULL,
    [LLID7]                     INT           NULL,
    [LLID8]                     INT           NULL,
    [LLID9]                     INT           NULL,
    [LLID10]                    INT           NULL,
    [LLID11]                    INT           NULL,
    [LLID12]                    INT           NULL,
    [LLID13]                    INT           NULL,
    [LLID14]                    INT           NULL,
    [LLID15]                    INT           NULL,
    [StagedOn]                  DATETIME      NULL,
    [StageSession]              BIGINT        NULL,
    [StageComplete]             BIT           NULL,
    [StagedBy]                  VARCHAR (50)  NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [conv].[TimeSlicePre_Tlo])
    BEGIN
        INSERT INTO [conv].[tmp_ms_xx_TimeSlicePre_Tlo] ([TimeSlicePreID], [UserID], [TimeSlicePreTypeID], [PayLevelID], [PayTypeID], [ShiftDifferentialDetailID], [TransactionTime], [TimeDuration], [OverrideRounding], [Modified], [TimeSheetSubmission], [OverrideSchedule], [SupervisorApproved], [SupervisorNote], [EmployeeApproved], [EmployeeNote], [ApplyToOT], [SystemGeneratedTypeID], [DateCreated], [ActualTransactionTime], [LastChangeTime], [LastChangeUserID], [IsSwipeAndGo], [xHoursWorkedDetailID], [xDepartmentID], [xJobID], [SupervisorName], [AutomaticClockOut], [AutocreatedAdjustment], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [IsCallBack], [RecordOriginID], [MealPenaltyID], [TimeSlicePreID_ParentIn], [TimeSlicePreID_ParentOut], [ClockID], [BreakID], [LLDeclared], [JobID], [LaborAssignID], [TimeSliceGroupID], [PayTypeName], [ApplyToDate], [TimeZone], [EmployeeNumber], [BadgeNumber], [LastChangeEmployeeNumber], [LastChangeBadgeNumber], [LLDetailCode1], [LLDetailCode2], [LLDetailCode3], [LLDetailCode4], [LLDetailCode5], [LLDetailCode6], [LLDetailCode7], [LLDetailCode8], [LLDetailCode9], [LLDetailCode10], [LLDetailCode11], [LLDetailCode12], [LLDetailCode13], [LLDetailCode14], [LLDetailCode15], [LLID1], [LLID2], [LLID3], [LLID4], [LLID5], [LLID6], [LLID7], [LLID8], [LLID9], [LLID10], [LLID11], [LLID12], [LLID13], [LLID14], [LLID15], [StagedOn], [StageSession], [StageComplete], [StagedBy])
        SELECT [TimeSlicePreID],
               [UserID],
               [TimeSlicePreTypeID],
               [PayLevelID],
               [PayTypeID],
               [ShiftDifferentialDetailID],
               [TransactionTime],
               [TimeDuration],
               [OverrideRounding],
               [Modified],
               [TimeSheetSubmission],
               [OverrideSchedule],
               [SupervisorApproved],
               [SupervisorNote],
               [EmployeeApproved],
               [EmployeeNote],
               [ApplyToOT],
               [SystemGeneratedTypeID],
               [DateCreated],
               [ActualTransactionTime],
               [LastChangeTime],
               [LastChangeUserID],
               [IsSwipeAndGo],
               [xHoursWorkedDetailID],
               [xDepartmentID],
               [xJobID],
               [SupervisorName],
               [AutomaticClockOut],
               [AutocreatedAdjustment],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [IsCallBack],
               [RecordOriginID],
               [MealPenaltyID],
               [TimeSlicePreID_ParentIn],
               [TimeSlicePreID_ParentOut],
               [ClockID],
               [BreakID],
               [LLDeclared],
               [JobID],
               [LaborAssignID],
               [TimeSliceGroupID],
               [PayTypeName],
               [ApplyToDate],
               [TimeZone],
               [EmployeeNumber],
               [BadgeNumber],
               [LastChangeEmployeeNumber],
               [LastChangeBadgeNumber],
               [LLDetailCode1],
               [LLDetailCode2],
               [LLDetailCode3],
               [LLDetailCode4],
               [LLDetailCode5],
               [LLDetailCode6],
               [LLDetailCode7],
               [LLDetailCode8],
               [LLDetailCode9],
               [LLDetailCode10],
               [LLDetailCode11],
               [LLDetailCode12],
               [LLDetailCode13],
               [LLDetailCode14],
               [LLDetailCode15],
               [LLID1],
               [LLID2],
               [LLID3],
               [LLID4],
               [LLID5],
               [LLID6],
               [LLID7],
               [LLID8],
               [LLID9],
               [LLID10],
               [LLID11],
               [LLID12],
               [LLID13],
               [LLID14],
               [LLID15],
               [StagedOn],
               [StageSession],
               [StageComplete],
               [StagedBy]
        FROM   [conv].[TimeSlicePre_Tlo];
    END

DROP TABLE [conv].[TimeSlicePre_Tlo];

EXECUTE sp_rename N'[conv].[tmp_ms_xx_TimeSlicePre_Tlo]', N'TimeSlicePre_Tlo';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ACAPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ACAPolicy] (
    [ID]                         INT           IDENTITY (1, 1) NOT NULL,
    [ACAPolicyID]                INT           CONSTRAINT [DF_ACAPolicy_ACAPolicyID] DEFAULT ((0)) NOT NULL,
    [ACAPolicyName]              NVARCHAR (50) CONSTRAINT [DF_ACAPolicy_ACAPolicyName] DEFAULT ('') NOT NULL,
    [InitialStartDateType]       INT           CONSTRAINT [DF_ACAPolicy_InitialStartDateType] DEFAULT ((0)) NOT NULL,
    [InitialDuration]            INT           CONSTRAINT [DF_ACAPolicy_InitialDuration] DEFAULT ((0)) NOT NULL,
    [InitialDurationType]        INT           CONSTRAINT [DF_ACAPolicy_InitialDurationType] DEFAULT ((0)) NOT NULL,
    [InitialAdminPeriodEnabled]  BIT           CONSTRAINT [DF_ACAPolicy_InitialAdminPeriodEnabled] DEFAULT ((0)) NOT NULL,
    [InitialAdminPeriodDays]     INT           CONSTRAINT [DF_ACAPolicy_InitialAdminPeriodDays] DEFAULT ((0)) NOT NULL,
    [StandardStartDateType]      INT           CONSTRAINT [DF_ACAPolicy_StandardStartDateType] DEFAULT ((0)) NOT NULL,
    [StandardDuration]           INT           CONSTRAINT [DF_ACAPolicy_StandardDuration] DEFAULT ((0)) NOT NULL,
    [StandardDurationType]       INT           CONSTRAINT [DF_ACAPolicy_StandardDurationType] DEFAULT ((0)) NOT NULL,
    [StandardAdminPeriodEnabled] BIT           CONSTRAINT [DF_ACAPolicy_StandardAdminPeriodEnabled] DEFAULT ((0)) NOT NULL,
    [StandardAdminPeriodDays]    INT           CONSTRAINT [DF_ACAPolicy_StandardAdminPeriodDays] DEFAULT ((0)) NOT NULL,
    [WeeklyThresholdSecs]        INT           CONSTRAINT [DF_ACAPolicy_WeeklyThresholdSecs] DEFAULT ((0)) NOT NULL,
    [MonthlyThresholdSecs]       INT           CONSTRAINT [DF_ACAPolicy_MonthlyThresholdSecs] DEFAULT ((0)) NOT NULL,
    [WarnScheduleEnabled]        BIT           CONSTRAINT [DF_ACAPolicy_WarnScheduleEnabled] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                  BIT           CONSTRAINT [DF_ACAPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]              DATETIME      CONSTRAINT [DF_ACAPolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME      CONSTRAINT [DF_ACAPolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                 INT           CONSTRAINT [DF_ACAPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME      CONSTRAINT [DF_ACAPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [CustomDate]                 DATETIME      CONSTRAINT [DF_ACAPolicy_CustomDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ACAPolicy1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ACAPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ACAPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ACAPolicy] ([ID], [ACAPolicyID], [ACAPolicyName], [InitialStartDateType], [InitialDuration], [InitialDurationType], [InitialAdminPeriodEnabled], [InitialAdminPeriodDays], [StandardStartDateType], [StandardDuration], [StandardDurationType], [StandardAdminPeriodEnabled], [StandardAdminPeriodDays], [WeeklyThresholdSecs], [MonthlyThresholdSecs], [WarnScheduleEnabled], [IsDeleted], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [CustomDate])
        SELECT   [ID],
                 [ACAPolicyID],
                 [ACAPolicyName],
                 [InitialStartDateType],
                 [InitialDuration],
                 [InitialDurationType],
                 [InitialAdminPeriodEnabled],
                 [InitialAdminPeriodDays],
                 [StandardStartDateType],
                 [StandardDuration],
                 [StandardDurationType],
                 [StandardAdminPeriodEnabled],
                 [StandardAdminPeriodDays],
                 [WeeklyThresholdSecs],
                 [MonthlyThresholdSecs],
                 [WarnScheduleEnabled],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [CustomDate]
        FROM     [dbo].[ACAPolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ACAPolicy] OFF;
    END

DROP TABLE [dbo].[ACAPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ACAPolicy]', N'ACAPolicy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ACAPolicy1]', N'PK_ACAPolicy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ACAPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ACAPolicy]([ACAPolicyID] ASC, [ACAPolicyName] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ACAPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ACAPolicyAssign] (
    [ACAPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]            INT      CONSTRAINT [DF_ACAPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [ACAPolicyID]       INT      CONSTRAINT [DF_ACAPolicyAssign_ACAPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]     DATETIME CONSTRAINT [DF_ACAPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]       DATETIME CONSTRAINT [DF_ACAPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_ACAPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_ACAPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ACAPolicyAssign1] PRIMARY KEY CLUSTERED ([ACAPolicyAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ACAPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ACAPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ACAPolicyAssign] ([ACAPolicyAssignID], [UserID], [ACAPolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ACAPolicyAssignID],
                 [UserID],
                 [ACAPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ACAPolicyAssign]
        ORDER BY [ACAPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ACAPolicyAssign] OFF;
    END

DROP TABLE [dbo].[ACAPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ACAPolicyAssign]', N'ACAPolicyAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ACAPolicyAssign1]', N'PK_ACAPolicyAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ACAPolicyAssign]([ACAPolicyID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ActionsIconMessage]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ActionsIconMessage] (
    [ActionsIconMessageID] INT           IDENTITY (1, 1) NOT NULL,
    [MessageLine1]         NVARCHAR (50) CONSTRAINT [DF_ActionsIconMessage_MessageLine1] DEFAULT ('') NOT NULL,
    [MessageLine2]         NVARCHAR (50) CONSTRAINT [DF_ActionsIconMessage_MessageLine2] DEFAULT ('') NOT NULL,
    [ModifiedBy]           INT           CONSTRAINT [DF_ActionsIconMessage_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME      CONSTRAINT [DF_ActionsIconMessage_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ActionsIconMessage1] PRIMARY KEY CLUSTERED ([ActionsIconMessageID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ActionsIconMessage])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ActionsIconMessage] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ActionsIconMessage] ([ActionsIconMessageID], [MessageLine1], [MessageLine2], [ModifiedBy], [ModifiedOn])
        SELECT   [ActionsIconMessageID],
                 [MessageLine1],
                 [MessageLine2],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ActionsIconMessage]
        ORDER BY [ActionsIconMessageID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ActionsIconMessage] OFF;
    END

DROP TABLE [dbo].[ActionsIconMessage];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ActionsIconMessage]', N'ActionsIconMessage';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ActionsIconMessage1]', N'PK_ActionsIconMessage', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Alert]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Alert] (
    [ID]              INT           IDENTITY (1, 1) NOT NULL,
    [AlertID]         INT           CONSTRAINT [DF_Alert_AlertID] DEFAULT ((0)) NOT NULL,
    [AlertPolicyID]   INT           CONSTRAINT [DF_Alert_AlertPolicyID] DEFAULT ((0)) NOT NULL,
    [AlertName]       NVARCHAR (50) CONSTRAINT [DF_Alert_AlertName] DEFAULT ('') NOT NULL,
    [AlertType]       INT           CONSTRAINT [DF_Alert_AlertType] DEFAULT ((0)) NOT NULL,
    [ParameterSecs]   INT           CONSTRAINT [DF_Alert_ParameterSecs] DEFAULT ((0)) NOT NULL,
    [ParameterType]   INT           CONSTRAINT [DF_Alert_ParameterType] DEFAULT ((0)) NOT NULL,
    [ParameterID]     INT           CONSTRAINT [DF_Alert_ParameterID] DEFAULT ((0)) NOT NULL,
    [IsDeleted]       BIT           CONSTRAINT [DF_Alert_IsDeleted] DEFAULT ((0)) NOT NULL,
    [IsPromptEnabled] BIT           CONSTRAINT [DF_Alert_IsPromptEnabled] DEFAULT ((0)) NOT NULL,
    [StartDateTime]   DATETIME      CONSTRAINT [DF_Alert_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]     DATETIME      CONSTRAINT [DF_Alert_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]      INT           CONSTRAINT [DF_Alert_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME      CONSTRAINT [DF_Alert_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Alert1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Alert])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Alert] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Alert] ([ID], [AlertID], [AlertPolicyID], [AlertName], [AlertType], [ParameterSecs], [ParameterType], [ParameterID], [IsDeleted], [IsPromptEnabled], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [AlertID],
                 [AlertPolicyID],
                 [AlertName],
                 [AlertType],
                 [ParameterSecs],
                 [ParameterType],
                 [ParameterID],
                 [IsDeleted],
                 [IsPromptEnabled],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[Alert]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Alert] OFF;
    END

DROP TABLE [dbo].[Alert];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Alert]', N'Alert';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Alert1]', N'PK_Alert', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Alert].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Alert]([AlertPolicyID] ASC, [AlertName] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AlertAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertAssign] (
    [AlertAssignID]  INT      IDENTITY (1, 1) NOT NULL,
    [AlertID]        INT      CONSTRAINT [DF_AlertAssign_AlertID] DEFAULT ((0)) NOT NULL,
    [UserID]         INT      CONSTRAINT [DF_AlertAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDate]      DATETIME CONSTRAINT [DF_AlertAssign_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]        DATETIME CONSTRAINT [DF_AlertAssign_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserFilterType] INT      NOT NULL,
    [PreferenceID]   INT      CONSTRAINT [DF_AlertAssign_PreferenceID] DEFAULT ((0)) NOT NULL,
    [ReferenceID]    INT      CONSTRAINT [DF_AlertAssign_ReferenceID] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME CONSTRAINT [DF_AlertAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]     INT      CONSTRAINT [DF_AlertAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertAssign1] PRIMARY KEY CLUSTERED ([AlertAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertAssign] ([AlertAssignID], [AlertID], [UserID], [StartDate], [EndDate], [UserFilterType], [PreferenceID], [ReferenceID], [ModifiedOn], [ModifiedBy])
        SELECT   [AlertAssignID],
                 [AlertID],
                 [UserID],
                 [StartDate],
                 [EndDate],
                 [UserFilterType],
                 [PreferenceID],
                 [ReferenceID],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[AlertAssign]
        ORDER BY [AlertAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertAssign] OFF;
    END

DROP TABLE [dbo].[AlertAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertAssign]', N'AlertAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertAssign1]', N'PK_AlertAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AlertAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[AlertAssign]([UserID] ASC, [PreferenceID] ASC, [StartDate] ASC, [EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AlertAssignUserFilter]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertAssignUserFilter] (
    [AlertAssignUserFilterID] INT      IDENTITY (1, 1) NOT NULL,
    [AlertAssignID]           INT      CONSTRAINT [DF_AlertAssignUserFilter_AlertAssignID] DEFAULT ((0)) NOT NULL,
    [UserID]                  INT      CONSTRAINT [DF_AlertAssignUserFilter_UserID] DEFAULT ((0)) NOT NULL,
    [UserGroupID]             INT      CONSTRAINT [DF_AlertAssignUserFilter_UserGroupID] DEFAULT ((0)) NOT NULL,
    [UserGroupType]           INT      CONSTRAINT [DF_AlertAssignUserFilter_UserGroupType] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_AlertAssignUserFilter_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_AlertAssignUserFilter_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertAssignUserFilter1] PRIMARY KEY CLUSTERED ([AlertAssignUserFilterID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertAssignUserFilter])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertAssignUserFilter] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertAssignUserFilter] ([AlertAssignUserFilterID], [AlertAssignID], [UserID], [UserGroupID], [UserGroupType], [ModifiedOn], [ModifiedBy])
        SELECT   [AlertAssignUserFilterID],
                 [AlertAssignID],
                 [UserID],
                 [UserGroupID],
                 [UserGroupType],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[AlertAssignUserFilter]
        ORDER BY [AlertAssignUserFilterID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertAssignUserFilter] OFF;
    END

DROP TABLE [dbo].[AlertAssignUserFilter];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertAssignUserFilter]', N'AlertAssignUserFilter';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertAssignUserFilter1]', N'PK_AlertAssignUserFilter', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[AlertAssignUserFilter]([AlertAssignID] ASC, [UserID] ASC, [UserGroupID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AlertMessage]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertMessage] (
    [AlertMessageID]                 INT           IDENTITY (1, 1) NOT NULL,
    [UserID]                         INT           CONSTRAINT [DF_AlertMessage_UserID] DEFAULT ((0)) NOT NULL,
    [AlertType]                      INT           CONSTRAINT [DF_AlertMessage_AlertType] DEFAULT ((0)) NOT NULL,
    [ParameterSecs]                  INT           CONSTRAINT [DF_AlertMessage_ParameterSecs] DEFAULT ((0)) NOT NULL,
    [ParameterType]                  INT           CONSTRAINT [DF_AlertMessage_ParameterType] DEFAULT ((0)) NOT NULL,
    [ParameterID]                    INT           CONSTRAINT [DF_AlertMessage_ParameterID] DEFAULT ((0)) NOT NULL,
    [IsPromptEnabled]                BIT           CONSTRAINT [DF_AlertMessage_IsPromptEnabled] DEFAULT ((0)) NOT NULL,
    [MessageData]                    VARCHAR (MAX) CONSTRAINT [DF_AlertMessage_MessageData] DEFAULT ('') NOT NULL,
    [GeneratedOn]                    DATETIME      CONSTRAINT [DF_AlertMessage_GeneratedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [HashKey]                        VARCHAR (MAX) CONSTRAINT [DF_AlertMessage_HashKey] DEFAULT ('') NOT NULL,
    [AlertName]                      NVARCHAR (50) CONSTRAINT [DF_AlertMessage_AlertTypeName] DEFAULT ('') NOT NULL,
    [TimeSlicePostExceptionDetailID] INT           CONSTRAINT [DF_AlertMessage_TimeSlicePostExceptionDetailID] DEFAULT ((0)) NOT NULL,
    [DeletedMgr]                     VARCHAR (MAX) CONSTRAINT [DF_AlertMessage_DeletedMgr] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertMessage1] PRIMARY KEY CLUSTERED ([AlertMessageID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertMessage])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertMessage] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertMessage] ([AlertMessageID], [UserID], [AlertType], [ParameterSecs], [ParameterType], [ParameterID], [IsPromptEnabled], [MessageData], [GeneratedOn], [HashKey], [AlertName], [TimeSlicePostExceptionDetailID], [DeletedMgr])
        SELECT   [AlertMessageID],
                 [UserID],
                 [AlertType],
                 [ParameterSecs],
                 [ParameterType],
                 [ParameterID],
                 [IsPromptEnabled],
                 [MessageData],
                 [GeneratedOn],
                 [HashKey],
                 [AlertName],
                 [TimeSlicePostExceptionDetailID],
                 [DeletedMgr]
        FROM     [dbo].[AlertMessage]
        ORDER BY [AlertMessageID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertMessage] OFF;
    END

DROP TABLE [dbo].[AlertMessage];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertMessage]', N'AlertMessage';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertMessage1]', N'PK_AlertMessage', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[AlertMessageDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertMessageDetail] (
    [AlertMessageDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [MgrUserID]            INT      CONSTRAINT [DF_AlertMessageDetail_MgrUserID] DEFAULT ((0)) NOT NULL,
    [AlertMessageID]       INT      CONSTRAINT [DF_AlertMessageDetail_AlertMessageID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_AlertMessageDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_AlertMessageDetail_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [IsPromptDisabled]     BIT      CONSTRAINT [DF_AlertMessageDetail_IsPromptDisabled] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertMessageDetail1] PRIMARY KEY CLUSTERED ([AlertMessageDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertMessageDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertMessageDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertMessageDetail] ([AlertMessageDetailID], [MgrUserID], [AlertMessageID], [ModifiedBy], [ModifiedOn], [IsPromptDisabled])
        SELECT   [AlertMessageDetailID],
                 [MgrUserID],
                 [AlertMessageID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsPromptDisabled]
        FROM     [dbo].[AlertMessageDetail]
        ORDER BY [AlertMessageDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertMessageDetail] OFF;
    END

DROP TABLE [dbo].[AlertMessageDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertMessageDetail]', N'AlertMessageDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertMessageDetail1]', N'PK_AlertMessageDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[AlertPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertPolicy] (
    [AlertPolicyID]   INT           IDENTITY (1, 1) NOT NULL,
    [AlertPolicyName] NVARCHAR (50) CONSTRAINT [DF_AlertPolicy_AlertPolicyName] DEFAULT ('') NOT NULL,
    [IsDefault]       BIT           CONSTRAINT [DF_AlertPolicy_IsDefault] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT           CONSTRAINT [DF_AlertPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME      CONSTRAINT [DF_AlertPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]       BIT           CONSTRAINT [DF_AlertPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertPolicy1] PRIMARY KEY CLUSTERED ([AlertPolicyID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertPolicy] ([AlertPolicyID], [AlertPolicyName], [IsDefault], [ModifiedBy], [ModifiedOn], [IsDeleted])
        SELECT   [AlertPolicyID],
                 [AlertPolicyName],
                 [IsDefault],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDeleted]
        FROM     [dbo].[AlertPolicy]
        ORDER BY [AlertPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertPolicy] OFF;
    END

DROP TABLE [dbo].[AlertPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertPolicy]', N'AlertPolicy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertPolicy1]', N'PK_AlertPolicy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AlertPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[AlertPolicy]([AlertPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AlertPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AlertPolicyAssign] (
    [AlertPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_AlertPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [AlertPolicyID]       INT      CONSTRAINT [DF_AlertPolicyAssign_AlertPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]       DATETIME CONSTRAINT [DF_AlertPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]         DATETIME CONSTRAINT [DF_AlertPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_AlertPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_AlertPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AlertPolicyAssign1] PRIMARY KEY CLUSTERED ([AlertPolicyAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AlertPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AlertPolicyAssign] ([AlertPolicyAssignID], [UserID], [AlertPolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [AlertPolicyAssignID],
                 [UserID],
                 [AlertPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[AlertPolicyAssign]
        ORDER BY [AlertPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AlertPolicyAssign] OFF;
    END

DROP TABLE [dbo].[AlertPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AlertPolicyAssign]', N'AlertPolicyAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AlertPolicyAssign1]', N'PK_AlertPolicyAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[AlertPolicyAssign]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[AuditTrail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_AuditTrail] (
    [AuditTrailID]            INT            IDENTITY (1, 1) NOT NULL,
    [ActionByUserID]          INT            CONSTRAINT [DF_AuditTrail_ActionByUserID] DEFAULT ((0)) NOT NULL,
    [ClassName]               VARCHAR (100)  CONSTRAINT [DF_AuditTrail_ClassName] DEFAULT ('') NOT NULL,
    [ActionType]              VARCHAR (50)   CONSTRAINT [DF_AuditTrail_ActionType] DEFAULT ('') NOT NULL,
    [ActionDateTime]          DATETIME       CONSTRAINT [DF_AuditTrail_ActionDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [IdentityID]              INT            CONSTRAINT [DF_AuditTrail_IdentityID] DEFAULT ((0)) NOT NULL,
    [EntityID]                INT            CONSTRAINT [DF_AuditTrail_EntityID] DEFAULT ((0)) NOT NULL,
    [EntityName]              NVARCHAR (300) CONSTRAINT [DF_AuditTrail_EntityName] DEFAULT ('') NOT NULL,
    [ChangesMadeToUserID]     INT            CONSTRAINT [DF_AuditTrail_ChangesMadeToUserID] DEFAULT ((0)) NOT NULL,
    [CustomerSiteAccessLogID] INT            CONSTRAINT [DF_AuditTrail_CustomerSiteAccessLogID] DEFAULT ((0)) NOT NULL,
    [ActionSourceType]        INT            CONSTRAINT [DF_AuditTrail_ActionSourceType] DEFAULT ((0)) NOT NULL,
    [TransactionDateTime]     DATETIME       CONSTRAINT [DF_AuditTrail_TransactionDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [AuditData]               NVARCHAR (MAX) CONSTRAINT [DF_AuditTrail_AuditData1] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_AuditTrail1] PRIMARY KEY CLUSTERED ([AuditTrailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[AuditTrail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AuditTrail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_AuditTrail] ([AuditTrailID], [ActionByUserID], [ClassName], [ActionType], [ActionDateTime], [IdentityID], [EntityID], [EntityName], [ChangesMadeToUserID], [CustomerSiteAccessLogID], [ActionSourceType], [TransactionDateTime], [AuditData])
        SELECT   [AuditTrailID],
                 [ActionByUserID],
                 [ClassName],
                 [ActionType],
                 [ActionDateTime],
                 [IdentityID],
                 [EntityID],
                 [EntityName],
                 [ChangesMadeToUserID],
                 [CustomerSiteAccessLogID],
                 [ActionSourceType],
                 [TransactionDateTime],
                 [AuditData]
        FROM     [dbo].[AuditTrail]
        ORDER BY [AuditTrailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_AuditTrail] OFF;
    END

DROP TABLE [dbo].[AuditTrail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_AuditTrail]', N'AuditTrail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_AuditTrail1]', N'PK_AuditTrail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[AuditTrail].[IX_AuditTrail_ClassName_ActionDateTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditTrail_ClassName_ActionDateTime]
    ON [dbo].[AuditTrail]([ClassName] ASC, [ActionDateTime] ASC, [AuditTrailID] ASC);


GO
PRINT N'Creating [dbo].[AuditTrail].[IX_AuditTrail_ClassName_EntityID]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditTrail_ClassName_EntityID]
    ON [dbo].[AuditTrail]([ClassName] ASC, [EntityID] ASC);


GO
PRINT N'Creating [dbo].[AuditTrail].[IX_AuditTrail_ClassName_TransactionDateTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_AuditTrail_ClassName_TransactionDateTime]
    ON [dbo].[AuditTrail]([ClassName] ASC, [TransactionDateTime] ASC, [AuditTrailID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[BellScheduleTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BellScheduleTemplate] (
    [BellScheduleTemplateID] INT          IDENTITY (1, 1) NOT NULL,
    [Description]            VARCHAR (50) CONSTRAINT [DF_BellScheduleTemplate_Description] DEFAULT ('') NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BellScheduleTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BellScheduleTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BellScheduleTemplate] ([BellScheduleTemplateID], [Description])
        SELECT [BellScheduleTemplateID],
               [Description]
        FROM   [dbo].[BellScheduleTemplate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BellScheduleTemplate] OFF;
    END

DROP TABLE [dbo].[BellScheduleTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BellScheduleTemplate]', N'BellScheduleTemplate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[BellScheduleTemplateDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BellScheduleTemplateDetail] (
    [BellScheduleTemplateDetailID] INT          IDENTITY (1, 1) NOT NULL,
    [BellScheduleTemplateID]       INT          CONSTRAINT [DF_BellScheduleTemplateDetail_BellScheduleTemplateID] DEFAULT ((0)) NOT NULL,
    [Day]                          INT          CONSTRAINT [DF_BellScheduleTemplateDetail_Day] DEFAULT ((0)) NOT NULL,
    [BellTime]                     DATETIME     CONSTRAINT [DF_BellScheduleTemplateDetail_BellTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Duration]                     INT          CONSTRAINT [DF_BellScheduleTemplateDetail_Duration] DEFAULT ((0)) NOT NULL,
    [Description]                  VARCHAR (50) CONSTRAINT [DF_BellScheduleTemplateDetail_Description] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK___4__111] PRIMARY KEY CLUSTERED ([BellScheduleTemplateDetailID] ASC) WITH (FILLFACTOR = 90)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BellScheduleTemplateDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BellScheduleTemplateDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BellScheduleTemplateDetail] ([BellScheduleTemplateDetailID], [BellScheduleTemplateID], [Day], [BellTime], [Duration], [Description])
        SELECT   [BellScheduleTemplateDetailID],
                 [BellScheduleTemplateID],
                 [Day],
                 [BellTime],
                 [Duration],
                 [Description]
        FROM     [dbo].[BellScheduleTemplateDetail]
        ORDER BY [BellScheduleTemplateDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BellScheduleTemplateDetail] OFF;
    END

DROP TABLE [dbo].[BellScheduleTemplateDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BellScheduleTemplateDetail]', N'BellScheduleTemplateDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK___4__111]', N'PK___4__11', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[BillingInitialSetup]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BillingInitialSetup] (
    [BillingInitialSetupID] INT            IDENTITY (1, 1) NOT NULL,
    [FeatureName]           NVARCHAR (500) CONSTRAINT [DF_BillingInitialSetup_FeatureName] DEFAULT ('') NOT NULL,
    [FeatureFee]            MONEY          CONSTRAINT [DF_BillingInitialSetup_FeatureCharge] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]            INT            CONSTRAINT [DF_BillingInitialSetup_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME       CONSTRAINT [DF_BillingInitialSetup_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_BillingInitialSetup1] PRIMARY KEY CLUSTERED ([BillingInitialSetupID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BillingInitialSetup])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingInitialSetup] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BillingInitialSetup] ([BillingInitialSetupID], [FeatureName], [FeatureFee], [ModifiedBy], [ModifiedOn])
        SELECT   [BillingInitialSetupID],
                 [FeatureName],
                 [FeatureFee],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[BillingInitialSetup]
        ORDER BY [BillingInitialSetupID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingInitialSetup] OFF;
    END

DROP TABLE [dbo].[BillingInitialSetup];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BillingInitialSetup]', N'BillingInitialSetup';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_BillingInitialSetup1]', N'PK_BillingInitialSetup', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[BillingMonthlyData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BillingMonthlyData] (
    [BillingMonthlyDataID] INT      IDENTITY (1, 1) NOT NULL,
    [Month]                DATETIME CONSTRAINT [DF_BillingMonthlyData_Month] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [FeatureType]          INT      CONSTRAINT [DF_BillingMonthlyData_FeatureType] DEFAULT ((0)) NOT NULL,
    [FeatureFee]           MONEY    CONSTRAINT [DF_BillingMonthlyData_FeatureFee] DEFAULT ((0)) NOT NULL,
    [BilledEmployeeCount]  INT      CONSTRAINT [DF_BillingMonthlyData_EmployeeCount] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_BillingMonthlyData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_BillingMonthlyData_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ActualEmployeeCount]  INT      CONSTRAINT [DF_BillingMonthlyData_ActualEmployeeCount] DEFAULT ((0)) NOT NULL,
    [StartDateTime]        DATETIME CONSTRAINT [DF_BillingMonthlyData_StrartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]          DATETIME CONSTRAINT [DF_BillingMonthlyData_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_BillingMonthlyData1] PRIMARY KEY CLUSTERED ([BillingMonthlyDataID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BillingMonthlyData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BillingMonthlyData] ([BillingMonthlyDataID], [Month], [FeatureType], [FeatureFee], [BilledEmployeeCount], [ModifiedBy], [ModifiedOn], [ActualEmployeeCount], [StartDateTime], [EndDateTime])
        SELECT   [BillingMonthlyDataID],
                 [Month],
                 [FeatureType],
                 [FeatureFee],
                 [BilledEmployeeCount],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ActualEmployeeCount],
                 [StartDateTime],
                 [EndDateTime]
        FROM     [dbo].[BillingMonthlyData]
        ORDER BY [BillingMonthlyDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyData] OFF;
    END

DROP TABLE [dbo].[BillingMonthlyData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BillingMonthlyData]', N'BillingMonthlyData';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_BillingMonthlyData1]', N'PK_BillingMonthlyData', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[BillingMonthlyData]([Month] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[BillingMonthlyRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BillingMonthlyRate] (
    [BillingMonthlyRateID] INT      IDENTITY (1, 1) NOT NULL,
    [FromMonth]            DATETIME CONSTRAINT [DF_BillingMonthlyRate_FromMonth] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [FeatureType]          INT      CONSTRAINT [DF_BillingMonthlyRate_FeatureType] DEFAULT ((0)) NOT NULL,
    [FeatureFee]           MONEY    CONSTRAINT [DF_BillingMonthlyRate_FeatureFee] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_BillingMonthlyRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_BillingMonthlyRate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BillingMonthlyRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BillingMonthlyRate] ([BillingMonthlyRateID], [FromMonth], [FeatureType], [FeatureFee], [ModifiedBy], [ModifiedOn])
        SELECT [BillingMonthlyRateID],
               [FromMonth],
               [FeatureType],
               [FeatureFee],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[BillingMonthlyRate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyRate] OFF;
    END

DROP TABLE [dbo].[BillingMonthlyRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BillingMonthlyRate]', N'BillingMonthlyRate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[BillingMonthlyUser]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BillingMonthlyUser] (
    [BillingMonthlyUserID] INT           IDENTITY (1, 1) NOT NULL,
    [Month]                DATETIME      CONSTRAINT [DF_BillingMonthlyUser_Month] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserID]               INT           CONSTRAINT [DF_BillingMonthlyUser_UserID] DEFAULT ((0)) NOT NULL,
    [EmpIdentifier]        NVARCHAR (50) CONSTRAINT [DF_BillingMonthlyUser_EmpIdentifier] DEFAULT ('') NOT NULL,
    [FirstName]            NVARCHAR (50) CONSTRAINT [DF_BillingMonthlyUser_FirstName] DEFAULT ('') NOT NULL,
    [LastName]             NVARCHAR (50) CONSTRAINT [DF_BillingMonthlyUser_LastName] DEFAULT ('') NOT NULL,
    [ModifiedBy]           INT           CONSTRAINT [DF_BillingMonthlyUser_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME      CONSTRAINT [DF_BillingMonthlyUser_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDateTime]        DATETIME      CONSTRAINT [DF_BillingMonthlyUser_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]          DATETIME      CONSTRAINT [DF_BillingMonthlyUser_EndDateTime] DEFAULT (((12) / (31)) / (2100)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BillingMonthlyUser])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyUser] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BillingMonthlyUser] ([BillingMonthlyUserID], [Month], [UserID], [EmpIdentifier], [FirstName], [LastName], [ModifiedBy], [ModifiedOn], [StartDateTime], [EndDateTime])
        SELECT [BillingMonthlyUserID],
               [Month],
               [UserID],
               [EmpIdentifier],
               [FirstName],
               [LastName],
               [ModifiedBy],
               [ModifiedOn],
               [StartDateTime],
               [EndDateTime]
        FROM   [dbo].[BillingMonthlyUser];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingMonthlyUser] OFF;
    END

DROP TABLE [dbo].[BillingMonthlyUser];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BillingMonthlyUser]', N'BillingMonthlyUser';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[BillingTier]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_BillingTier] (
    [BillingTierID] INT   IDENTITY (1, 1) NOT NULL,
    [CountFrom]     INT   CONSTRAINT [DF_BillingTier_CountFrom] DEFAULT ((0)) NOT NULL,
    [CountTo]       INT   CONSTRAINT [DF_BillingTier_CountTo] DEFAULT ((0)) NOT NULL,
    [BaseRate]      MONEY CONSTRAINT [DF_BillingTier_BaseRate] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[BillingTier])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingTier] ON;
        INSERT INTO [dbo].[tmp_ms_xx_BillingTier] ([BillingTierID], [CountFrom], [CountTo], [BaseRate])
        SELECT [BillingTierID],
               [CountFrom],
               [CountTo],
               [BaseRate]
        FROM   [dbo].[BillingTier];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_BillingTier] OFF;
    END

DROP TABLE [dbo].[BillingTier];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_BillingTier]', N'BillingTier';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CallBackPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CallBackPolicy] (
    [ID]                 INT           IDENTITY (1, 1) NOT NULL,
    [CallBackPolicyID]   INT           CONSTRAINT [DF_CallBackPolicy_CallBackPolicyID] DEFAULT ((0)) NOT NULL,
    [CallBackPolicyName] NVARCHAR (50) CONSTRAINT [DF_CallBackPolicy_CallBackPolicyName] DEFAULT ('') NOT NULL,
    [ModifiedBy]         INT           CONSTRAINT [DF_CallBackPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME      CONSTRAINT [DF_CallBackPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]          BIT           CONSTRAINT [DF_CallBackPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]      DATETIME      CONSTRAINT [DF_CallBackPolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]        DATETIME      CONSTRAINT [DF_CallBackPolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CallBack1]
    ON [dbo].[tmp_ms_xx_CallBackPolicy]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CallBackPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CallBackPolicy] ([ID], [CallBackPolicyID], [CallBackPolicyName], [ModifiedBy], [ModifiedOn], [IsDeleted], [StartDateTime], [EndDateTime])
        SELECT   [ID],
                 [CallBackPolicyID],
                 [CallBackPolicyName],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime]
        FROM     [dbo].[CallBackPolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicy] OFF;
    END

DROP TABLE [dbo].[CallBackPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CallBackPolicy]', N'CallBackPolicy';

EXECUTE sp_rename N'[dbo].[CallBackPolicy].[tmp_ms_xx_index_PK_CallBack1]', N'PK_CallBack', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CallBackPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CallBackPolicy]([CallBackPolicyID] ASC, [CallBackPolicyName] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CallBackPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CallBackPolicyAssign] (
    [CallBackPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [CallBackPolicyID]       INT      CONSTRAINT [DF_CallBackPolicyAssign_CallBackPolicyID] DEFAULT ((0)) NOT NULL,
    [UserID]                 INT      CONSTRAINT [DF_CallBackPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]          DATETIME CONSTRAINT [DF_CallBackPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDatetime]            DATETIME CONSTRAINT [DF_CallBackPolicyAssign_EndDatetime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_CallBackPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_CallBackPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CallBackUserAssignment1]
    ON [dbo].[tmp_ms_xx_CallBackPolicyAssign]([CallBackPolicyAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CallBackPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CallBackPolicyAssign] ([CallBackPolicyAssignID], [CallBackPolicyID], [UserID], [StartDateTime], [EndDatetime], [ModifiedBy], [ModifiedOn])
        SELECT   [CallBackPolicyAssignID],
                 [CallBackPolicyID],
                 [UserID],
                 [StartDateTime],
                 [EndDatetime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[CallBackPolicyAssign]
        ORDER BY [CallBackPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyAssign] OFF;
    END

DROP TABLE [dbo].[CallBackPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CallBackPolicyAssign]', N'CallBackPolicyAssign';

EXECUTE sp_rename N'[dbo].[CallBackPolicyAssign].[tmp_ms_xx_index_PK_CallBackUserAssignment1]', N'PK_CallBackUserAssignment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CallBackPolicyAssign]([CallBackPolicyID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDatetime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CallBackPolicyDollarRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CallBackPolicyDollarRule] (
    [ID]                         INT             IDENTITY (1, 1) NOT NULL,
    [CallBackPolicyDollarRuleID] INT             CONSTRAINT [DF_CallBackPolicyDollarRule_CallBackPolicyDollarRuleID] DEFAULT ((0)) NOT NULL,
    [CallBackPolicyID]           INT             CONSTRAINT [DF_CallBackPolicyDollarRule_CallBackPolicyID] DEFAULT ((0)) NOT NULL,
    [WorkUptoSecs]               INT             CONSTRAINT [DF_CallBackPolicyDollarRule_WorkUptoSecs] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentID]            INT             CONSTRAINT [DF_CallBackPolicyDollarRule_PayAdjustmentID] DEFAULT ((0)) NOT NULL,
    [Amount]                     NUMERIC (18, 2) CONSTRAINT [DF_CallBackPolicyDollarRule_Amount] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                 INT             CONSTRAINT [DF_CallBackPolicyDollarRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME        CONSTRAINT [DF_CallBackPolicyDollarRule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDateTime]              DATETIME        CONSTRAINT [DF_CallBackPolicyDollarRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME        CONSTRAINT [DF_CallBackPolicyDollarRule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CallBackPolicyDollarRule1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CallBackPolicyDollarRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyDollarRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CallBackPolicyDollarRule] ([ID], [CallBackPolicyDollarRuleID], [CallBackPolicyID], [WorkUptoSecs], [PayAdjustmentID], [Amount], [ModifiedBy], [ModifiedOn], [StartDateTime], [EndDateTime])
        SELECT   [ID],
                 [CallBackPolicyDollarRuleID],
                 [CallBackPolicyID],
                 [WorkUptoSecs],
                 [PayAdjustmentID],
                 [Amount],
                 [ModifiedBy],
                 [ModifiedOn],
                 [StartDateTime],
                 [EndDateTime]
        FROM     [dbo].[CallBackPolicyDollarRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyDollarRule] OFF;
    END

DROP TABLE [dbo].[CallBackPolicyDollarRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CallBackPolicyDollarRule]', N'CallBackPolicyDollarRule';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CallBackPolicyDollarRule1]', N'PK_CallBackPolicyDollarRule', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CallBackPolicyDollarRule]([CallBackPolicyDollarRuleID] ASC, [CallBackPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CallBackPolicyTimeRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CallBackPolicyTimeRule] (
    [ID]                       INT      IDENTITY (1, 1) NOT NULL,
    [CallBackPolicyTimeRuleID] INT      CONSTRAINT [DF_CallBackPolicyTimeRule_CallBackPolicyTimeRuleID] DEFAULT ((0)) NOT NULL,
    [CallBackPolicyID]         INT      CONSTRAINT [DF_CallBackPolicyTimeRule_CallBackPolicyID] DEFAULT ((0)) NOT NULL,
    [WorkUptoSecs]             INT      CONSTRAINT [DF_CallBackPolicyTimeRule_WorkUptoSecs] DEFAULT ((0)) NOT NULL,
    [WorkPayTypeID]            INT      CONSTRAINT [DF_CallBackPolicyTimeRule_WorkPayTypeID] DEFAULT ('') NOT NULL,
    [NonWorkPayTypeID]         INT      CONSTRAINT [DF_CallBackPolicyTimeRule_NonWorkPayTypeID] DEFAULT ('') NOT NULL,
    [MinPaidSecs]              INT      CONSTRAINT [DF_CallBackPolicyTimeRule_MinPaidSecs] DEFAULT ((0)) NOT NULL,
    [AdditionalPaidSecs]       INT      CONSTRAINT [DF_CallBackPolicyTimeRule_AdditionalPaidSecs] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_CallBackPolicyTimeRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_CallBackPolicyTimeRule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDateTime]            DATETIME CONSTRAINT [DF_CallBackPolicyTimeRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]              DATETIME CONSTRAINT [DF_CallBackPolicyTimeRule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CallBackTimeRule1]
    ON [dbo].[tmp_ms_xx_CallBackPolicyTimeRule]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CallBackPolicyTimeRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyTimeRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CallBackPolicyTimeRule] ([ID], [CallBackPolicyTimeRuleID], [CallBackPolicyID], [WorkUptoSecs], [WorkPayTypeID], [NonWorkPayTypeID], [MinPaidSecs], [AdditionalPaidSecs], [ModifiedBy], [ModifiedOn], [StartDateTime], [EndDateTime])
        SELECT   [ID],
                 [CallBackPolicyTimeRuleID],
                 [CallBackPolicyID],
                 [WorkUptoSecs],
                 [WorkPayTypeID],
                 [NonWorkPayTypeID],
                 [MinPaidSecs],
                 [AdditionalPaidSecs],
                 [ModifiedBy],
                 [ModifiedOn],
                 [StartDateTime],
                 [EndDateTime]
        FROM     [dbo].[CallBackPolicyTimeRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CallBackPolicyTimeRule] OFF;
    END

DROP TABLE [dbo].[CallBackPolicyTimeRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CallBackPolicyTimeRule]', N'CallBackPolicyTimeRule';

EXECUTE sp_rename N'[dbo].[CallBackPolicyTimeRule].[tmp_ms_xx_index_PK_CallBackTimeRule1]', N'PK_CallBackTimeRule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CallBackPolicyTimeRule]([CallBackPolicyTimeRuleID] ASC, [CallBackPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Chart]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Chart] (
    [ChartID]              INT            IDENTITY (1, 1) NOT NULL,
    [ChartName]            NVARCHAR (50)  CONSTRAINT [DF_Chart_ChartName] DEFAULT ('') NOT NULL,
    [ChartType]            INT            CONSTRAINT [DF_Chart_ChartType] DEFAULT ((0)) NOT NULL,
    [ChartDisplayType]     INT            CONSTRAINT [DF_Chart_ChartDisplayType] DEFAULT ((0)) NOT NULL,
    [IsDynamic]            BIT            CONSTRAINT [DF_Chart_IsDynamic] DEFAULT ((0)) NOT NULL,
    [DateRangeType]        INT            CONSTRAINT [DF_Chart_DateRangeType] DEFAULT ((0)) NOT NULL,
    [LastXDays]            INT            CONSTRAINT [DF_Chart_LastXDays] DEFAULT ((0)) NOT NULL,
    [RefPayrollPolicyID]   INT            CONSTRAINT [DF_Chart_RefPayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [FromDate]             DATETIME       CONSTRAINT [DF_Chart_FromDate] DEFAULT ('1/1/1900') NOT NULL,
    [ToDate]               DATETIME       CONSTRAINT [DF_Chart_ToDate] DEFAULT ('1/1/1900') NOT NULL,
    [EmpFilterID]          INT            CONSTRAINT [DF_Chart_EmpFilterID] DEFAULT ((0)) NOT NULL,
    [OwnerUserID]          INT            CONSTRAINT [DF_Chart_OwnerUserID] DEFAULT ((0)) NOT NULL,
    [IsPublic]             BIT            CONSTRAINT [DF_Chart_IsPublic] DEFAULT ((0)) NOT NULL,
    [LL1Enabled]           BIT            CONSTRAINT [DF_Chart_LL1Enabled] DEFAULT ((0)) NOT NULL,
    [LL2Enabled]           BIT            CONSTRAINT [DF_Chart_LL2Enabled] DEFAULT ((0)) NOT NULL,
    [LL3Enabled]           BIT            CONSTRAINT [DF_Chart_LL3Enabled] DEFAULT ((0)) NOT NULL,
    [LL4Enabled]           BIT            CONSTRAINT [DF_Chart_LL4Enabled] DEFAULT ((0)) NOT NULL,
    [LL5Enabled]           BIT            CONSTRAINT [DF_Chart_LL5Enabled] DEFAULT ((0)) NOT NULL,
    [LL6Enabled]           BIT            CONSTRAINT [DF_Chart_LL6Enabled] DEFAULT ((0)) NOT NULL,
    [LL7Enabled]           BIT            CONSTRAINT [DF_Chart_LL7Enabled] DEFAULT ((0)) NOT NULL,
    [LL8Enabled]           BIT            CONSTRAINT [DF_Chart_LL8Enabled] DEFAULT ((0)) NOT NULL,
    [LL9Enabled]           BIT            CONSTRAINT [DF_Chart_LL9Enabled] DEFAULT ((0)) NOT NULL,
    [LL10Enabled]          BIT            CONSTRAINT [DF_Chart_LL10Enabled] DEFAULT ((0)) NOT NULL,
    [LL11Enabled]          BIT            CONSTRAINT [DF_Chart_LL11Enabled] DEFAULT ((0)) NOT NULL,
    [LL12Enabled]          BIT            CONSTRAINT [DF_Chart_LL12Enabled] DEFAULT ((0)) NOT NULL,
    [LL13Enabled]          BIT            CONSTRAINT [DF_Chart_LL13Enabled] DEFAULT ((0)) NOT NULL,
    [LL14Enabled]          BIT            CONSTRAINT [DF_Chart_LL14Enabled] DEFAULT ((0)) NOT NULL,
    [LL15Enabled]          BIT            CONSTRAINT [DF_Chart_LL15Enabled] DEFAULT ((0)) NOT NULL,
    [DataLimitType]        INT            CONSTRAINT [DF_Chart_DataLimitType] DEFAULT ((0)) NOT NULL,
    [DataLimitCount]       INT            CONSTRAINT [DF_Chart_DataLimitCount] DEFAULT ((0)) NOT NULL,
    [DataLimitCountOnType] INT            CONSTRAINT [DF_Chart_DataLimitCountOnType] DEFAULT ((0)) NOT NULL,
    [ShowOthersEnabled]    BIT            CONSTRAINT [DF_Chart_ShowOthersEnabled] DEFAULT ((0)) NOT NULL,
    [TotalDisplayType]     INT            CONSTRAINT [DF_Chart_TotalDisplayType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT            CONSTRAINT [DF_Chart_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME       CONSTRAINT [DF_Chart_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [EmpFilterData]        NVARCHAR (MAX) CONSTRAINT [DF_Chart_EmpFilterData] DEFAULT ('') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Chart1]
    ON [dbo].[tmp_ms_xx_Chart]([ChartID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Chart])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Chart] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Chart] ([ChartID], [ChartName], [ChartType], [ChartDisplayType], [IsDynamic], [DateRangeType], [LastXDays], [RefPayrollPolicyID], [FromDate], [ToDate], [EmpFilterID], [OwnerUserID], [IsPublic], [LL1Enabled], [LL2Enabled], [LL3Enabled], [LL4Enabled], [LL5Enabled], [LL6Enabled], [LL7Enabled], [LL8Enabled], [LL9Enabled], [LL10Enabled], [LL11Enabled], [LL12Enabled], [LL13Enabled], [LL14Enabled], [LL15Enabled], [DataLimitType], [DataLimitCount], [DataLimitCountOnType], [ShowOthersEnabled], [TotalDisplayType], [ModifiedBy], [ModifiedOn], [EmpFilterData])
        SELECT   [ChartID],
                 [ChartName],
                 [ChartType],
                 [ChartDisplayType],
                 [IsDynamic],
                 [DateRangeType],
                 [LastXDays],
                 [RefPayrollPolicyID],
                 [FromDate],
                 [ToDate],
                 [EmpFilterID],
                 [OwnerUserID],
                 [IsPublic],
                 [LL1Enabled],
                 [LL2Enabled],
                 [LL3Enabled],
                 [LL4Enabled],
                 [LL5Enabled],
                 [LL6Enabled],
                 [LL7Enabled],
                 [LL8Enabled],
                 [LL9Enabled],
                 [LL10Enabled],
                 [LL11Enabled],
                 [LL12Enabled],
                 [LL13Enabled],
                 [LL14Enabled],
                 [LL15Enabled],
                 [DataLimitType],
                 [DataLimitCount],
                 [DataLimitCountOnType],
                 [ShowOthersEnabled],
                 [TotalDisplayType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [EmpFilterData]
        FROM     [dbo].[Chart]
        ORDER BY [ChartID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Chart] OFF;
    END

DROP TABLE [dbo].[Chart];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Chart]', N'Chart';

EXECUTE sp_rename N'[dbo].[Chart].[tmp_ms_xx_index_PK_Chart1]', N'PK_Chart', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Chart].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Chart]([ChartName] ASC, [ChartType] ASC, [OwnerUserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ChartPayType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ChartPayType] (
    [ChartPayTypeID] INT      IDENTITY (1, 1) NOT NULL,
    [ChartID]        INT      CONSTRAINT [DF_ChartPayType_ChartID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]      INT      CONSTRAINT [DF_ChartPayType_PayTypeID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]     INT      CONSTRAINT [DF_ChartPayType_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME CONSTRAINT [DF_ChartPayType_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ChartPayType1]
    ON [dbo].[tmp_ms_xx_ChartPayType]([ChartPayTypeID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ChartPayType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ChartPayType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ChartPayType] ([ChartPayTypeID], [ChartID], [PayTypeID], [ModifiedBy], [ModifiedOn])
        SELECT   [ChartPayTypeID],
                 [ChartID],
                 [PayTypeID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ChartPayType]
        ORDER BY [ChartPayTypeID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ChartPayType] OFF;
    END

DROP TABLE [dbo].[ChartPayType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ChartPayType]', N'ChartPayType';

EXECUTE sp_rename N'[dbo].[ChartPayType].[tmp_ms_xx_index_PK_ChartPayType1]', N'PK_ChartPayType', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ChartPayType].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ChartPayType]([ChartID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CompTimePolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CompTimePolicy] (
    [ID]                          INT           IDENTITY (1, 1) NOT NULL,
    [CompTimePolicyID]            INT           CONSTRAINT [DF_CompTimePolicy_CompTimePolicyID] DEFAULT ((0)) NOT NULL,
    [CompTimePolicyName]          NVARCHAR (50) CONSTRAINT [DF_CompTimePolicy_CompTimePolicyName] DEFAULT ('') NOT NULL,
    [ConversionType]              INT           CONSTRAINT [DF_CompTimePolicy_BehaviorMethodType] DEFAULT ((0)) NOT NULL,
    [IsMgrApprovalToBankOvertime] BIT           CONSTRAINT [DF_CompTimePolicy_IsMgrApprovalToBankOvertime] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                   BIT           CONSTRAINT [DF_CompTimePolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]               DATETIME      CONSTRAINT [DF_CompTimePolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                 DATETIME      CONSTRAINT [DF_CompTimePolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                  INT           CONSTRAINT [DF_CompTimePolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                  DATETIME      CONSTRAINT [DF_CompTimePolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [RangeType]                   INT           CONSTRAINT [DF_CompTimePolicy_RangeType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CompTimePolicy1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CompTimePolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CompTimePolicy] ([ID], [CompTimePolicyID], [CompTimePolicyName], [ConversionType], [IsMgrApprovalToBankOvertime], [IsDeleted], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [RangeType])
        SELECT   [ID],
                 [CompTimePolicyID],
                 [CompTimePolicyName],
                 [ConversionType],
                 [IsMgrApprovalToBankOvertime],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [RangeType]
        FROM     [dbo].[CompTimePolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicy] OFF;
    END

DROP TABLE [dbo].[CompTimePolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CompTimePolicy]', N'CompTimePolicy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CompTimePolicy1]', N'PK_CompTimePolicy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CompTimePolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CompTimePolicyAssign] (
    [CompTimePolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT      CONSTRAINT [DF_CompTimePolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [CompTimePolicyID]       INT      CONSTRAINT [DF_CompTimePolicyAssign_CompTimePolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]          DATETIME CONSTRAINT [DF_CompTimePolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]            DATETIME CONSTRAINT [DF_CompTimePolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_CompTimePolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_CompTimePolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CompTimeAssign1] PRIMARY KEY CLUSTERED ([CompTimePolicyAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CompTimePolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CompTimePolicyAssign] ([CompTimePolicyAssignID], [UserID], [CompTimePolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [CompTimePolicyAssignID],
                 [UserID],
                 [CompTimePolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[CompTimePolicyAssign]
        ORDER BY [CompTimePolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicyAssign] OFF;
    END

DROP TABLE [dbo].[CompTimePolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CompTimePolicyAssign]', N'CompTimePolicyAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CompTimeAssign1]', N'PK_CompTimeAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CompTimePolicyDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CompTimePolicyDetail] (
    [ID]                     INT             IDENTITY (1, 1) NOT NULL,
    [CompTimePolicyDetailID] INT             CONSTRAINT [DF_CompTimePolicyDetail_CompTimePolicyDetailID] DEFAULT ((0)) NOT NULL,
    [CompTimePolicyID]       INT             CONSTRAINT [DF_CompTimePolicyDetail_CompTimePolicyID] DEFAULT ((0)) NOT NULL,
    [OvertimPayTypeID]       INT             CONSTRAINT [DF_CompTimePolicyDetail_OvertimPayTypeID] DEFAULT ((0)) NOT NULL,
    [ConversionFactor]       DECIMAL (18, 4) CONSTRAINT [DF_CompTimePolicyDetail_ConversionFactor] DEFAULT ((0)) NOT NULL,
    [ConversionPayTypeID]    INT             CONSTRAINT [DF_CompTimePolicyDetail_ConversionPayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]          DATETIME        CONSTRAINT [DF_CompTimePolicyDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]            DATETIME        CONSTRAINT [DF_CompTimePolicyDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT             CONSTRAINT [DF_CompTimePolicyDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME        CONSTRAINT [DF_CompTimePolicyDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayOutAsPayTypeID]      INT             CONSTRAINT [DF_CompTimePolicyDetail_PayOutAsPayTypeID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CompTimePolicyDetail1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CompTimePolicyDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicyDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CompTimePolicyDetail] ([ID], [CompTimePolicyDetailID], [CompTimePolicyID], [OvertimPayTypeID], [ConversionFactor], [ConversionPayTypeID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [PayOutAsPayTypeID])
        SELECT   [ID],
                 [CompTimePolicyDetailID],
                 [CompTimePolicyID],
                 [OvertimPayTypeID],
                 [ConversionFactor],
                 [ConversionPayTypeID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [PayOutAsPayTypeID]
        FROM     [dbo].[CompTimePolicyDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimePolicyDetail] OFF;
    END

DROP TABLE [dbo].[CompTimePolicyDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CompTimePolicyDetail]', N'CompTimePolicyDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CompTimePolicyDetail1]', N'PK_CompTimePolicyDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CompTimeRequest]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CompTimeRequest] (
    [CompTimeRequestID]    INT            IDENTITY (1, 1) NOT NULL,
    [UserID]               INT            CONSTRAINT [DF_CompTimeRequest_UserID] DEFAULT ((0)) NOT NULL,
    [StartDate]            DATETIME       CONSTRAINT [DF_CompTimeRequest_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]              DATETIME       CONSTRAINT [DF_CompTimeRequest_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [SecsToConvert]        INT            CONSTRAINT [DF_CompTimeRequest_SecsToConvert] DEFAULT ((0)) NOT NULL,
    [StatusType]           INT            NOT NULL,
    [ProcessingStatusType] INT            CONSTRAINT [DF_CompTimeRequest_ProcessingStatusType] DEFAULT ((0)) NOT NULL,
    [DateTimeSubmitted]    DATETIME       CONSTRAINT [DF_CompTimeRequest_DateTimeSubmitted] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EmpNote]              NVARCHAR (200) CONSTRAINT [DF_CompTimeRequest_EmpNote] DEFAULT ('') NOT NULL,
    [StatusChangedBy]      INT            CONSTRAINT [DF_CompTimeRequest_StatusChangedBy] DEFAULT ((0)) NOT NULL,
    [StatusChangedOn]      DATETIME       CONSTRAINT [DF_CompTimeRequest_StatusChangedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [TimeSlicePreID]       INT            CONSTRAINT [DF_CompTimeRequest_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_CompTimeRequest1] PRIMARY KEY CLUSTERED ([CompTimeRequestID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CompTimeRequest])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimeRequest] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CompTimeRequest] ([CompTimeRequestID], [UserID], [StartDate], [EndDate], [SecsToConvert], [StatusType], [ProcessingStatusType], [DateTimeSubmitted], [EmpNote], [StatusChangedBy], [StatusChangedOn], [TimeSlicePreID])
        SELECT   [CompTimeRequestID],
                 [UserID],
                 [StartDate],
                 [EndDate],
                 [SecsToConvert],
                 [StatusType],
                 [ProcessingStatusType],
                 [DateTimeSubmitted],
                 [EmpNote],
                 [StatusChangedBy],
                 [StatusChangedOn],
                 [TimeSlicePreID]
        FROM     [dbo].[CompTimeRequest]
        ORDER BY [CompTimeRequestID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CompTimeRequest] OFF;
    END

DROP TABLE [dbo].[CompTimeRequest];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CompTimeRequest]', N'CompTimeRequest';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_CompTimeRequest1]', N'PK_CompTimeRequest', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[CustomField]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CustomField] (
    [CustomFieldID]    INT             IDENTITY (1, 1) NOT NULL,
    [CustomFieldName]  NVARCHAR (50)   CONSTRAINT [DF_CustomField_CustomFieldName] DEFAULT ('') NOT NULL,
    [CustomFieldType]  INT             CONSTRAINT [DF_CustomField_CustomFieldType] DEFAULT ((0)) NOT NULL,
    [IsRequired]       BIT             CONSTRAINT [DF_CustomField_IsRequired] DEFAULT ((0)) NOT NULL,
    [HasDefinedValues] BIT             CONSTRAINT [DF_CustomField_HasDefinedValues] DEFAULT ((0)) NOT NULL,
    [DefaultString]    NVARCHAR (MAX)  CONSTRAINT [DF_CustomField_DefaultString] DEFAULT ('') NOT NULL,
    [DefaultDate]      DATETIME        CONSTRAINT [DF_CustomField_DefaultDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DefaultMoney]     MONEY           CONSTRAINT [DF_CustomField_DefaultMoney] DEFAULT ((0)) NOT NULL,
    [DefaultNumber]    DECIMAL (18, 2) CONSTRAINT [DF_CustomField_DefaultNumber] DEFAULT ((0)) NOT NULL,
    [DefaultSelect]    INT             CONSTRAINT [DF_CustomField_DefaultSelect] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT             CONSTRAINT [DF_CustomField_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME        CONSTRAINT [DF_CustomField_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsLLCustomField]  BIT             CONSTRAINT [DF_CustomField_IsLLCustomField] DEFAULT ((0)) NOT NULL,
    [LLID]             INT             CONSTRAINT [DF_CustomField_LLID] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]  INT             CONSTRAINT [DF_CustomField_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [IsMultiSelect]    BIT             CONSTRAINT [DF_CustomField_IsMultiSelect] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CustomField1]
    ON [dbo].[tmp_ms_xx_CustomField]([CustomFieldID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CustomField])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomField] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CustomField] ([CustomFieldID], [CustomFieldName], [CustomFieldType], [IsRequired], [HasDefinedValues], [DefaultString], [DefaultDate], [DefaultMoney], [DefaultNumber], [DefaultSelect], [ModifiedBy], [ModifiedOn], [IsLLCustomField], [LLID], [OrdinalPosition], [IsMultiSelect])
        SELECT   [CustomFieldID],
                 [CustomFieldName],
                 [CustomFieldType],
                 [IsRequired],
                 [HasDefinedValues],
                 [DefaultString],
                 [DefaultDate],
                 [DefaultMoney],
                 [DefaultNumber],
                 [DefaultSelect],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsLLCustomField],
                 [LLID],
                 [OrdinalPosition],
                 [IsMultiSelect]
        FROM     [dbo].[CustomField]
        ORDER BY [CustomFieldID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomField] OFF;
    END

DROP TABLE [dbo].[CustomField];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CustomField]', N'CustomField';

EXECUTE sp_rename N'[dbo].[CustomField].[tmp_ms_xx_index_PK_CustomField1]', N'PK_CustomField', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CustomField].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CustomField]([CustomFieldName] ASC, [CustomFieldType] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CustomFieldData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CustomFieldData] (
    [CustomFieldDataID] INT             IDENTITY (1, 1) NOT NULL,
    [CustomFieldID]     INT             CONSTRAINT [DF_CustomFieldData_CustomFieldID] DEFAULT ((0)) NOT NULL,
    [UserID]            INT             CONSTRAINT [DF_CustomFieldData_UserID] DEFAULT ((0)) NOT NULL,
    [DataString]        NVARCHAR (MAX)  CONSTRAINT [DF_CustomFieldData_DataString] DEFAULT ('') NOT NULL,
    [DataDate]          DATETIME        CONSTRAINT [DF_CustomFieldData_DataDate] DEFAULT ('1/1/1900') NOT NULL,
    [DataMoney]         MONEY           CONSTRAINT [DF_CustomFieldData_DataMoney] DEFAULT ((0)) NOT NULL,
    [DataNumber]        DECIMAL (18, 2) CONSTRAINT [DF_CustomFieldData_DataNumber] DEFAULT ((0)) NOT NULL,
    [DataSelect]        INT             CONSTRAINT [DF_CustomFieldData_DataSelect] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT             CONSTRAINT [DF_CustomFieldData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME        CONSTRAINT [DF_CustomFieldData_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LLDetailID]        INT             CONSTRAINT [DF_CustomFieldData_LLDetailID] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CustomFieldData1]
    ON [dbo].[tmp_ms_xx_CustomFieldData]([CustomFieldDataID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CustomFieldData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomFieldData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CustomFieldData] ([CustomFieldDataID], [CustomFieldID], [UserID], [DataString], [DataDate], [DataMoney], [DataNumber], [DataSelect], [ModifiedBy], [ModifiedOn], [LLDetailID])
        SELECT   [CustomFieldDataID],
                 [CustomFieldID],
                 [UserID],
                 [DataString],
                 [DataDate],
                 [DataMoney],
                 [DataNumber],
                 [DataSelect],
                 [ModifiedBy],
                 [ModifiedOn],
                 [LLDetailID]
        FROM     [dbo].[CustomFieldData]
        ORDER BY [CustomFieldDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomFieldData] OFF;
    END

DROP TABLE [dbo].[CustomFieldData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CustomFieldData]', N'CustomFieldData';

EXECUTE sp_rename N'[dbo].[CustomFieldData].[tmp_ms_xx_index_PK_CustomFieldData1]', N'PK_CustomFieldData', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CustomFieldData].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CustomFieldData]([CustomFieldID] ASC, [UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[CustomFieldSelect]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_CustomFieldSelect] (
    [CustomFieldSelectID]        INT            IDENTITY (1, 1) NOT NULL,
    [CustomFieldID]              INT            CONSTRAINT [DF_CustomFieldSelect_CustomFieldID] DEFAULT ((0)) NOT NULL,
    [CustomFieldType]            INT            CONSTRAINT [DF_CustomFieldSelect_CustomFieldType] DEFAULT ((0)) NOT NULL,
    [CustomFieldData]            NVARCHAR (MAX) CONSTRAINT [DF_CustomFieldSelect_CustomFieldData] DEFAULT ('') NOT NULL,
    [CustomFieldOrdinalPosition] INT            CONSTRAINT [DF_CustomFieldSelect_CustomFieldOrdinalPosition] DEFAULT ((0)) NOT NULL,
    [IsOptionSelectable]         BIT            CONSTRAINT [DF_CustomFieldSelect_IsOptionSelectable] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                 INT            CONSTRAINT [DF_CustomFieldSelect_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME       CONSTRAINT [DF_CustomFieldSelect_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_CustomFieldSelect1]
    ON [dbo].[tmp_ms_xx_CustomFieldSelect]([CustomFieldSelectID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[CustomFieldSelect])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomFieldSelect] ON;
        INSERT INTO [dbo].[tmp_ms_xx_CustomFieldSelect] ([CustomFieldSelectID], [CustomFieldID], [CustomFieldType], [CustomFieldData], [CustomFieldOrdinalPosition], [IsOptionSelectable], [ModifiedBy], [ModifiedOn])
        SELECT   [CustomFieldSelectID],
                 [CustomFieldID],
                 [CustomFieldType],
                 [CustomFieldData],
                 [CustomFieldOrdinalPosition],
                 [IsOptionSelectable],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[CustomFieldSelect]
        ORDER BY [CustomFieldSelectID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_CustomFieldSelect] OFF;
    END

DROP TABLE [dbo].[CustomFieldSelect];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_CustomFieldSelect]', N'CustomFieldSelect';

EXECUTE sp_rename N'[dbo].[CustomFieldSelect].[tmp_ms_xx_index_PK_CustomFieldSelect1]', N'PK_CustomFieldSelect', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[CustomFieldSelect]([CustomFieldID] ASC, [CustomFieldOrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[DataFilter]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_DataFilter] (
    [FilterID]       INT            IDENTITY (1, 1) NOT NULL,
    [FilterName]     NVARCHAR (50)  CONSTRAINT [DF_Filter_FilterName] DEFAULT ('') NOT NULL,
    [FilterType]     INT            CONSTRAINT [DF_Filter_FilterType] DEFAULT ((0)) NOT NULL,
    [IsPublic]       BIT            CONSTRAINT [DF_Filter_IsPublic] DEFAULT ((0)) NOT NULL,
    [UserID]         INT            CONSTRAINT [DF_Filter_UserID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]     INT            CONSTRAINT [DF_Filter_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME       CONSTRAINT [DF_Filter_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [FilterData]     NVARCHAR (MAX) CONSTRAINT [DF_Filter_FilterData1] DEFAULT ('') NOT NULL,
    [IsCustomFilter] BIT            CONSTRAINT [DF_Filter_IsCustomFilter] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Filter1]
    ON [dbo].[tmp_ms_xx_DataFilter]([FilterID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[DataFilter])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DataFilter] ON;
        INSERT INTO [dbo].[tmp_ms_xx_DataFilter] ([FilterID], [FilterName], [FilterType], [IsPublic], [UserID], [ModifiedBy], [ModifiedOn], [FilterData], [IsCustomFilter])
        SELECT   [FilterID],
                 [FilterName],
                 [FilterType],
                 [IsPublic],
                 [UserID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [FilterData],
                 [IsCustomFilter]
        FROM     [dbo].[DataFilter]
        ORDER BY [FilterID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_DataFilter] OFF;
    END

DROP TABLE [dbo].[DataFilter];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_DataFilter]', N'DataFilter';

EXECUTE sp_rename N'[dbo].[DataFilter].[tmp_ms_xx_index_PK_Filter1]', N'PK_Filter', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[DataFilter].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[DataFilter]([FilterName] ASC, [FilterType] ASC, [UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[EmailTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_EmailTemplate] (
    [EmailTemplateID] INT           IDENTITY (1, 1) NOT NULL,
    [EmailType]       INT           NOT NULL,
    [CategoryID]      INT           NOT NULL,
    [EmailSubject]    VARCHAR (MAX) NOT NULL,
    [EmailBody]       VARCHAR (MAX) NOT NULL,
    [ModifiedBy]      INT           NOT NULL,
    [ModifiedOn]      DATETIME      NOT NULL,
    [LanguageID]      VARCHAR (10)  CONSTRAINT [DF_EmailTemplate_LanguageID] DEFAULT ('en-US') NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[EmailTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EmailTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_EmailTemplate] ([EmailTemplateID], [EmailType], [CategoryID], [EmailSubject], [EmailBody], [ModifiedBy], [ModifiedOn], [LanguageID])
        SELECT [EmailTemplateID],
               [EmailType],
               [CategoryID],
               [EmailSubject],
               [EmailBody],
               [ModifiedBy],
               [ModifiedOn],
               [LanguageID]
        FROM   [dbo].[EmailTemplate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_EmailTemplate] OFF;
    END

DROP TABLE [dbo].[EmailTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_EmailTemplate]', N'EmailTemplate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ErrorCacheFingerprint]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ErrorCacheFingerprint] (
    [ID]                 INT              IDENTITY (1, 1) NOT NULL,
    [Minutiae1]          VARBINARY (2048) CONSTRAINT [DF_ErrorCacheFingerprint_Minutiae1] DEFAULT ((1)) NOT NULL,
    [Minutiae2]          VARBINARY (2048) CONSTRAINT [DF_ErrorCacheFingerprint_Minutiae2] DEFAULT ((2)) NOT NULL,
    [SpecialMinutiae]    BIT              CONSTRAINT [DF_ErrorCacheFingerprint_SpecialMinutiae] DEFAULT ((0)) NOT NULL,
    [BadgeNumber]        NVARCHAR (50)    NOT NULL,
    [HardwareTerminalID] INT              CONSTRAINT [DF_ErrorCacheFingerprint_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [ClientAlias]        NVARCHAR (50)    CONSTRAINT [DF_ErrorCacheFingerprint_ClientAlias] DEFAULT ('') NOT NULL,
    [ErrorCode]          INT              CONSTRAINT [DF_ErrorCacheFingerprint_ErrorCode] DEFAULT ((0)) NOT NULL,
    [ErrorDetails]       VARCHAR (MAX)    CONSTRAINT [DF_ErrorCacheFingerprint_ErrorDetails] DEFAULT ('') NOT NULL,
    [ModifiedOn]         DATETIME         CONSTRAINT [DF_ErrorCacheFingerprint_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]         INT              CONSTRAINT [DF_ErrorCacheFingerprint_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ResubmitAttempts]   INT              CONSTRAINT [DF_ErrorCacheFingerprint_ResubmitAttempts] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ErrorCacheFingerprint1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ErrorCacheFingerprint])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheFingerprint] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ErrorCacheFingerprint] ([ID], [Minutiae1], [Minutiae2], [SpecialMinutiae], [BadgeNumber], [HardwareTerminalID], [ClientAlias], [ErrorCode], [ErrorDetails], [ModifiedOn], [ModifiedBy], [ResubmitAttempts])
        SELECT   [ID],
                 [Minutiae1],
                 [Minutiae2],
                 [SpecialMinutiae],
                 [BadgeNumber],
                 [HardwareTerminalID],
                 [ClientAlias],
                 [ErrorCode],
                 [ErrorDetails],
                 [ModifiedOn],
                 [ModifiedBy],
                 [ResubmitAttempts]
        FROM     [dbo].[ErrorCacheFingerprint]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheFingerprint] OFF;
    END

DROP TABLE [dbo].[ErrorCacheFingerprint];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ErrorCacheFingerprint]', N'ErrorCacheFingerprint';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ErrorCacheFingerprint1]', N'PK_ErrorCacheFingerprint', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ErrorCacheHandTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ErrorCacheHandTemplate] (
    [ID]                 INT             IDENTITY (1, 1) NOT NULL,
    [BadgeNumber]        NVARCHAR (50)   CONSTRAINT [DF_ErrorCacheHandTemplate_BadgeNumber] DEFAULT ('') NOT NULL,
    [HandTemplate]       VARBINARY (100) CONSTRAINT [DF_ErrorCacheHandTemplate_HandTemplate] DEFAULT (0x) NOT NULL,
    [SpecialEnroll]      BIT             CONSTRAINT [DF_ErrorCacheHandTemplate_SpecialEnroll] DEFAULT ((0)) NOT NULL,
    [HardwareTerminalID] INT             CONSTRAINT [DF_ErrorCacheHandTemplate_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [ClientAlias]        NVARCHAR (50)   CONSTRAINT [DF_ErrorCacheHandTemplate_ClientAlias] DEFAULT ('') NOT NULL,
    [ErrorCode]          INT             CONSTRAINT [DF_ErrorCacheHandTemplate_ErrorCode] DEFAULT ((0)) NOT NULL,
    [ErrorDetails]       VARCHAR (MAX)   CONSTRAINT [DF_ErrorCacheHandTemplate_ErrorDetails] DEFAULT ('') NOT NULL,
    [ModifiedOn]         DATETIME        CONSTRAINT [DF_ErrorCacheHandTemplate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]         INT             CONSTRAINT [DF_ErrorCacheHandTemplate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ResubmitAttempts]   INT             CONSTRAINT [DF_ErrorCacheHandTemplate_ResubmitAttempts] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ErrorCacheHandTemplate1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ErrorCacheHandTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheHandTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ErrorCacheHandTemplate] ([ID], [BadgeNumber], [HandTemplate], [SpecialEnroll], [HardwareTerminalID], [ClientAlias], [ErrorCode], [ErrorDetails], [ModifiedOn], [ModifiedBy], [ResubmitAttempts])
        SELECT   [ID],
                 [BadgeNumber],
                 [HandTemplate],
                 [SpecialEnroll],
                 [HardwareTerminalID],
                 [ClientAlias],
                 [ErrorCode],
                 [ErrorDetails],
                 [ModifiedOn],
                 [ModifiedBy],
                 [ResubmitAttempts]
        FROM     [dbo].[ErrorCacheHandTemplate]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheHandTemplate] OFF;
    END

DROP TABLE [dbo].[ErrorCacheHandTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ErrorCacheHandTemplate]', N'ErrorCacheHandTemplate';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ErrorCacheHandTemplate1]', N'PK_ErrorCacheHandTemplate', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ErrorCachePayAdjustment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ErrorCachePayAdjustment] (
    [ID]                  INT            IDENTITY (1, 1) NOT NULL,
    [PayAdjustmentDataID] INT            NOT NULL,
    [PayAdjustmentID]     INT            CONSTRAINT [DF_ErrorCachePayAdjustment_PayAdjustmentID] DEFAULT ((0)) NOT NULL,
    [BadgeNumber]         NVARCHAR (50)  CONSTRAINT [DF_ErrorCachePayAdjustment_BadgeNumber] DEFAULT ('') NOT NULL,
    [Amount]              MONEY          CONSTRAINT [DF_ErrorCachePayAdjustment_Amount] DEFAULT ((0)) NOT NULL,
    [TransactionDateTime] DATETIME       NOT NULL,
    [Notes]               NVARCHAR (MAX) NOT NULL,
    [HardwareTerminalID]  INT            CONSTRAINT [DF_ErrorCachePayAdjustment_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [ClientAlias]         NVARCHAR (50)  CONSTRAINT [DF_ErrorCachePayAdjustment_ClientAlias] DEFAULT ('') NOT NULL,
    [ErrorCode]           INT            CONSTRAINT [DF_ErrorCachePayAdjustment_ErrorCode] DEFAULT ((0)) NOT NULL,
    [ErrorDetails]        VARCHAR (MAX)  NOT NULL,
    [ModifiedOn]          DATETIME       CONSTRAINT [DF_ErrorCachePayAdjustment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT            CONSTRAINT [DF_ErrorCachePayAdjustment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ResubmitAttempts]    INT            CONSTRAINT [DF_ErrorCachePayAdjustment_ResubmitAttempts] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ErrorCachePayAdjustment1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ErrorCachePayAdjustment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCachePayAdjustment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ErrorCachePayAdjustment] ([ID], [PayAdjustmentDataID], [PayAdjustmentID], [BadgeNumber], [Amount], [TransactionDateTime], [Notes], [HardwareTerminalID], [ClientAlias], [ErrorCode], [ErrorDetails], [ModifiedOn], [ModifiedBy], [ResubmitAttempts])
        SELECT   [ID],
                 [PayAdjustmentDataID],
                 [PayAdjustmentID],
                 [BadgeNumber],
                 [Amount],
                 [TransactionDateTime],
                 [Notes],
                 [HardwareTerminalID],
                 [ClientAlias],
                 [ErrorCode],
                 [ErrorDetails],
                 [ModifiedOn],
                 [ModifiedBy],
                 [ResubmitAttempts]
        FROM     [dbo].[ErrorCachePayAdjustment]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCachePayAdjustment] OFF;
    END

DROP TABLE [dbo].[ErrorCachePayAdjustment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ErrorCachePayAdjustment]', N'ErrorCachePayAdjustment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ErrorCachePayAdjustment1]', N'PK_ErrorCachePayAdjustment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ErrorCacheTransaction]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ErrorCacheTransaction] (
    [ID]                  INT           IDENTITY (1, 1) NOT NULL,
    [TransactionID]       INT           CONSTRAINT [DF_ErrorCacheTransaction_TransactionID] DEFAULT ((0)) NOT NULL,
    [BadgeNumber]         NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_BadgeNumber] DEFAULT ('') NOT NULL,
    [TransactionType]     INT           CONSTRAINT [DF_ErrorCacheTransaction_TransactionType] DEFAULT ((0)) NOT NULL,
    [TransactionDateTime] DATETIME      CONSTRAINT [DF_ErrorCacheTransaction_TransactionDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LL1]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL1] DEFAULT ('') NOT NULL,
    [LL2]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL2] DEFAULT ('') NOT NULL,
    [LL3]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL3] DEFAULT ('') NOT NULL,
    [LL4]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL4] DEFAULT ('') NOT NULL,
    [LL5]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL5] DEFAULT ('') NOT NULL,
    [LL6]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL6] DEFAULT ('') NOT NULL,
    [LL7]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL7] DEFAULT ('') NOT NULL,
    [LL8]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL8] DEFAULT ('') NOT NULL,
    [LL9]                 NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL9] DEFAULT ('') NOT NULL,
    [LL10]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL10] DEFAULT ('') NOT NULL,
    [LL11]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL11] DEFAULT ('') NOT NULL,
    [LL12]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL12] DEFAULT ('') NOT NULL,
    [LL13]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL13] DEFAULT ('') NOT NULL,
    [LL14]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL14] DEFAULT ('') NOT NULL,
    [LL15]                NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_LL15] DEFAULT ('') NOT NULL,
    [HardwareTerminalID]  INT           CONSTRAINT [DF_ErrorCacheTransaction_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [ClientAlias]         NVARCHAR (50) CONSTRAINT [DF_ErrorCacheTransaction_ClientAlias] DEFAULT ('') NOT NULL,
    [ErrorCode]           INT           CONSTRAINT [DF_ErrorCacheTransaction_ErrorCode] DEFAULT ((0)) NOT NULL,
    [ErrorDetails]        VARCHAR (MAX) CONSTRAINT [DF_ErrorCacheTransaction_ErrorDetails] DEFAULT ('') NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_ErrorCacheTransaction_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_ErrorCacheTransaction_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ResubmitAttempts]    INT           CONSTRAINT [DF_ErrorCacheTransaction_ResubmitAttempts] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ErrorCacheTransactions1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ErrorCacheTransaction])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheTransaction] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ErrorCacheTransaction] ([ID], [TransactionID], [BadgeNumber], [TransactionType], [TransactionDateTime], [LL1], [LL2], [LL3], [LL4], [LL5], [LL6], [LL7], [LL8], [LL9], [LL10], [LL11], [LL12], [LL13], [LL14], [LL15], [HardwareTerminalID], [ClientAlias], [ErrorCode], [ErrorDetails], [ModifiedOn], [ModifiedBy], [ResubmitAttempts])
        SELECT   [ID],
                 [TransactionID],
                 [BadgeNumber],
                 [TransactionType],
                 [TransactionDateTime],
                 [LL1],
                 [LL2],
                 [LL3],
                 [LL4],
                 [LL5],
                 [LL6],
                 [LL7],
                 [LL8],
                 [LL9],
                 [LL10],
                 [LL11],
                 [LL12],
                 [LL13],
                 [LL14],
                 [LL15],
                 [HardwareTerminalID],
                 [ClientAlias],
                 [ErrorCode],
                 [ErrorDetails],
                 [ModifiedOn],
                 [ModifiedBy],
                 [ResubmitAttempts]
        FROM     [dbo].[ErrorCacheTransaction]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ErrorCacheTransaction] OFF;
    END

DROP TABLE [dbo].[ErrorCacheTransaction];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ErrorCacheTransaction]', N'ErrorCacheTransaction';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ErrorCacheTransactions1]', N'PK_ErrorCacheTransactions', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ExceptionPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExceptionPolicy] (
    [ExceptionPolicyID]   INT           IDENTITY (1, 1) NOT NULL,
    [ExceptionPolicyName] NVARCHAR (50) CONSTRAINT [DF_ExceptionPolicy_ExceptionPolicyName] DEFAULT ('') NOT NULL,
    [IsDeleted]           BIT           CONSTRAINT [DF_ExceptionPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_ExceptionPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_ExceptionPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ExceptionPolicy1]
    ON [dbo].[tmp_ms_xx_ExceptionPolicy]([ExceptionPolicyID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExceptionPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExceptionPolicy] ([ExceptionPolicyID], [ExceptionPolicyName], [IsDeleted], [ModifiedBy], [ModifiedOn])
        SELECT   [ExceptionPolicyID],
                 [ExceptionPolicyName],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ExceptionPolicy]
        ORDER BY [ExceptionPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicy] OFF;
    END

DROP TABLE [dbo].[ExceptionPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExceptionPolicy]', N'ExceptionPolicy';

EXECUTE sp_rename N'[dbo].[ExceptionPolicy].[tmp_ms_xx_index_PK_ExceptionPolicy1]', N'PK_ExceptionPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExceptionPolicy]([ExceptionPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExceptionPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExceptionPolicyAssign] (
    [ExceptionPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                  INT      CONSTRAINT [DF_ExceptionPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [ExceptionPolicyID]       INT      CONSTRAINT [DF_ExceptionPolicyAssign_ExceptionPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME CONSTRAINT [DF_ExceptionPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]             DATETIME CONSTRAINT [DF_ExceptionPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_ExceptionPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_ExceptionPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ExceptionPolicyAssignment1]
    ON [dbo].[tmp_ms_xx_ExceptionPolicyAssign]([ExceptionPolicyAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExceptionPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExceptionPolicyAssign] ([ExceptionPolicyAssignID], [UserID], [ExceptionPolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ExceptionPolicyAssignID],
                 [UserID],
                 [ExceptionPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ExceptionPolicyAssign]
        ORDER BY [ExceptionPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicyAssign] OFF;
    END

DROP TABLE [dbo].[ExceptionPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExceptionPolicyAssign]', N'ExceptionPolicyAssign';

EXECUTE sp_rename N'[dbo].[ExceptionPolicyAssign].[tmp_ms_xx_index_PK_ExceptionPolicyAssignment1]', N'PK_ExceptionPolicyAssignment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExceptionPolicyAssign]([UserID] ASC, [ExceptionPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExceptionPolicyRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExceptionPolicyRule] (
    [ID]                      INT           IDENTITY (1, 1) NOT NULL,
    [ExceptionPolicyRuleID]   INT           CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleID] DEFAULT ((0)) NOT NULL,
    [ExceptionPolicyID]       INT           CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyID] DEFAULT ((0)) NOT NULL,
    [ExceptionPolicyRuleName] NVARCHAR (50) CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleName] DEFAULT ('') NOT NULL,
    [ExceptionPolicyRuleType] INT           CONSTRAINT [DF_ExceptionPolicyRule_ExceptionPolicyRuleType] DEFAULT ((0)) NOT NULL,
    [IsDeleted]               BIT           CONSTRAINT [DF_ExceptionPolicyRule_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ParameterSecs]           INT           CONSTRAINT [DF_ExceptionPolicyRule_ParameterSecs] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME      CONSTRAINT [DF_ExceptionPolicyRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]             DATETIME      CONSTRAINT [DF_ExceptionPolicyRule_EndDateTime] DEFAULT (((1) / (1)) / (2100)) NOT NULL,
    [ModifiedBy]              INT           CONSTRAINT [DF_ExceptionPolicyRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME      CONSTRAINT [DF_ExceptionPolicyRule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ExceptionPolicyRule1]
    ON [dbo].[tmp_ms_xx_ExceptionPolicyRule]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExceptionPolicyRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicyRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExceptionPolicyRule] ([ID], [ExceptionPolicyRuleID], [ExceptionPolicyID], [ExceptionPolicyRuleName], [ExceptionPolicyRuleType], [IsDeleted], [ParameterSecs], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [ExceptionPolicyRuleID],
                 [ExceptionPolicyID],
                 [ExceptionPolicyRuleName],
                 [ExceptionPolicyRuleType],
                 [IsDeleted],
                 [ParameterSecs],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ExceptionPolicyRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionPolicyRule] OFF;
    END

DROP TABLE [dbo].[ExceptionPolicyRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExceptionPolicyRule]', N'ExceptionPolicyRule';

EXECUTE sp_rename N'[dbo].[ExceptionPolicyRule].[tmp_ms_xx_index_PK_ExceptionPolicyRule1]', N'PK_ExceptionPolicyRule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExceptionPolicyRule]([ExceptionPolicyRuleID] ASC, [ExceptionPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExceptionSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExceptionSetting] (
    [ExceptionSettingID]        INT      IDENTITY (1, 1) NOT NULL,
    [ModifiedBy]                INT      CONSTRAINT [DF_ExceptionSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                DATETIME CONSTRAINT [DF_ExceptionSetting_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [UserID]                    INT      CONSTRAINT [DF_ExceptionSetting_UserID] DEFAULT ((0)) NOT NULL,
    [HideAcknowledgedException] BIT      CONSTRAINT [DF_ExceptionSetting_HideAknowledgedException] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ExceptionSetting1] PRIMARY KEY CLUSTERED ([ExceptionSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExceptionSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExceptionSetting] ([ExceptionSettingID], [ModifiedBy], [ModifiedOn], [UserID], [HideAcknowledgedException])
        SELECT   [ExceptionSettingID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UserID],
                 [HideAcknowledgedException]
        FROM     [dbo].[ExceptionSetting]
        ORDER BY [ExceptionSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionSetting] OFF;
    END

DROP TABLE [dbo].[ExceptionSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExceptionSetting]', N'ExceptionSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ExceptionSetting1]', N'PK_ExceptionSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExceptionSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExceptionSetting]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExceptionSettingDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExceptionSettingDetail] (
    [ExceptionSettingDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [ExceptionSettingID]       INT      CONSTRAINT [DF_ExceptionSettingDetail_ExceptionSettingID] DEFAULT ((0)) NOT NULL,
    [ExceptionRuleType]        INT      CONSTRAINT [DF_ExceptionSettingDetail_ExceptionRuleType] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]          INT      CONSTRAINT [DF_ExceptionSettingDetail_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_ExceptionSettingDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_ExceptionSettingDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ExceptionSettingDetail1] PRIMARY KEY CLUSTERED ([ExceptionSettingDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExceptionSettingDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionSettingDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExceptionSettingDetail] ([ExceptionSettingDetailID], [ExceptionSettingID], [ExceptionRuleType], [OrdinalPosition], [ModifiedBy], [ModifiedOn])
        SELECT   [ExceptionSettingDetailID],
                 [ExceptionSettingID],
                 [ExceptionRuleType],
                 [OrdinalPosition],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ExceptionSettingDetail]
        ORDER BY [ExceptionSettingDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExceptionSettingDetail] OFF;
    END

DROP TABLE [dbo].[ExceptionSettingDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExceptionSettingDetail]', N'ExceptionSettingDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ExceptionSettingDetail1]', N'PK_ExceptionSettingDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExceptionSettingDetail]([ExceptionSettingID] ASC, [OrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExportCode]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExportCode] (
    [ExportCodeID]     INT           IDENTITY (1, 1) NOT NULL,
    [ExportCodeName]   NVARCHAR (50) CONSTRAINT [DF_ExportCode_ExportCodeName] DEFAULT ('') NOT NULL,
    [PriorityNumber]   INT           CONSTRAINT [DF_Table_1_Priority] DEFAULT ((0)) NOT NULL,
    [ExportMatrixType] INT           CONSTRAINT [DF_ExportCode_ExportMatrixType] DEFAULT ((0)) NOT NULL,
    [IsDefault]        BIT           CONSTRAINT [DF_ExportCode_IsDefault] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT           CONSTRAINT [DF_ExportCode_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME      CONSTRAINT [DF_ExportCode_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ExportCode1] PRIMARY KEY CLUSTERED ([ExportCodeID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExportCode])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCode] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExportCode] ([ExportCodeID], [ExportCodeName], [PriorityNumber], [ExportMatrixType], [IsDefault], [ModifiedBy], [ModifiedOn])
        SELECT   [ExportCodeID],
                 [ExportCodeName],
                 [PriorityNumber],
                 [ExportMatrixType],
                 [IsDefault],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ExportCode]
        ORDER BY [ExportCodeID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCode] OFF;
    END

DROP TABLE [dbo].[ExportCode];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExportCode]', N'ExportCode';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ExportCode1]', N'PK_ExportCode', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExportCode].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExportCode]([PriorityNumber] ASC, [ExportCodeName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExportCodeCriteria]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExportCodeCriteria] (
    [ExportCriteriaID]   INT      IDENTITY (1, 1) NOT NULL,
    [ExportCodeID]       INT      CONSTRAINT [DF_ExportCriteria_ExportCodeID] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldType]  INT      CONSTRAINT [DF_ExportCriteria_CriteriaFieldType] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldID]    INT      CONSTRAINT [DF_ExportCriteria_CriteriaFieldID] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldValue] INT      CONSTRAINT [DF_ExportCriteria_CriteriaFieldValue] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME CONSTRAINT [DF_ExportCriteria_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedBy]         INT      CONSTRAINT [DF_ExportCriteria_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ExportCodeCriteria1] PRIMARY KEY CLUSTERED ([ExportCriteriaID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExportCodeCriteria])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCodeCriteria] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExportCodeCriteria] ([ExportCriteriaID], [ExportCodeID], [CriteriaFieldType], [CriteriaFieldID], [CriteriaFieldValue], [ModifiedOn], [ModifiedBy])
        SELECT   [ExportCriteriaID],
                 [ExportCodeID],
                 [CriteriaFieldType],
                 [CriteriaFieldID],
                 [CriteriaFieldValue],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[ExportCodeCriteria]
        ORDER BY [ExportCriteriaID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCodeCriteria] OFF;
    END

DROP TABLE [dbo].[ExportCodeCriteria];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExportCodeCriteria]', N'ExportCodeCriteria';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ExportCodeCriteria1]', N'PK_ExportCodeCriteria', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExportCodeCriteria]([ExportCodeID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ExportCodeDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ExportCodeDetail] (
    [ExportCodeDetailID]   INT           IDENTITY (1, 1) NOT NULL,
    [ExportCodeID]         INT           CONSTRAINT [DF_ExportCodeDetail_ExportCodeID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]            INT           CONSTRAINT [DF_ExportCodeDetail_PayTypeID] DEFAULT ((0)) NOT NULL,
    [LLDetailID]           INT           CONSTRAINT [DF_ExportCodeDetail_LLDetailID] DEFAULT ((0)) NOT NULL,
    [PaidCode]             NVARCHAR (50) CONSTRAINT [DF_ExportCodeDetail_PaidCode] DEFAULT ('') NOT NULL,
    [UnpaidCode]           NVARCHAR (50) CONSTRAINT [DF_ExportCodeDetail_UnpaidCode] DEFAULT ('') NOT NULL,
    [ModifiedBy]           INT           CONSTRAINT [DF_ExportCodeDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME      CONSTRAINT [DF_ExportCodeDetail_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ShiftDiffCode]        NVARCHAR (50) CONSTRAINT [DF_ExportCodeDetail_ShiftDiffCode] DEFAULT ('') NOT NULL,
    [PaidPayComponentID]   BIGINT        CONSTRAINT [DF_ExportCodeDetail_PaidPayComponentID] DEFAULT ((0)) NOT NULL,
    [UnpaidPayComponentID] BIGINT        CONSTRAINT [DF_ExportCodeDetail_UnpaidPayComponentID] DEFAULT ((0)) NOT NULL,
    [PaidPayRateID]        INT           CONSTRAINT [DF_ExportCodeDetail_PaidPayRateID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ExportCodeDetail1] PRIMARY KEY CLUSTERED ([ExportCodeDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ExportCodeDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCodeDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ExportCodeDetail] ([ExportCodeDetailID], [ExportCodeID], [PayTypeID], [LLDetailID], [PaidCode], [UnpaidCode], [ModifiedBy], [ModifiedOn], [ShiftDiffCode], [PaidPayComponentID], [UnpaidPayComponentID], [PaidPayRateID])
        SELECT   [ExportCodeDetailID],
                 [ExportCodeID],
                 [PayTypeID],
                 [LLDetailID],
                 [PaidCode],
                 [UnpaidCode],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ShiftDiffCode],
                 [PaidPayComponentID],
                 [UnpaidPayComponentID],
                 [PaidPayRateID]
        FROM     [dbo].[ExportCodeDetail]
        ORDER BY [ExportCodeDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ExportCodeDetail] OFF;
    END

DROP TABLE [dbo].[ExportCodeDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ExportCodeDetail]', N'ExportCodeDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ExportCodeDetail1]', N'PK_ExportCodeDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ExportCodeDetail]([ExportCodeID] ASC, [PayTypeID] ASC, [LLDetailID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FAT]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FAT] (
    [ID]            INT           IDENTITY (1, 1) NOT NULL,
    [FATID]         INT           CONSTRAINT [DF_FAT_FATID] DEFAULT ((0)) NOT NULL,
    [FATName]       NVARCHAR (50) CONSTRAINT [DF_FAT_FATName] DEFAULT ('') NOT NULL,
    [HasFullAccess] BIT           CONSTRAINT [DF_FAT_HasFullAccess] DEFAULT ((0)) NOT NULL,
    [StartDateTime] DATETIME      CONSTRAINT [DF_FAT_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]   DATETIME      CONSTRAINT [DF_FAT_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]     BIT           CONSTRAINT [DF_FAT_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]    INT           CONSTRAINT [DF_FAT_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]    DATETIME      CONSTRAINT [DF_FAT_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_FeatureAccessTemplate1]
    ON [dbo].[tmp_ms_xx_FAT]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FAT])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FAT] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FAT] ([ID], [FATID], [FATName], [HasFullAccess], [StartDateTime], [EndDateTime], [IsDeleted], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [FATID],
                 [FATName],
                 [HasFullAccess],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[FAT]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FAT] OFF;
    END

DROP TABLE [dbo].[FAT];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FAT]', N'FAT';

EXECUTE sp_rename N'[dbo].[FAT].[tmp_ms_xx_index_PK_FeatureAccessTemplate1]', N'PK_FeatureAccessTemplate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FAT].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[FAT]([FATID] ASC, [FATName] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FATAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FATAssign] (
    [FATAssignID]   INT      IDENTITY (1, 1) NOT NULL,
    [FATID]         INT      CONSTRAINT [DF_FATAssign_FATID] DEFAULT ((0)) NOT NULL,
    [UserID]        INT      CONSTRAINT [DF_FATAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime] DATETIME CONSTRAINT [DF_FATAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]   DATETIME CONSTRAINT [DF_FATAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]    INT      CONSTRAINT [DF_FATAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]    DATETIME CONSTRAINT [DF_FATAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_FeatureAccessTemplateAssgn1]
    ON [dbo].[tmp_ms_xx_FATAssign]([FATAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FATAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FATAssign] ([FATAssignID], [FATID], [UserID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [FATAssignID],
                 [FATID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[FATAssign]
        ORDER BY [FATAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATAssign] OFF;
    END

DROP TABLE [dbo].[FATAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FATAssign]', N'FATAssign';

EXECUTE sp_rename N'[dbo].[FATAssign].[tmp_ms_xx_index_PK_FeatureAccessTemplateAssgn1]', N'PK_FeatureAccessTemplateAssgn', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FATAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[FATAssign]([FATAssignID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FATDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FATDetail] (
    [ID]            INT      IDENTITY (1, 1) NOT NULL,
    [FATID]         INT      CONSTRAINT [DF_FATDetail_FATID] DEFAULT ((0)) NOT NULL,
    [SectionType]   INT      CONSTRAINT [DF_FATDetail_SectionType] DEFAULT ((0)) NOT NULL,
    [AllowView]     BIT      CONSTRAINT [DF_FATDetail_AllowView] DEFAULT ((0)) NOT NULL,
    [AllowAdd]      BIT      CONSTRAINT [DF_FATDetail_AllowAdd] DEFAULT ((0)) NOT NULL,
    [AllowEdit]     BIT      CONSTRAINT [DF_FATDetail_AllowEdit] DEFAULT ((0)) NOT NULL,
    [AllowDelete]   BIT      CONSTRAINT [DF_FATDetail_AllowDelete] DEFAULT ((0)) NOT NULL,
    [AllowAssign]   BIT      CONSTRAINT [DF_FATDetail_AllowAssign] DEFAULT ((0)) NOT NULL,
    [StartDateTime] DATETIME CONSTRAINT [DF_FATDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]   DATETIME CONSTRAINT [DF_FATDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]    DATETIME CONSTRAINT [DF_FATDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]    INT      CONSTRAINT [DF_FATDetail_ModifiedBy] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_FeatureAccessTemplateDetail1]
    ON [dbo].[tmp_ms_xx_FATDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FATDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FATDetail] ([ID], [FATID], [SectionType], [AllowView], [AllowAdd], [AllowEdit], [AllowDelete], [AllowAssign], [StartDateTime], [EndDateTime], [ModifiedOn], [ModifiedBy])
        SELECT   [ID],
                 [FATID],
                 [SectionType],
                 [AllowView],
                 [AllowAdd],
                 [AllowEdit],
                 [AllowDelete],
                 [AllowAssign],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[FATDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATDetail] OFF;
    END

DROP TABLE [dbo].[FATDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FATDetail]', N'FATDetail';

EXECUTE sp_rename N'[dbo].[FATDetail].[tmp_ms_xx_index_PK_FeatureAccessTemplateDetail1]', N'PK_FeatureAccessTemplateDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FATDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[FATDetail]([FATID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FATDetailSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FATDetailSetting] (
    [ID]                     INT      IDENTITY (1, 1) NOT NULL,
    [FATID]                  INT      CONSTRAINT [DF_FATDetailSetting_FATID] DEFAULT ((0)) NOT NULL,
    [SectionType]            INT      CONSTRAINT [DF_FATDetailSetting_SectionType] DEFAULT ((0)) NOT NULL,
    [AdditionalSettingsType] INT      CONSTRAINT [DF_FATDetailSetting_AdditionalSettingsType] DEFAULT ((0)) NOT NULL,
    [ReportID]               INT      CONSTRAINT [DF_FATDetailSetting_ReportID] DEFAULT ((0)) NOT NULL,
    [IsEnabled]              BIT      CONSTRAINT [DF_FATDetailSetting_IsEnabled] DEFAULT ((0)) NOT NULL,
    [StartDateTime]          DATETIME CONSTRAINT [DF_FATDetailSetting_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]            DATETIME CONSTRAINT [DF_FATDetailSetting_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_FATDetailSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_FATDetailSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifierID]             INT      CONSTRAINT [DF_FATDetailSetting_ModifierID] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_FeatureAccessTemplateDtlStng1]
    ON [dbo].[tmp_ms_xx_FATDetailSetting]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FATDetailSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATDetailSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FATDetailSetting] ([ID], [FATID], [SectionType], [AdditionalSettingsType], [ReportID], [IsEnabled], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [ModifierID])
        SELECT   [ID],
                 [FATID],
                 [SectionType],
                 [AdditionalSettingsType],
                 [ReportID],
                 [IsEnabled],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ModifierID]
        FROM     [dbo].[FATDetailSetting]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FATDetailSetting] OFF;
    END

DROP TABLE [dbo].[FATDetailSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FATDetailSetting]', N'FATDetailSetting';

EXECUTE sp_rename N'[dbo].[FATDetailSetting].[tmp_ms_xx_index_PK_FeatureAccessTemplateDtlStng1]', N'PK_FeatureAccessTemplateDtlStng', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FATDetailSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[FATDetailSetting]([FATID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[FeatureAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_FeatureAssignment] (
    [FeatureAssignmentID] INT      IDENTITY (1, 1) NOT NULL,
    [FeatureType]         INT      CONSTRAINT [DF_FeatureAssignment_FeatureType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_FeatureAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_FeatureAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_FeatureAssignment1] PRIMARY KEY CLUSTERED ([FeatureAssignmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[FeatureAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FeatureAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_FeatureAssignment] ([FeatureAssignmentID], [FeatureType], [ModifiedBy], [ModifiedOn])
        SELECT   [FeatureAssignmentID],
                 [FeatureType],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[FeatureAssignment]
        ORDER BY [FeatureAssignmentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_FeatureAssignment] OFF;
    END

DROP TABLE [dbo].[FeatureAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_FeatureAssignment]', N'FeatureAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_FeatureAssignment1]', N'PK_FeatureAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeneralConfiguration]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeneralConfiguration] (
    [GeneralConfigurationID]       INT             IDENTITY (1, 1) NOT NULL,
    [AdminPassword]                NVARCHAR (MAX)  CONSTRAINT [DF_GeneralConfiguration_AdminPassword] DEFAULT ('') NOT NULL,
    [LLLabel]                      NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_LLLabel] DEFAULT ('') NOT NULL,
    [LLsLabel]                     NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_LLsLabel] DEFAULT ('') NOT NULL,
    [GovernmentIDLabel]            NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_GovernmentIDLabel] DEFAULT ('') NOT NULL,
    [HideAutoLunch]                BIT             CONSTRAINT [DF_GeneralConfiguration_HideAutoLunch] DEFAULT ((0)) NOT NULL,
    [AdminPasswordExpires]         DATETIME        CONSTRAINT [DF_GeneralConfiguration_AdminPasswordExpires] DEFAULT ('1/1/1900') NOT NULL,
    [AdminPasswordAttempts]        INT             CONSTRAINT [DF_GeneralConfiguration_AdminPasswordAttempts] DEFAULT ((0)) NOT NULL,
    [AdminLastLockedOut]           DATETIME        CONSTRAINT [DF_GeneralConfiguration_AdminLastLockedOut] DEFAULT ('1/1/1900') NOT NULL,
    [AdminTimezoneKey]             NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_AdminTimezoneKey] DEFAULT ('') NOT NULL,
    [ClockPIN]                     NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_ClockPIN] DEFAULT ((0)) NOT NULL,
    [AllowMissingPunchApprovals]   BIT             CONSTRAINT [DF_GeneralConfiguration_AllowMissingPunchApprovals] DEFAULT ((0)) NOT NULL,
    [EnableGovernmentID]           BIT             CONSTRAINT [DF_GeneralConfiguration_EnableGovernmentID] DEFAULT ((0)) NOT NULL,
    [CompanyName]                  NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_CompanyName] DEFAULT ('') NOT NULL,
    [CompanyAddress]               NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_CompanyAddress] DEFAULT ('') NOT NULL,
    [City]                         NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_City] DEFAULT ('') NOT NULL,
    [State]                        NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_State] DEFAULT ('') NOT NULL,
    [ZipCode]                      NVARCHAR (150)  CONSTRAINT [DF_GeneralConfiguration_ZipCode] DEFAULT ('') NOT NULL,
    [Phone]                        NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_Phone] DEFAULT ('') NOT NULL,
    [Fax]                          NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_Fax] DEFAULT ('') NOT NULL,
    [CustomerLogoFilename]         NVARCHAR (100)  CONSTRAINT [DF_GeneralConfiguration_CustomerLogoFilename] DEFAULT ('') NOT NULL,
    [CustomerLogo]                 IMAGE           NULL,
    [CustomerLogoTemp]             IMAGE           NULL,
    [EnableEmpGroupHierarchy]      BIT             CONSTRAINT [DF_GeneralConfiguration_EnableEmpGroupHierarchy] DEFAULT ((0)) NOT NULL,
    [CanAccessSubordinateGroup]    BIT             CONSTRAINT [DF_GeneralConfiguration_CanAccessSubordinateGroup] DEFAULT ((0)) NOT NULL,
    [CanAssignSubordinateMgr]      BIT             CONSTRAINT [DF_GeneralConfiguration_CanAssignSubordinateMgr] DEFAULT ((0)) NOT NULL,
    [CanAssignProxyMgr]            BIT             CONSTRAINT [DF_GeneralConfiguration_CanAssignProxyMgr] DEFAULT ((0)) NOT NULL,
    [EnableEmailImportLog]         BIT             CONSTRAINT [DF_GeneralConfiguration_EmailImportProcessLog] DEFAULT ((0)) NOT NULL,
    [ScheduleGenerateForDays]      INT             CONSTRAINT [DF_GeneralConfiguration_ScheduleGenerateForDays] DEFAULT ((0)) NOT NULL,
    [BillingMinBaseEnabled]        BIT             CONSTRAINT [DF_GeneralConfiguration_BillingMinimumEnabled] DEFAULT ((0)) NOT NULL,
    [BillingMinBaseCount]          INT             CONSTRAINT [DF_GeneralConfiguration_BillingMinimumCout] DEFAULT ((0)) NOT NULL,
    [BillingTierEnabled]           BIT             CONSTRAINT [DF_GeneralConfiguration_BillingTierEnabled] DEFAULT ((0)) NOT NULL,
    [BillingSalesAssociateID]      INT             CONSTRAINT [DF_GeneralConfiguration_BillingSalesID] DEFAULT ((0)) NOT NULL,
    [BillingCommisionRate]         MONEY           CONSTRAINT [DF_GeneralConfiguration_BillingCommisionRate] DEFAULT ((0)) NOT NULL,
    [BillingCommisionStart]        DATETIME        CONSTRAINT [DF_GeneralConfiguration_BillingCommisionStart] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [BillingCommisionEnd]          DATETIME        CONSTRAINT [DF_GeneralConfiguration_BillingCommisionEnd] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [BillingClockRentalRate]       MONEY           CONSTRAINT [DF_GeneralConfiguration_BillingClockRental] DEFAULT ((0)) NOT NULL,
    [BillingDedicatedLineQuantity] INT             CONSTRAINT [DF_GeneralConfiguration_BillingDedicatedLineQuantity] DEFAULT ((0)) NOT NULL,
    [BillingDedicatedLineRate]     MONEY           CONSTRAINT [DF_GeneralConfiguration_BillingDedicatedLineRate] DEFAULT ((0)) NOT NULL,
    [BillingPONumber]              NVARCHAR (100)  CONSTRAINT [DF_GeneralConfiguration_BillingPONumber] DEFAULT ('') NOT NULL,
    [BillingIndustry]              NVARCHAR (100)  CONSTRAINT [DF_GeneralConfiguration_BillingIndustry] DEFAULT ('') NOT NULL,
    [BillingBillTo]                NVARCHAR (100)  CONSTRAINT [DF_GeneralConfiguration_BillingBillTo] DEFAULT ('') NOT NULL,
    [BillingClockCount]            INT             CONSTRAINT [DF_GeneralConfiguration_BillingClockCount] DEFAULT ((0)) NOT NULL,
    [BillingTermsType]             INT             CONSTRAINT [DF_GeneralConfiguration_BillingTerms] DEFAULT ((0)) NOT NULL,
    [BillingComments]              NVARCHAR (1000) CONSTRAINT [DF_GeneralConfiguration_BillingComments] DEFAULT ('') NOT NULL,
    [BillingMobileAccessRequired]  BIT             CONSTRAINT [DF_GeneralConfiguration_BillingMobileAccessRequired] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT             CONSTRAINT [DF_GeneralConfiguration_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME        CONSTRAINT [DF_GeneralConfiguration_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [TimeCardMgrApprovalLevelType] INT             CONSTRAINT [DF_GeneralConfiguration_TimeCardMgrApprovalLevelType] DEFAULT ((0)) NOT NULL,
    [WSEnabled]                    BIT             CONSTRAINT [DF_GeneralConfiguration_EnableWebServices] DEFAULT ((0)) NOT NULL,
    [WSSharedKey]                  VARCHAR (255)   CONSTRAINT [DF_GeneralConfiguration_WebServiceGUID] DEFAULT (' ') NOT NULL,
    [WSUserPassword]               VARCHAR (255)   CONSTRAINT [DF_GeneralConfiguration_WSUserPassword] DEFAULT (' ') NOT NULL,
    [FATID]                        INT             CONSTRAINT [DF_GeneralConfiguration_WSFATID] DEFAULT ((0)) NOT NULL,
    [SSOEnabled]                   BIT             CONSTRAINT [DF_GeneralConfiguration_EnableSSO] DEFAULT ((0)) NOT NULL,
    [SSOSharedKey]                 VARCHAR (255)   CONSTRAINT [DF_GeneralConfiguration_SSOSharedKey] DEFAULT (' ') NOT NULL,
    [SSOLoginOnly]                 BIT             CONSTRAINT [DF_GeneralConfiguration_IsSSOLoginOnly] DEFAULT ((0)) NOT NULL,
    [TOREmailToAdminEnabled]       BIT             CONSTRAINT [DF_GeneralConfiguration_TOREmailToAdminEnabled] DEFAULT ((0)) NOT NULL,
    [SSOSAMLBinding]               NVARCHAR (100)  CONSTRAINT [DF_GeneralConfiguration_SSOSAMLBinding] DEFAULT ('') NOT NULL,
    [SSOSAMLSignOnURL]             NVARCHAR (255)  CONSTRAINT [DF_GeneralConfiguration_SSOSAMLSignOnURL] DEFAULT ('') NOT NULL,
    [SSOSAMLRedirectURL]           NVARCHAR (255)  CONSTRAINT [DF_GeneralConfiguration_SSOSAMLRedirectURL] DEFAULT ('') NOT NULL,
    [SSOSAMLX509Cert]              TEXT            CONSTRAINT [DF_GeneralConfiguration_SSOSAMLX509Cert] DEFAULT ('') NOT NULL,
    [BillingType]                  INT             CONSTRAINT [DF_GeneralConfiguration_BillingType] DEFAULT ((0)) NOT NULL,
    [LLID]                         INT             CONSTRAINT [DF_GeneralConfiguration_LLID] DEFAULT ((0)) NOT NULL,
    [UserGroupNameType]            INT             CONSTRAINT [DF_GeneralConfiguration_UserGroupNameType] DEFAULT ((0)) NOT NULL,
    [UseMgrName]                   BIT             CONSTRAINT [DF_GeneralConfiguration_UseMgrName] DEFAULT ((0)) NOT NULL,
    [HardwareClientVersion]        NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_HardwareClientVersion] DEFAULT ('') NOT NULL,
    [HardwareClientURL]            NVARCHAR (255)  CONSTRAINT [DF_GeneralConfiguration_HardwareClientURL] DEFAULT ('') NOT NULL,
    [ImpliedHierarchyEnabled]      BIT             CONSTRAINT [DF_GeneralConfiguration_ImpliedHierarchyEnabled] DEFAULT ((0)) NOT NULL,
    [ShowAllRatesAsHourly]         BIT             CONSTRAINT [DF_GeneralConfiguration_ShowAllRatesAsHourly] DEFAULT ((0)) NOT NULL,
    [WebKioskPin]                  NVARCHAR (50)   CONSTRAINT [DF_GeneralConfiguration_WebKioskPin] DEFAULT ('') NOT NULL,
    [ImportMgrAssignmentDisabled]  BIT             CONSTRAINT [DF_GeneralConfiguration_ImportMgrAssignmentDisabled] DEFAULT ((0)) NOT NULL,
    [AllowSecondMgrApproveAsMgr1]  BIT             CONSTRAINT [DF_GeneralConfiguration_AllowSecondMgrApprovingAsMgr1] DEFAULT ((0)) NOT NULL,
    [RemoveEmpApprovalsOnMgrEdit]  BIT             CONSTRAINT [DF_GeneralConfiguration_r] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_GeneralConfiguration1] PRIMARY KEY CLUSTERED ([GeneralConfigurationID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeneralConfiguration])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeneralConfiguration] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeneralConfiguration] ([GeneralConfigurationID], [AdminPassword], [LLLabel], [LLsLabel], [GovernmentIDLabel], [HideAutoLunch], [AdminPasswordExpires], [AdminPasswordAttempts], [AdminLastLockedOut], [AdminTimezoneKey], [ClockPIN], [AllowMissingPunchApprovals], [EnableGovernmentID], [CompanyName], [CompanyAddress], [City], [State], [ZipCode], [Phone], [Fax], [CustomerLogoFilename], [CustomerLogo], [CustomerLogoTemp], [EnableEmpGroupHierarchy], [CanAccessSubordinateGroup], [CanAssignSubordinateMgr], [CanAssignProxyMgr], [EnableEmailImportLog], [ScheduleGenerateForDays], [BillingMinBaseEnabled], [BillingMinBaseCount], [BillingTierEnabled], [BillingSalesAssociateID], [BillingCommisionRate], [BillingCommisionStart], [BillingCommisionEnd], [BillingClockRentalRate], [BillingDedicatedLineQuantity], [BillingDedicatedLineRate], [BillingPONumber], [BillingIndustry], [BillingBillTo], [BillingClockCount], [BillingTermsType], [BillingComments], [BillingMobileAccessRequired], [ModifiedBy], [ModifiedOn], [TimeCardMgrApprovalLevelType], [WSEnabled], [WSSharedKey], [WSUserPassword], [FATID], [SSOEnabled], [SSOSharedKey], [SSOLoginOnly], [TOREmailToAdminEnabled], [SSOSAMLBinding], [SSOSAMLSignOnURL], [SSOSAMLRedirectURL], [SSOSAMLX509Cert], [BillingType], [LLID], [UserGroupNameType], [UseMgrName], [HardwareClientVersion], [HardwareClientURL], [ImpliedHierarchyEnabled], [ShowAllRatesAsHourly], [WebKioskPin], [ImportMgrAssignmentDisabled], [AllowSecondMgrApproveAsMgr1])
        SELECT   [GeneralConfigurationID],
                 [AdminPassword],
                 [LLLabel],
                 [LLsLabel],
                 [GovernmentIDLabel],
                 [HideAutoLunch],
                 [AdminPasswordExpires],
                 [AdminPasswordAttempts],
                 [AdminLastLockedOut],
                 [AdminTimezoneKey],
                 [ClockPIN],
                 [AllowMissingPunchApprovals],
                 [EnableGovernmentID],
                 [CompanyName],
                 [CompanyAddress],
                 [City],
                 [State],
                 [ZipCode],
                 [Phone],
                 [Fax],
                 [CustomerLogoFilename],
                 [CustomerLogo],
                 [CustomerLogoTemp],
                 [EnableEmpGroupHierarchy],
                 [CanAccessSubordinateGroup],
                 [CanAssignSubordinateMgr],
                 [CanAssignProxyMgr],
                 [EnableEmailImportLog],
                 [ScheduleGenerateForDays],
                 [BillingMinBaseEnabled],
                 [BillingMinBaseCount],
                 [BillingTierEnabled],
                 [BillingSalesAssociateID],
                 [BillingCommisionRate],
                 [BillingCommisionStart],
                 [BillingCommisionEnd],
                 [BillingClockRentalRate],
                 [BillingDedicatedLineQuantity],
                 [BillingDedicatedLineRate],
                 [BillingPONumber],
                 [BillingIndustry],
                 [BillingBillTo],
                 [BillingClockCount],
                 [BillingTermsType],
                 [BillingComments],
                 [BillingMobileAccessRequired],
                 [ModifiedBy],
                 [ModifiedOn],
                 [TimeCardMgrApprovalLevelType],
                 [WSEnabled],
                 [WSSharedKey],
                 [WSUserPassword],
                 [FATID],
                 [SSOEnabled],
                 [SSOSharedKey],
                 [SSOLoginOnly],
                 [TOREmailToAdminEnabled],
                 [SSOSAMLBinding],
                 [SSOSAMLSignOnURL],
                 [SSOSAMLRedirectURL],
                 [SSOSAMLX509Cert],
                 [BillingType],
                 [LLID],
                 [UserGroupNameType],
                 [UseMgrName],
                 [HardwareClientVersion],
                 [HardwareClientURL],
                 [ImpliedHierarchyEnabled],
                 [ShowAllRatesAsHourly],
                 [WebKioskPin],
                 [ImportMgrAssignmentDisabled],
                 [AllowSecondMgrApproveAsMgr1]
        FROM     [dbo].[GeneralConfiguration]
        ORDER BY [GeneralConfigurationID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeneralConfiguration] OFF;
    END

DROP TABLE [dbo].[GeneralConfiguration];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeneralConfiguration]', N'GeneralConfiguration';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_GeneralConfiguration1]', N'PK_GeneralConfiguration', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeoFence]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeoFence] (
    [GeoFenceID]          INT             IDENTITY (1, 1) NOT NULL,
    [GoogleMapsID]        NVARCHAR (255)  CONSTRAINT [DF_Geofence_GoogleMapsID] DEFAULT ('') NOT NULL,
    [Name]                NVARCHAR (255)  CONSTRAINT [DF_Geofence_Name] DEFAULT ('') NOT NULL,
    [Description]         NVARCHAR (MAX)  NOT NULL,
    [ModifiedBy]          INT             CONSTRAINT [DF_Geofence_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME        CONSTRAINT [DF_Geofence_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [GoogleMapsZoomLevel] INT             CONSTRAINT [DF_GeoFence_GoogleMapZoomLevel] DEFAULT ((0)) NOT NULL,
    [FenceType]           INT             CONSTRAINT [DF_GeoFence_FenceType] DEFAULT ((0)) NOT NULL,
    [Radius]              DECIMAL (18, 4) CONSTRAINT [DF_GeoFence_Radius] DEFAULT ((0)) NOT NULL,
    [RadiusUnit]          INT             CONSTRAINT [DF_GeoFence_RadiusUnit] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Geofence1] PRIMARY KEY CLUSTERED ([GeoFenceID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeoFence])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFence] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeoFence] ([GeoFenceID], [GoogleMapsID], [Name], [Description], [ModifiedBy], [ModifiedOn], [GoogleMapsZoomLevel], [FenceType], [Radius], [RadiusUnit])
        SELECT   [GeoFenceID],
                 [GoogleMapsID],
                 [Name],
                 [Description],
                 [ModifiedBy],
                 [ModifiedOn],
                 [GoogleMapsZoomLevel],
                 [FenceType],
                 [Radius],
                 [RadiusUnit]
        FROM     [dbo].[GeoFence]
        ORDER BY [GeoFenceID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFence] OFF;
    END

DROP TABLE [dbo].[GeoFence];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeoFence]', N'GeoFence';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Geofence1]', N'PK_Geofence', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeoFenceAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeoFenceAssignment] (
    [ID]              INT      IDENTITY (1, 1) NOT NULL,
    [GeoFenceID]      INT      CONSTRAINT [DF_GeofenceAssignment_GeofenceID] DEFAULT ((0)) NOT NULL,
    [GeoFenceGroupID] INT      CONSTRAINT [DF_GeofenceAssignment_GeoFenceGroupID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_GeofenceAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_GeofenceAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_GeofenceAssignment1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeoFenceAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeoFenceAssignment] ([ID], [GeoFenceID], [GeoFenceGroupID], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [GeoFenceID],
                 [GeoFenceGroupID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[GeoFenceAssignment]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceAssignment] OFF;
    END

DROP TABLE [dbo].[GeoFenceAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeoFenceAssignment]', N'GeoFenceAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_GeofenceAssignment1]', N'PK_GeofenceAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeoFenceCoordinate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeoFenceCoordinate] (
    [GeoFenceCoordinateID] INT            IDENTITY (1, 1) NOT NULL,
    [GeoFenceID]           INT            CONSTRAINT [DF_GeoFenceCoordinate_GeoFenceID] DEFAULT ((0)) NOT NULL,
    [Latitude]             DECIMAL (9, 6) CONSTRAINT [DF_GeoFenceCoordinate_Latitude] DEFAULT ((0)) NOT NULL,
    [Longitude]            DECIMAL (9, 6) CONSTRAINT [DF_GeoFenceCoordinate_Longitude] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT            CONSTRAINT [DF_GeoFenceCoordinate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME       CONSTRAINT [DF_GeoFenceCoordinate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_GeoFenceCoordinate1] PRIMARY KEY CLUSTERED ([GeoFenceCoordinateID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeoFenceCoordinate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceCoordinate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeoFenceCoordinate] ([GeoFenceCoordinateID], [GeoFenceID], [Latitude], [Longitude], [ModifiedBy], [ModifiedOn])
        SELECT   [GeoFenceCoordinateID],
                 [GeoFenceID],
                 [Latitude],
                 [Longitude],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[GeoFenceCoordinate]
        ORDER BY [GeoFenceCoordinateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceCoordinate] OFF;
    END

DROP TABLE [dbo].[GeoFenceCoordinate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeoFenceCoordinate]', N'GeoFenceCoordinate';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_GeoFenceCoordinate1]', N'PK_GeoFenceCoordinate', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeoFenceGroup]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeoFenceGroup] (
    [ID]          INT            IDENTITY (1, 1) NOT NULL,
    [Name]        NVARCHAR (255) NOT NULL,
    [Description] NVARCHAR (MAX) NOT NULL,
    [ModifiedBy]  INT            CONSTRAINT [DF_GeofenceGroup_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]  DATETIME       CONSTRAINT [DF_GeofenceGroup_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_GeofenceGroup1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeoFenceGroup])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceGroup] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeoFenceGroup] ([ID], [Name], [Description], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [Name],
                 [Description],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[GeoFenceGroup]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceGroup] OFF;
    END

DROP TABLE [dbo].[GeoFenceGroup];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeoFenceGroup]', N'GeoFenceGroup';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_GeofenceGroup1]', N'PK_GeofenceGroup', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[GeoFenceGroupAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_GeoFenceGroupAssignment] (
    [ID]              INT      IDENTITY (1, 1) NOT NULL,
    [GeoFenceGroupID] INT      CONSTRAINT [DF_GeofenceGroupAssignment_GeofenceGroupID] DEFAULT ((0)) NOT NULL,
    [UserID]          INT      NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_GeofenceGroupAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_GeofenceGroupAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_GeofenceGroupAssignment1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[GeoFenceGroupAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceGroupAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_GeoFenceGroupAssignment] ([ID], [GeoFenceGroupID], [UserID], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [GeoFenceGroupID],
                 [UserID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[GeoFenceGroupAssignment]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_GeoFenceGroupAssignment] OFF;
    END

DROP TABLE [dbo].[GeoFenceGroupAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_GeoFenceGroupAssignment]', N'GeoFenceGroupAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_GeofenceGroupAssignment1]', N'PK_GeofenceGroupAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HardwarePrompt]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HardwarePrompt] (
    [HardwarePromptID]   INT           IDENTITY (1, 1) NOT NULL,
    [HardwareTerminalID] INT           CONSTRAINT [DF_HardwarePrompt_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [LLID]               INT           CONSTRAINT [DF_HardwarePrompt_LLID] DEFAULT ((0)) NOT NULL,
    [PromptText]         NVARCHAR (50) CONSTRAINT [DF_HardwarePrompt_PromptText] DEFAULT ('') NOT NULL,
    [ManualEntryEnabled] BIT           CONSTRAINT [DF_HardwarePrompt_ManualEntryEnabled] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]         INT           CONSTRAINT [DF_HardwarePrompt_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME      CONSTRAINT [DF_HardwarePrompt_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_HardwarePrompt1] PRIMARY KEY CLUSTERED ([HardwarePromptID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HardwarePrompt])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwarePrompt] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HardwarePrompt] ([HardwarePromptID], [HardwareTerminalID], [LLID], [PromptText], [ManualEntryEnabled], [ModifiedBy], [ModifiedOn])
        SELECT   [HardwarePromptID],
                 [HardwareTerminalID],
                 [LLID],
                 [PromptText],
                 [ManualEntryEnabled],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[HardwarePrompt]
        ORDER BY [HardwarePromptID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwarePrompt] OFF;
    END

DROP TABLE [dbo].[HardwarePrompt];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HardwarePrompt]', N'HardwarePrompt';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_HardwarePrompt1]', N'PK_HardwarePrompt', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HardwarePrompt].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HardwarePrompt]([HardwareTerminalID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HardwareTerminal]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HardwareTerminal] (
    [HardwareTerminalID]            INT            IDENTITY (1, 1) NOT NULL,
    [Description]                   NVARCHAR (50)  CONSTRAINT [DF_HardwareTerminal_Description] DEFAULT ('') NOT NULL,
    [LANID]                         INT            CONSTRAINT [DF_HardwareTerminal_LANID] DEFAULT ((0)) NOT NULL,
    [HardwareTerminalType]          INT            CONSTRAINT [DF_HardwareTerminal_HardwareTerminalType] DEFAULT ((0)) NOT NULL,
    [IdlePrompt]                    NVARCHAR (250) CONSTRAINT [DF_HardwareTerminal_IdlePrompt] DEFAULT ('') NOT NULL,
    [BadgeLength]                   INT            CONSTRAINT [DF_HardwareTerminal_BadgeLength] DEFAULT ((0)) NOT NULL,
    [BadgeStartPosition]            INT            CONSTRAINT [DF_HardwareTerminal_BadgeStartPosition] DEFAULT ((0)) NOT NULL,
    [TotalBadgeLength]              INT            CONSTRAINT [DF_HardwareTerminal_TotalBadgeLength] DEFAULT ((0)) NOT NULL,
    [ConfigurationCode]             INT            CONSTRAINT [DF_HardwareTerminal_ConfigurationCode] DEFAULT ((0)) NOT NULL,
    [VerificationIDType]            INT            CONSTRAINT [DF_HardwareTerminal_VerificationIDType] DEFAULT ((0)) NOT NULL,
    [HardwareZoneID]                INT            CONSTRAINT [DF_HardwareTerminal_ZoneID] DEFAULT ((0)) NOT NULL,
    [ScheduleDaysToUpload]          INT            CONSTRAINT [DF_HardwareTerminal_ScheduleDaysToUpload] DEFAULT ((0)) NOT NULL,
    [TimeZoneKey]                   NVARCHAR (100) CONSTRAINT [DF_HardwareTerminal_TimeZoneKey] DEFAULT ('') NOT NULL,
    [DaylightSavingsEnabled]        BIT            CONSTRAINT [DF_HardwareTerminal_DayLightSavingsEnabled] DEFAULT ((0)) NOT NULL,
    [TerminalMode]                  INT            CONSTRAINT [DF_HardwareTerminal_TerminalMode] DEFAULT ((0)) NOT NULL,
    [EnableSwipeAndGo]              BIT            CONSTRAINT [DF_HardwareTerminal_EnableSwipeAndGo] DEFAULT ((0)) NOT NULL,
    [AllowLunch]                    BIT            CONSTRAINT [DF_HardwareTerminal_AllowLunch] DEFAULT ((0)) NOT NULL,
    [AllowBreak]                    BIT            CONSTRAINT [DF_HardwareTerminal_AllowBreak] DEFAULT ((0)) NOT NULL,
    [AllowLLTransfer]               BIT            CONSTRAINT [DF_HardwareTerminal_AllowLLTransfer] DEFAULT ((0)) NOT NULL,
    [AllowBadgelessEntry]           BIT            CONSTRAINT [DF_HardwareTerminal_AllowBadgelessEntry] DEFAULT ((0)) NOT NULL,
    [AllowPayAdjustmentEntry]       BIT            CONSTRAINT [DF_HardwareTerminal_AllowPayAdjustmentEntry] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentEntryType]        INT            CONSTRAINT [DF_HardwareTerminal_PayAdjustmentEntryType] DEFAULT ((0)) NOT NULL,
    [DefaultPayAdjustmentID]        INT            CONSTRAINT [DF_HardwareTerminal_DefaultPayAdjustmentID] DEFAULT ((0)) NOT NULL,
    [FingerprintSecurityLevel]      INT            CONSTRAINT [DF_HardwareTerminal_FingerprintSecurityLevel] DEFAULT ((0)) NOT NULL,
    [FingerPrintBrightness]         INT            CONSTRAINT [DF_HardwareTerminal_FingerPrintBrightness] DEFAULT ((0)) NOT NULL,
    [FingerPrintImageQuality]       INT            CONSTRAINT [DF_HardwareTerminal_FingerPrintImageQuality] DEFAULT ((0)) NOT NULL,
    [UpdateConfigurationFreqSecs]   INT            CONSTRAINT [DF_HardwareTerminal_ConfigurationFreq] DEFAULT ((0)) NOT NULL,
    [UpdateEmployeeFreqSecs]        INT            CONSTRAINT [DF_HardwareTerminal_EmployeeFreq] DEFAULT ((0)) NOT NULL,
    [UpdateLLFreqSecs]              INT            CONSTRAINT [DF_HardwareTerminal_LLFreq] DEFAULT ((0)) NOT NULL,
    [UpdateMessageFreqSecs]         INT            CONSTRAINT [DF_HardwareTerminal_MessageFreq] DEFAULT ((0)) NOT NULL,
    [UpdatePayAdjustmentFreqSecs]   INT            CONSTRAINT [DF_HardwareTerminal_PayAdjustmentFreq] DEFAULT ((0)) NOT NULL,
    [UpdateScheduleFreqSecs]        INT            CONSTRAINT [DF_HardwareTerminal_ScheduleFreq] DEFAULT ((0)) NOT NULL,
    [CommunicationType]             INT            CONSTRAINT [DF_HardwareTerminal_CommunicationType] DEFAULT ((0)) NOT NULL,
    [IPAddress]                     NVARCHAR (50)  CONSTRAINT [DF_HardwareTerminal_IPAddress] DEFAULT ('') NOT NULL,
    [ConnectionType]                INT            CONSTRAINT [DF_HardwareTerminal_ConnectionType] DEFAULT ((0)) NOT NULL,
    [COMPort]                       INT            CONSTRAINT [DF_HardwareTerminal_COMPort] DEFAULT ((0)) NOT NULL,
    [BaudRate]                      INT            CONSTRAINT [DF_HardwareTerminal_BaudRate] DEFAULT ((0)) NOT NULL,
    [PhoneNumber]                   NVARCHAR (50)  CONSTRAINT [DF_HardwareTerminal_PhoneNumber] DEFAULT ('') NOT NULL,
    [BellScheduleTempID]            INT            CONSTRAINT [DF_HardwareTerminal_BellScheduleTempID] DEFAULT ((0)) NOT NULL,
    [AllowClockInUsingF1Key]        BIT            CONSTRAINT [DF_HardwareTerminal_AllowClockInUsingF1Key] DEFAULT ((0)) NOT NULL,
    [AllowClockOutUsingF1Key]       BIT            CONSTRAINT [DF_HardwareTerminal_AllowClockOutUsingF1Key] DEFAULT ((0)) NOT NULL,
    [ScheduleEndGraceSecs]          INT            CONSTRAINT [DF_HardwareTerminal_GraceOutSecs] DEFAULT ((0)) NOT NULL,
    [ClearHandTemplates]            BIT            CONSTRAINT [DF_HardwareTerminal_ClearHandTemplates] DEFAULT ((0)) NOT NULL,
    [AllowLunchAndBreakUsingF1Key]  BIT            CONSTRAINT [DF_HardwareTerminal_AllowLunchAndBreakUsingF1Key] DEFAULT ((0)) NOT NULL,
    [AllowLLTransferUsingF2Key]     BIT            CONSTRAINT [DF_HardwareTerminal_AllowLLTransferUsingF2Key] DEFAULT ((0)) NOT NULL,
    [EnablePolling]                 BIT            CONSTRAINT [DF_HardwareTerminal_EnablePolling] DEFAULT ((0)) NOT NULL,
    [PollIntervalType]              INT            CONSTRAINT [DF_HardwareTerminal_PollIntervalType] DEFAULT ((0)) NOT NULL,
    [PollIntervalLength]            INT            CONSTRAINT [DF_HardwareTerminal_PollIntervalLength] DEFAULT ((0)) NOT NULL,
    [PollBaseTime]                  DATETIME       CONSTRAINT [DF_HardwareTerminal_PollBaseTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EnableImporting]               BIT            CONSTRAINT [DF_HardwareTerminal_EnableImport] DEFAULT ((0)) NOT NULL,
    [ImportIntervalType]            INT            CONSTRAINT [DF_HardwareTerminal_ImportIntervalType] DEFAULT ((0)) NOT NULL,
    [ImportIntervalLength]          INT            CONSTRAINT [DF_HardwareTerminal_ImportIntervalLength] DEFAULT ((0)) NOT NULL,
    [ImportBaseTime]                DATETIME       CONSTRAINT [DF_HardwareTerminal_ImportBaseTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EnableUploading]               BIT            CONSTRAINT [DF_HardwareTerminal_EnableUploading] DEFAULT ((0)) NOT NULL,
    [UploadIntervalType]            INT            CONSTRAINT [DF_HardwareTerminal_UploadIntervalType] DEFAULT ((0)) NOT NULL,
    [UploadIntervalLength]          INT            CONSTRAINT [DF_HardwareTerminal_UploadIntervalLength] DEFAULT ((0)) NOT NULL,
    [UploadBaseTime]                DATETIME       CONSTRAINT [DF_HardwareTerminal_UploadBaseTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ActivateRelay]                 BIT            CONSTRAINT [DF_HardwareTerminal_ActivateRelay] DEFAULT ((0)) NOT NULL,
    [SendMessageToClockEnabled]     BIT            CONSTRAINT [DF_HardwareTerminal_SendMessageToClockEnabled] DEFAULT ((0)) NOT NULL,
    [LastCommunicationDateTime]     DATETIME       CONSTRAINT [DF_HardwareTerminal_LastCommunicationDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [MACID]                         NVARCHAR (50)  CONSTRAINT [DF_HardwareTerminal_MACID] DEFAULT ('') NOT NULL,
    [SendMessageType]               INT            CONSTRAINT [DF_HardwareTerminal_SendMessageType] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]                   INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]                  INT            CONSTRAINT [DF_HardwareTerminal_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT            CONSTRAINT [DF_HardwareTerminal_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME       CONSTRAINT [DF_HardwareTerminal_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]                     BIT            CONSTRAINT [DF_HardwareTerminal_IsDeleted] DEFAULT ((0)) NOT NULL,
    [UpdateURL]                     VARCHAR (255)  CONSTRAINT [DF_HardwareTerminal_UpdateURL] DEFAULT ('') NOT NULL,
    [AllowAlphaBadges]              BIT            CONSTRAINT [DF_HardwareTerminal_AllowAlphaBadges] DEFAULT ((0)) NOT NULL,
    [EnableFingerprint]             BIT            CONSTRAINT [DF_HardwareTerminal_EnableFingerprint] DEFAULT ((0)) NOT NULL,
    [EnableWireless]                BIT            CONSTRAINT [DF_HardwareTerminal_EnableWireless] DEFAULT ((1)) NOT NULL,
    [Version]                       VARCHAR (MAX)  CONSTRAINT [DF_HardwareTerminal_Version] DEFAULT ('1.1.1.1') NOT NULL,
    [InternalWebServiceUrl]         VARCHAR (255)  CONSTRAINT [DF_HardwareTerminal_InternalWebServiceUrl] DEFAULT ('') NOT NULL,
    [LLPromptOnClockInEnabled]      BIT            CONSTRAINT [DF_HardwareTerminal_LLPromptOnClockInEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnEndBreakEnabled]     BIT            CONSTRAINT [DF_HardwareTerminal_LLPromptOnEndBreakEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnEndLunchEnabled]     BIT            CONSTRAINT [DF_HardwareTerminal_LLPromptOnEndLunchEnabled] DEFAULT ((0)) NOT NULL,
    [AutoUpdate]                    BIT            CONSTRAINT [DF_HardwareTerminal_AutoUpdate] DEFAULT ((1)) NOT NULL,
    [ForceUpdate]                   BIT            CONSTRAINT [DF_HardwareTerminal_ForceUpdate] DEFAULT ((0)) NOT NULL,
    [AllowUnknownBadges]            BIT            CONSTRAINT [DF_HardwareTerminal_AllowUnknownBadges] DEFAULT ((0)) NOT NULL,
    [DisplayAssignedLLsEnabled]     BIT            CONSTRAINT [DF_HardwareTerminal_DisplayAssignedLLsEnabled] DEFAULT ((0)) NOT NULL,
    [TimecardEmpApprovalEnabled]    BIT            CONSTRAINT [DF_HardwareTerminal_TimecardEmpApprovalEnabled] DEFAULT ((0)) NOT NULL,
    [TimecardApprovalDateRangeType] INT            CONSTRAINT [DF_HardwareTerminal_TimecardApprovalDateRangeType] DEFAULT ((1)) NOT NULL,
    [TimecardEmpApprovalText]       VARCHAR (500)  CONSTRAINT [DF_HardwareTerminal_TimecardEmpApprovalText] DEFAULT ('') NOT NULL,
    [TimecardEmpApprovalPayPolicy]  INT            CONSTRAINT [DF_HardwareTerminal_TimecardEmpApprovalPayPolicy] DEFAULT ((0)) NOT NULL,
    [CurrentClockVersion]           VARCHAR (MAX)  CONSTRAINT [DF_HardwareTerminal_CurrentClockVersion] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_HardwareTerminal1] PRIMARY KEY CLUSTERED ([HardwareTerminalID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HardwareTerminal])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareTerminal] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HardwareTerminal] ([HardwareTerminalID], [Description], [LANID], [HardwareTerminalType], [IdlePrompt], [BadgeLength], [BadgeStartPosition], [TotalBadgeLength], [ConfigurationCode], [VerificationIDType], [HardwareZoneID], [ScheduleDaysToUpload], [TimeZoneKey], [DaylightSavingsEnabled], [TerminalMode], [EnableSwipeAndGo], [AllowLunch], [AllowBreak], [AllowLLTransfer], [AllowBadgelessEntry], [AllowPayAdjustmentEntry], [PayAdjustmentEntryType], [DefaultPayAdjustmentID], [FingerprintSecurityLevel], [FingerPrintBrightness], [FingerPrintImageQuality], [UpdateConfigurationFreqSecs], [UpdateEmployeeFreqSecs], [UpdateLLFreqSecs], [UpdateMessageFreqSecs], [UpdatePayAdjustmentFreqSecs], [UpdateScheduleFreqSecs], [CommunicationType], [IPAddress], [ConnectionType], [COMPort], [BaudRate], [PhoneNumber], [BellScheduleTempID], [AllowClockInUsingF1Key], [AllowClockOutUsingF1Key], [ScheduleEndGraceSecs], [ClearHandTemplates], [AllowLunchAndBreakUsingF1Key], [AllowLLTransferUsingF2Key], [EnablePolling], [PollIntervalType], [PollIntervalLength], [PollBaseTime], [EnableImporting], [ImportIntervalType], [ImportIntervalLength], [ImportBaseTime], [EnableUploading], [UploadIntervalType], [UploadIntervalLength], [UploadBaseTime], [ActivateRelay], [SendMessageToClockEnabled], [LastCommunicationDateTime], [MACID], [SendMessageType], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn], [IsDeleted], [UpdateURL], [AllowAlphaBadges], [EnableFingerprint], [EnableWireless], [Version], [InternalWebServiceUrl], [LLPromptOnClockInEnabled], [LLPromptOnEndBreakEnabled], [LLPromptOnEndLunchEnabled], [AutoUpdate], [ForceUpdate], [AllowUnknownBadges], [DisplayAssignedLLsEnabled], [TimecardEmpApprovalEnabled], [TimecardApprovalDateRangeType], [TimecardEmpApprovalText])
        SELECT   [HardwareTerminalID],
                 [Description],
                 [LANID],
                 [HardwareTerminalType],
                 [IdlePrompt],
                 [BadgeLength],
                 [BadgeStartPosition],
                 [TotalBadgeLength],
                 [ConfigurationCode],
                 [VerificationIDType],
                 [HardwareZoneID],
                 [ScheduleDaysToUpload],
                 [TimeZoneKey],
                 [DaylightSavingsEnabled],
                 [TerminalMode],
                 [EnableSwipeAndGo],
                 [AllowLunch],
                 [AllowBreak],
                 [AllowLLTransfer],
                 [AllowBadgelessEntry],
                 [AllowPayAdjustmentEntry],
                 [PayAdjustmentEntryType],
                 [DefaultPayAdjustmentID],
                 [FingerprintSecurityLevel],
                 [FingerPrintBrightness],
                 [FingerPrintImageQuality],
                 [UpdateConfigurationFreqSecs],
                 [UpdateEmployeeFreqSecs],
                 [UpdateLLFreqSecs],
                 [UpdateMessageFreqSecs],
                 [UpdatePayAdjustmentFreqSecs],
                 [UpdateScheduleFreqSecs],
                 [CommunicationType],
                 [IPAddress],
                 [ConnectionType],
                 [COMPort],
                 [BaudRate],
                 [PhoneNumber],
                 [BellScheduleTempID],
                 [AllowClockInUsingF1Key],
                 [AllowClockOutUsingF1Key],
                 [ScheduleEndGraceSecs],
                 [ClearHandTemplates],
                 [AllowLunchAndBreakUsingF1Key],
                 [AllowLLTransferUsingF2Key],
                 [EnablePolling],
                 [PollIntervalType],
                 [PollIntervalLength],
                 [PollBaseTime],
                 [EnableImporting],
                 [ImportIntervalType],
                 [ImportIntervalLength],
                 [ImportBaseTime],
                 [EnableUploading],
                 [UploadIntervalType],
                 [UploadIntervalLength],
                 [UploadBaseTime],
                 [ActivateRelay],
                 [SendMessageToClockEnabled],
                 [LastCommunicationDateTime],
                 [MACID],
                 [SendMessageType],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDeleted],
                 [UpdateURL],
                 [AllowAlphaBadges],
                 [EnableFingerprint],
                 [EnableWireless],
                 [Version],
                 [InternalWebServiceUrl],
                 [LLPromptOnClockInEnabled],
                 [LLPromptOnEndBreakEnabled],
                 [LLPromptOnEndLunchEnabled],
                 [AutoUpdate],
                 [ForceUpdate],
                 [AllowUnknownBadges],
                 [DisplayAssignedLLsEnabled],
                 [TimecardEmpApprovalEnabled],
                 [TimecardApprovalDateRangeType],
                 [TimecardEmpApprovalText]
        FROM     [dbo].[HardwareTerminal]
        ORDER BY [HardwareTerminalID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareTerminal] OFF;
    END

DROP TABLE [dbo].[HardwareTerminal];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HardwareTerminal]', N'HardwareTerminal';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_HardwareTerminal1]', N'PK_HardwareTerminal', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HardwareTerminal].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HardwareTerminal]([Description] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HardwareZone]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HardwareZone] (
    [HardwareZoneID]   INT           IDENTITY (1, 1) NOT NULL,
    [HardwareZoneName] VARCHAR (100) NOT NULL,
    [ModifiedBy]       INT           CONSTRAINT [DF_HardwareZone_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME      CONSTRAINT [DF_HardwareZone_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_HardwareZone1] PRIMARY KEY CLUSTERED ([HardwareZoneID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HardwareZone])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZone] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HardwareZone] ([HardwareZoneID], [HardwareZoneName], [ModifiedBy], [ModifiedOn])
        SELECT   [HardwareZoneID],
                 [HardwareZoneName],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[HardwareZone]
        ORDER BY [HardwareZoneID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZone] OFF;
    END

DROP TABLE [dbo].[HardwareZone];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HardwareZone]', N'HardwareZone';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_HardwareZone1]', N'PK_HardwareZone', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HardwareZone].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HardwareZone]([HardwareZoneName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HardwareZoneMember]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HardwareZoneMember] (
    [HardwareZoneMemberID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]               INT      NOT NULL,
    [HardwareZoneID]       INT      NOT NULL,
    [ModifiedOn]           DATETIME NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_HardwareZoneMember_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_HardwareZoneMember1] PRIMARY KEY CLUSTERED ([HardwareZoneMemberID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HardwareZoneMember])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZoneMember] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HardwareZoneMember] ([HardwareZoneMemberID], [UserID], [HardwareZoneID], [ModifiedOn], [ModifiedBy])
        SELECT   [HardwareZoneMemberID],
                 [UserID],
                 [HardwareZoneID],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[HardwareZoneMember]
        ORDER BY [HardwareZoneMemberID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZoneMember] OFF;
    END

DROP TABLE [dbo].[HardwareZoneMember];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HardwareZoneMember]', N'HardwareZoneMember';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_HardwareZoneMember1]', N'PK_HardwareZoneMember', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HardwareZoneMgr]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HardwareZoneMgr] (
    [HardwareZoneMgrID]   INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_HardwareZoneMgr_UserID] DEFAULT ((0)) NOT NULL,
    [HardwareZoneID]      INT      CONSTRAINT [DF_HardwareZoneMgr_HardwareZoneID] DEFAULT ((0)) NOT NULL,
    [StartDateManagement] DATETIME CONSTRAINT [DF_HardwareZoneMgr_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateManagement]   DATETIME CONSTRAINT [DF_HardwareZoneMgr_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_HardwareZoneMgr_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_HardwareZoneMgr_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_HardwareZoneMgr1] PRIMARY KEY CLUSTERED ([HardwareZoneMgrID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HardwareZoneMgr])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZoneMgr] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HardwareZoneMgr] ([HardwareZoneMgrID], [UserID], [HardwareZoneID], [StartDateManagement], [EndDateManagement], [ModifiedOn], [ModifiedBy])
        SELECT   [HardwareZoneMgrID],
                 [UserID],
                 [HardwareZoneID],
                 [StartDateManagement],
                 [EndDateManagement],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[HardwareZoneMgr]
        ORDER BY [HardwareZoneMgrID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HardwareZoneMgr] OFF;
    END

DROP TABLE [dbo].[HardwareZoneMgr];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HardwareZoneMgr]', N'HardwareZoneMgr';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_HardwareZoneMgr1]', N'PK_HardwareZoneMgr', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HolidayList]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HolidayList] (
    [HolidayListID]   INT           IDENTITY (1, 1) NOT NULL,
    [HolidayListName] NVARCHAR (50) CONSTRAINT [DF_HolidayList_HolidayListName] DEFAULT ('') NOT NULL,
    [IsDeleted]       BIT           CONSTRAINT [DF_HolidayList_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT           CONSTRAINT [DF_HolidayList_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME      CONSTRAINT [DF_HolidayList_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_HolidayList1]
    ON [dbo].[tmp_ms_xx_HolidayList]([HolidayListID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HolidayList])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayList] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HolidayList] ([HolidayListID], [HolidayListName], [IsDeleted], [ModifiedBy], [ModifiedOn])
        SELECT   [HolidayListID],
                 [HolidayListName],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[HolidayList]
        ORDER BY [HolidayListID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayList] OFF;
    END

DROP TABLE [dbo].[HolidayList];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HolidayList]', N'HolidayList';

EXECUTE sp_rename N'[dbo].[HolidayList].[tmp_ms_xx_index_PK_HolidayList1]', N'PK_HolidayList', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HolidayList].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HolidayList]([HolidayListName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HolidayListAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HolidayListAssign] (
    [HolidayListAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_HolidayListAssign_UserID] DEFAULT ((0)) NOT NULL,
    [HolidayListID]       INT      CONSTRAINT [DF_HolidayListAssign_HolidayListID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]       DATETIME CONSTRAINT [DF_HolidayListAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]         DATETIME CONSTRAINT [DF_HolidayListAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_HolidayListAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_HolidayListAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_HolidayListUserAssignment1]
    ON [dbo].[tmp_ms_xx_HolidayListAssign]([HolidayListAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HolidayListAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayListAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HolidayListAssign] ([HolidayListAssignID], [UserID], [HolidayListID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [HolidayListAssignID],
                 [UserID],
                 [HolidayListID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[HolidayListAssign]
        ORDER BY [HolidayListAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayListAssign] OFF;
    END

DROP TABLE [dbo].[HolidayListAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HolidayListAssign]', N'HolidayListAssign';

EXECUTE sp_rename N'[dbo].[HolidayListAssign].[tmp_ms_xx_index_PK_HolidayListUserAssignment1]', N'PK_HolidayListUserAssignment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HolidayListAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HolidayListAssign]([UserID] ASC, [HolidayListID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HolidayListDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HolidayListDetail] (
    [HolidayListDetailID] INT           IDENTITY (1, 1) NOT NULL,
    [HolidayListID]       INT           CONSTRAINT [DF_HolidayListDetail_HolidayListID] DEFAULT ((0)) NOT NULL,
    [HolidayName]         NVARCHAR (50) CONSTRAINT [DF_HolidayListDetail_HolidayName] DEFAULT ('') NOT NULL,
    [HolidayDate]         DATETIME      CONSTRAINT [DF_HolidayListDetail_HolidayDate] DEFAULT ('1/1/1900') NOT NULL,
    [IsCompanyWorked]     BIT           CONSTRAINT [DF_HolidayListDetail_IsCompanyWorked] DEFAULT ((0)) NOT NULL,
    [IncludeWeekend]      BIT           CONSTRAINT [DF_HolidayListDetail_IncludeWeekend] DEFAULT ((0)) NOT NULL,
    [NumberOfDays]        INT           CONSTRAINT [DF_HolidayListDetail_NumberOfDays] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_HolidayListDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_HolidayListDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_HolidayListDetail1]
    ON [dbo].[tmp_ms_xx_HolidayListDetail]([HolidayListDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HolidayListDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayListDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HolidayListDetail] ([HolidayListDetailID], [HolidayListID], [HolidayName], [HolidayDate], [IsCompanyWorked], [IncludeWeekend], [NumberOfDays], [ModifiedBy], [ModifiedOn])
        SELECT   [HolidayListDetailID],
                 [HolidayListID],
                 [HolidayName],
                 [HolidayDate],
                 [IsCompanyWorked],
                 [IncludeWeekend],
                 [NumberOfDays],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[HolidayListDetail]
        ORDER BY [HolidayListDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HolidayListDetail] OFF;
    END

DROP TABLE [dbo].[HolidayListDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HolidayListDetail]', N'HolidayListDetail';

EXECUTE sp_rename N'[dbo].[HolidayListDetail].[tmp_ms_xx_index_PK_HolidayListDetail1]', N'PK_HolidayListDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[HolidayListDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[HolidayListDetail]([HolidayListID] ASC, [HolidayName] ASC, [HolidayDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[HoursForecastPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HoursForecastPolicy] (
    [ID]                      INT          IDENTITY (1, 1) NOT NULL,
    [HoursForecastPolicyID]   INT          CONSTRAINT [DF_HoursForecastPolicy_HoursForecastPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME     CONSTRAINT [DF_HoursForecastPolicy_StartDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndDateTime]             DATETIME     CONSTRAINT [DF_HoursForecastPolicy_EndDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [IsDeleted]               BIT          CONSTRAINT [DF_HoursForecastPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [HoursForecastPolicyName] VARCHAR (50) CONSTRAINT [DF_HoursForecastPolicy_HoursForecastPolicyName] DEFAULT ('') NOT NULL,
    [ModifiedBy]              INT          CONSTRAINT [DF_HoursForecastPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME     CONSTRAINT [DF_HoursForecastPolicy_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ForecastMethodType]      INT          CONSTRAINT [DF_HoursForecastPolicy_ForecastingMethodType] DEFAULT ((0)) NOT NULL,
    [ShowForecastedTime]      BIT          CONSTRAINT [DF_HoursForecastPolicy_ShowForecastedTime] DEFAULT ((0)) NOT NULL,
    [ForecastNonWorkTime]     BIT          CONSTRAINT [DF_HoursForecastPolicy_ForecastNonWorkTime] DEFAULT ((0)) NOT NULL,
    [IncludeNonWorkHours]     BIT          CONSTRAINT [DF_HoursForecastPolicy_IncludeNonWorkTime] DEFAULT ((0)) NOT NULL,
    [StartTime]               DATETIME     CONSTRAINT [DF_HoursForecastPolicy_StartDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndTime]                 DATETIME     CONSTRAINT [DF_HoursForecastPolicy_EndDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [AvgWorkDuration]         INT          CONSTRAINT [DF_HoursForecastPolicy_AvgWorkDuration] DEFAULT ((0)) NOT NULL,
    [ForecastWorkTime]        BIT          CONSTRAINT [DF_HoursForecastPolicy_ForecastWorkTime] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HoursForecastPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HoursForecastPolicy] ([ID], [HoursForecastPolicyID], [StartDateTime], [EndDateTime], [IsDeleted], [HoursForecastPolicyName], [ModifiedBy], [ModifiedOn], [ForecastMethodType], [ShowForecastedTime], [ForecastNonWorkTime], [IncludeNonWorkHours], [StartTime], [EndTime], [AvgWorkDuration], [ForecastWorkTime])
        SELECT [ID],
               [HoursForecastPolicyID],
               [StartDateTime],
               [EndDateTime],
               [IsDeleted],
               [HoursForecastPolicyName],
               [ModifiedBy],
               [ModifiedOn],
               [ForecastMethodType],
               [ShowForecastedTime],
               [ForecastNonWorkTime],
               [IncludeNonWorkHours],
               [StartTime],
               [EndTime],
               [AvgWorkDuration],
               [ForecastWorkTime]
        FROM   [dbo].[HoursForecastPolicy];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicy] OFF;
    END

DROP TABLE [dbo].[HoursForecastPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HoursForecastPolicy]', N'HoursForecastPolicy';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HoursForecastPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HoursForecastPolicyAssign] (
    [ID]                    INT      IDENTITY (1, 1) NOT NULL,
    [HoursForecastPolicyID] INT      CONSTRAINT [DF_HoursForecastPolicyAssign_HoursForecastPolicyID] DEFAULT ((0)) NOT NULL,
    [UserID]                INT      CONSTRAINT [DF_HoursForecastPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]         DATETIME CONSTRAINT [DF_HoursForecastPolicyAssign_StartDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndDateTime]           DATETIME CONSTRAINT [DF_HoursForecastPolicyAssign_EndDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedBy]            INT      CONSTRAINT [DF_HoursForecastPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME CONSTRAINT [DF_HoursForecastPolicyAssign_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HoursForecastPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HoursForecastPolicyAssign] ([ID], [HoursForecastPolicyID], [UserID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT [ID],
               [HoursForecastPolicyID],
               [UserID],
               [StartDateTime],
               [EndDateTime],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[HoursForecastPolicyAssign];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicyAssign] OFF;
    END

DROP TABLE [dbo].[HoursForecastPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HoursForecastPolicyAssign]', N'HoursForecastPolicyAssign';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[HoursForecastPolicyDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_HoursForecastPolicyDetail] (
    [ID]                          INT      IDENTITY (1, 1) NOT NULL,
    [HoursForecastPolicyDetailID] INT      CONSTRAINT [DF_HoursForecastPolicyDetail_HoursForecastPolicyDetailID] DEFAULT ((0)) NOT NULL,
    [HoursForecastPolicyID]       INT      CONSTRAINT [DF_HoursForecastPolicyDetail_HoursForecastPolicyID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                   INT      CONSTRAINT [DF_HoursForecastPolicyDetail_PayTypeID] DEFAULT ((0)) NOT NULL,
    [PostReconciliationPayTypeID] INT      CONSTRAINT [DF_HoursForecastPolicyDetail_ReconciliationPayTypeID] DEFAULT ((0)) NOT NULL,
    [NegReconciliationPayTypeID]  INT      CONSTRAINT [DF_HoursForecastPolicyDetail_NegReconciliationPayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]               DATETIME CONSTRAINT [DF_HoursForecastPolicyDetail_StartDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndDateTime]                 DATETIME CONSTRAINT [DF_HoursForecastPolicyDetail_EndDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedBy]                  INT      CONSTRAINT [DF_HoursForecastPolicyDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                  DATETIME CONSTRAINT [DF_HoursForecastPolicyDetail_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[HoursForecastPolicyDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicyDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_HoursForecastPolicyDetail] ([ID], [HoursForecastPolicyDetailID], [HoursForecastPolicyID], [PayTypeID], [PostReconciliationPayTypeID], [NegReconciliationPayTypeID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT [ID],
               [HoursForecastPolicyDetailID],
               [HoursForecastPolicyID],
               [PayTypeID],
               [PostReconciliationPayTypeID],
               [NegReconciliationPayTypeID],
               [StartDateTime],
               [EndDateTime],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[HoursForecastPolicyDetail];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_HoursForecastPolicyDetail] OFF;
    END

DROP TABLE [dbo].[HoursForecastPolicyDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_HoursForecastPolicyDetail]', N'HoursForecastPolicyDetail';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ImportAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportAssignment] (
    [ImportAssignmentID] INT      IDENTITY (1, 1) NOT NULL,
    [ImportID]           INT      CONSTRAINT [DF_ImportAssignment_ImportID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]         INT      CONSTRAINT [DF_ImportAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME CONSTRAINT [DF_ImportAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportAssignment1] PRIMARY KEY CLUSTERED ([ImportAssignmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportAssignment] ([ImportAssignmentID], [ImportID], [ModifiedBy], [ModifiedOn])
        SELECT   [ImportAssignmentID],
                 [ImportID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ImportAssignment]
        ORDER BY [ImportAssignmentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportAssignment] OFF;
    END

DROP TABLE [dbo].[ImportAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportAssignment]', N'ImportAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportAssignment1]', N'PK_ImportAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ImportProcessHistory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportProcessHistory] (
    [ID]           INT             IDENTITY (1, 1) NOT NULL,
    [Type]         INT             CONSTRAINT [DF_ImportProcessHistory_Type] DEFAULT ((0)) NOT NULL,
    [ImportID]     INT             CONSTRAINT [DF_ImportProcessHistory_ImportID] DEFAULT ((0)) NOT NULL,
    [ActualFile]   VARBINARY (MAX) NULL,
    [LogFile]      VARBINARY (MAX) NULL,
    [StatusType]   INT             CONSTRAINT [DF_ImportProcessHistory_StatusType] DEFAULT ((0)) NOT NULL,
    [ImportedBy]   INT             CONSTRAINT [DF_ImportProcessHistory_ImportedBy] DEFAULT ((0)) NOT NULL,
    [ImportedDate] DATETIME        CONSTRAINT [DF_ImportProcessHistory_ImportedDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Email]        NVARCHAR (100)  CONSTRAINT [DF_ImportProcessHistory_Email] DEFAULT ('') NOT NULL,
    [ModifiedBy]   INT             CONSTRAINT [DF_ImportProcessHistory_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]   DATETIME        CONSTRAINT [DF_ImportProcessHistory_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ImportedIDs]  VARCHAR (MAX)   CONSTRAINT [DF_ImportProcessHistory_ImportedIDs] DEFAULT (' ') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportProcessHistory1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportProcessHistory])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportProcessHistory] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportProcessHistory] ([ID], [Type], [ImportID], [ActualFile], [LogFile], [StatusType], [ImportedBy], [ImportedDate], [Email], [ModifiedBy], [ModifiedOn], [ImportedIDs])
        SELECT   [ID],
                 [Type],
                 [ImportID],
                 [ActualFile],
                 [LogFile],
                 [StatusType],
                 [ImportedBy],
                 [ImportedDate],
                 [Email],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ImportedIDs]
        FROM     [dbo].[ImportProcessHistory]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportProcessHistory] OFF;
    END

DROP TABLE [dbo].[ImportProcessHistory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportProcessHistory]', N'ImportProcessHistory';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportProcessHistory1]', N'PK_ImportProcessHistory', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ImportProcessHistory]([ImportID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportSchedule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportSchedule] (
    [ImportScheduleID]  INT      IDENTITY (1, 1) NOT NULL,
    [ImportID]          INT      CONSTRAINT [DF_ImportSchedule_ImportID] DEFAULT ((0)) NOT NULL,
    [FrequencyType]     INT      CONSTRAINT [DF_ImportSchedule_FrequencyType] DEFAULT ((0)) NOT NULL,
    [UnitType]          INT      CONSTRAINT [DF_ImportSchedule_UnitType] DEFAULT ((0)) NOT NULL,
    [WeekDay]           INT      CONSTRAINT [DF_ImportSchedule_WeekDay] DEFAULT ((0)) NOT NULL,
    [ScheduleTime]      DATETIME CONSTRAINT [DF_ImportSchedule_ScheduleTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UnitCount]         INT      CONSTRAINT [DF_ImportSchedule_UnitCount] DEFAULT ((0)) NOT NULL,
    [ReferenceDateTime] DATETIME CONSTRAINT [DF_ImportSchedule_ReferenceDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_ImportSchedule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_ImportSchedule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportSchedule1] PRIMARY KEY CLUSTERED ([ImportScheduleID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportSchedule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportSchedule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportSchedule] ([ImportScheduleID], [ImportID], [FrequencyType], [UnitType], [WeekDay], [ScheduleTime], [UnitCount], [ReferenceDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ImportScheduleID],
                 [ImportID],
                 [FrequencyType],
                 [UnitType],
                 [WeekDay],
                 [ScheduleTime],
                 [UnitCount],
                 [ReferenceDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ImportSchedule]
        ORDER BY [ImportScheduleID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportSchedule] OFF;
    END

DROP TABLE [dbo].[ImportSchedule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportSchedule]', N'ImportSchedule';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportSchedule1]', N'PK_ImportSchedule', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportSchedule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ImportSchedule]([ImportID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportSetting] (
    [ImportSettingID]        INT            IDENTITY (1, 1) NOT NULL,
    [ImportID]               INT            CONSTRAINT [DF_ImportSetting_ImportID] DEFAULT ((0)) NOT NULL,
    [ImportSpecificSettings] NVARCHAR (MAX) CONSTRAINT [DF_ImportSetting_ImportSpecificSettings] DEFAULT ('') NOT NULL,
    [ModifiedBy]             INT            CONSTRAINT [DF_ImportSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME       CONSTRAINT [DF_ImportSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ImportProcessType]      INT            CONSTRAINT [DF_ImportSetting_ImportProcessType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportSetting1] PRIMARY KEY CLUSTERED ([ImportSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportSetting] ([ImportSettingID], [ImportID], [ImportSpecificSettings], [ModifiedBy], [ModifiedOn], [ImportProcessType])
        SELECT   [ImportSettingID],
                 [ImportID],
                 [ImportSpecificSettings],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ImportProcessType]
        FROM     [dbo].[ImportSetting]
        ORDER BY [ImportSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportSetting] OFF;
    END

DROP TABLE [dbo].[ImportSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportSetting]', N'ImportSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportSetting1]', N'PK_ImportSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ImportSetting]([ImportID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportTemp]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportTemp] (
    [ImportTempID]         INT           IDENTITY (1, 1) NOT NULL,
    [ImportTempName]       NVARCHAR (50) NOT NULL,
    [Delimiter]            CHAR (1)      CONSTRAINT [DF_ImportTemp_Delimiter] DEFAULT (',') NOT NULL,
    [TextSurroundWith]     NVARCHAR (50) NOT NULL,
    [StartFromRow]         INT           CONSTRAINT [DF_ImportTemp_StartFromRow] DEFAULT ((1)) NOT NULL,
    [ModifiedBy]           INT           CONSTRAINT [DF_ImportTemp_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME      CONSTRAINT [DF_ImportTemp_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DefaultEffectiveDate] DATETIME      CONSTRAINT [DF_ImportTemp_DefaultEffectiveDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleteFutureAssign] BIT           CONSTRAINT [DF_ImportTemp_IsDeleteFutureAssign] DEFAULT ((0)) NOT NULL,
    [ImportType]           INT           CONSTRAINT [DF_ImportTemp_ImportType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportTemp1] PRIMARY KEY CLUSTERED ([ImportTempID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportTemp])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportTemp] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportTemp] ([ImportTempID], [ImportTempName], [Delimiter], [TextSurroundWith], [StartFromRow], [ModifiedBy], [ModifiedOn], [DefaultEffectiveDate], [IsDeleteFutureAssign], [ImportType])
        SELECT   [ImportTempID],
                 [ImportTempName],
                 [Delimiter],
                 [TextSurroundWith],
                 [StartFromRow],
                 [ModifiedBy],
                 [ModifiedOn],
                 [DefaultEffectiveDate],
                 [IsDeleteFutureAssign],
                 [ImportType]
        FROM     [dbo].[ImportTemp]
        ORDER BY [ImportTempID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportTemp] OFF;
    END

DROP TABLE [dbo].[ImportTemp];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportTemp]', N'ImportTemp';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportTemp1]', N'PK_ImportTemp', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportTemp].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ImportTemp]([ImportTempName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ImportTempFields]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ImportTempFields] (
    [ID]              INT      IDENTITY (1, 1) NOT NULL,
    [ImportTempID]    INT      CONSTRAINT [DF_ImportTempFields_ImportTempID] DEFAULT ((0)) NOT NULL,
    [FieldType]       INT      CONSTRAINT [DF_ImportTempFields_FieldType] DEFAULT ((0)) NOT NULL,
    [FieldValue]      INT      CONSTRAINT [DF_ImportTempFields_FieldValue] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition] INT      CONSTRAINT [DF_ImportTempFields_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_ImportTempFields_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_ImportTempFields_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ImportTempFields1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ImportTempFields])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportTempFields] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ImportTempFields] ([ID], [ImportTempID], [FieldType], [FieldValue], [OrdinalPosition], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [ImportTempID],
                 [FieldType],
                 [FieldValue],
                 [OrdinalPosition],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ImportTempFields]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ImportTempFields] OFF;
    END

DROP TABLE [dbo].[ImportTempFields];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ImportTempFields]', N'ImportTempFields';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ImportTempFields1]', N'PK_ImportTempFields', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ImportTempFields].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ImportTempFields]([ImportTempID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[IPAccessPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IPAccessPolicy] (
    [IPAccessPolicyID]   INT           IDENTITY (1, 1) NOT NULL,
    [IPAccessPolicyName] NVARCHAR (50) CONSTRAINT [DF_IPAccessPolicy_IPAccessPolicyName] DEFAULT ('') NOT NULL,
    [AllowSiteAccess]    BIT           CONSTRAINT [DF_IPAccessPolicy_AllowSiteAccess] DEFAULT ((0)) NOT NULL,
    [AllowPunch]         BIT           CONSTRAINT [DF_IPAccessPolicy_AllowPunch] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]         INT           CONSTRAINT [DF_IPAccessPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME      CONSTRAINT [DF_IPAccessPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_IPAccessPolicy1]
    ON [dbo].[tmp_ms_xx_IPAccessPolicy]([IPAccessPolicyID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IPAccessPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IPAccessPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IPAccessPolicy] ([IPAccessPolicyID], [IPAccessPolicyName], [AllowSiteAccess], [AllowPunch], [ModifiedBy], [ModifiedOn])
        SELECT   [IPAccessPolicyID],
                 [IPAccessPolicyName],
                 [AllowSiteAccess],
                 [AllowPunch],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[IPAccessPolicy]
        ORDER BY [IPAccessPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IPAccessPolicy] OFF;
    END

DROP TABLE [dbo].[IPAccessPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IPAccessPolicy]', N'IPAccessPolicy';

EXECUTE sp_rename N'[dbo].[IPAccessPolicy].[tmp_ms_xx_index_PK_IPAccessPolicy1]', N'PK_IPAccessPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[IPAccessPolicy]([IPAccessPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[IPAccessPolicyDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_IPAccessPolicyDetail] (
    [IPAccessPolicyDetailID] INT           IDENTITY (1, 1) NOT NULL,
    [IPAccessPolicyID]       INT           CONSTRAINT [DF_IPAccessPolicyDetail_IPAccessPolicyID] DEFAULT ((0)) NOT NULL,
    [IPAddress]              NVARCHAR (50) CONSTRAINT [DF_IPAccessPolicyDetail_IPAddress] DEFAULT ('') NOT NULL,
    [Description]            NVARCHAR (50) CONSTRAINT [DF_IPAccessPolicyDetail_Description] DEFAULT ('') NOT NULL,
    [ModifiedBy]             INT           CONSTRAINT [DF_IPAccessPolicyDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME      CONSTRAINT [DF_IPAccessPolicyDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_IPAccessPolicyDetail1]
    ON [dbo].[tmp_ms_xx_IPAccessPolicyDetail]([IPAccessPolicyDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[IPAccessPolicyDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IPAccessPolicyDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_IPAccessPolicyDetail] ([IPAccessPolicyDetailID], [IPAccessPolicyID], [IPAddress], [Description], [ModifiedBy], [ModifiedOn])
        SELECT   [IPAccessPolicyDetailID],
                 [IPAccessPolicyID],
                 [IPAddress],
                 [Description],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[IPAccessPolicyDetail]
        ORDER BY [IPAccessPolicyDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_IPAccessPolicyDetail] OFF;
    END

DROP TABLE [dbo].[IPAccessPolicyDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_IPAccessPolicyDetail]', N'IPAccessPolicyDetail';

EXECUTE sp_rename N'[dbo].[IPAccessPolicyDetail].[tmp_ms_xx_index_PK_IPAccessPolicyDetail1]', N'PK_IPAccessPolicyDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[IPAccessPolicyDetail]([IPAccessPolicyID] ASC, [IPAddress] ASC, [Description] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[JobAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JobAssignment] (
    [JobAssignmentID] INT      IDENTITY (1, 1) NOT NULL,
    [JobID]           INT      CONSTRAINT [DF_JobAssignment_JobID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_JobAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_JobAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JobAssignment1] PRIMARY KEY CLUSTERED ([JobAssignmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JobAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_JobAssignment] ([JobAssignmentID], [JobID], [ModifiedBy], [ModifiedOn])
        SELECT   [JobAssignmentID],
                 [JobID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[JobAssignment]
        ORDER BY [JobAssignmentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobAssignment] OFF;
    END

DROP TABLE [dbo].[JobAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JobAssignment]', N'JobAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JobAssignment1]', N'PK_JobAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[JobProcessHistory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JobProcessHistory] (
    [JobProcessHistoryID]  INT             IDENTITY (1, 1) NOT NULL,
    [JobSettingID]         INT             CONSTRAINT [DF_JobProcessHistory_JobSettingID] DEFAULT ((0)) NOT NULL,
    [JobProcessStatusType] INT             CONSTRAINT [DF_JobProcessHistory_JobProcessStatusType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT             CONSTRAINT [DF_JobProcessHistory_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME        CONSTRAINT [DF_JobProcessHistory_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ActualFile]           VARBINARY (MAX) NULL,
    [LogFile]              VARBINARY (MAX) NULL,
    [JobProcessedBy]       INT             CONSTRAINT [DF_JobProcessHistory_JobProcessedBy] DEFAULT ((0)) NOT NULL,
    [JobProcessedOn]       DATETIME        CONSTRAINT [DF_JobProcessHistory_JobProcessedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [JobSettingName]       NVARCHAR (50)   CONSTRAINT [DF_JobProcessHistory_JobSettingName] DEFAULT ('') NOT NULL,
    [JobID]                INT             CONSTRAINT [DF_JobProcessHistory_JobID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JobProcessHistory1] PRIMARY KEY CLUSTERED ([JobProcessHistoryID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JobProcessHistory])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobProcessHistory] ON;
        INSERT INTO [dbo].[tmp_ms_xx_JobProcessHistory] ([JobProcessHistoryID], [JobSettingID], [JobProcessStatusType], [ModifiedBy], [ModifiedOn], [ActualFile], [LogFile], [JobProcessedBy], [JobProcessedOn], [JobSettingName], [JobID])
        SELECT   [JobProcessHistoryID],
                 [JobSettingID],
                 [JobProcessStatusType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ActualFile],
                 [LogFile],
                 [JobProcessedBy],
                 [JobProcessedOn],
                 [JobSettingName],
                 [JobID]
        FROM     [dbo].[JobProcessHistory]
        ORDER BY [JobProcessHistoryID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobProcessHistory] OFF;
    END

DROP TABLE [dbo].[JobProcessHistory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JobProcessHistory]', N'JobProcessHistory';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JobProcessHistory1]', N'PK_JobProcessHistory', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[JobSchedule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JobSchedule] (
    [JobScheduleID]     INT      IDENTITY (1, 1) NOT NULL,
    [JobSettingID]      INT      CONSTRAINT [DF_JobSchedule_JobSettingID] DEFAULT ((0)) NOT NULL,
    [FrequencyType]     INT      CONSTRAINT [DF_JobSchedule_FrequencyType] DEFAULT ((0)) NOT NULL,
    [UnitType]          INT      CONSTRAINT [DF_JobSchedule_UnitType] DEFAULT ((0)) NOT NULL,
    [WeekDay]           INT      CONSTRAINT [DF_JobSchedule_WeekDay] DEFAULT ((0)) NOT NULL,
    [ScheduleTime]      DATETIME CONSTRAINT [DF_JobSchedule_ScheduleTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UnitCount]         INT      CONSTRAINT [DF_JobSchedule_UnitCount] DEFAULT ((0)) NOT NULL,
    [ReferenceDateTime] DATETIME CONSTRAINT [DF_JobSchedule_ReferenceDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_JobSchedule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_JobSchedule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JobSchedule1] PRIMARY KEY CLUSTERED ([JobScheduleID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JobSchedule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobSchedule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_JobSchedule] ([JobScheduleID], [JobSettingID], [FrequencyType], [UnitType], [WeekDay], [ScheduleTime], [UnitCount], [ReferenceDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [JobScheduleID],
                 [JobSettingID],
                 [FrequencyType],
                 [UnitType],
                 [WeekDay],
                 [ScheduleTime],
                 [UnitCount],
                 [ReferenceDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[JobSchedule]
        ORDER BY [JobScheduleID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobSchedule] OFF;
    END

DROP TABLE [dbo].[JobSchedule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JobSchedule]', N'JobSchedule';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JobSchedule1]', N'PK_JobSchedule', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[JobSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_JobSetting] (
    [JobSettingID]        INT            IDENTITY (1, 1) NOT NULL,
    [JobID]               INT            CONSTRAINT [DF_JobSetting_JobID] DEFAULT ((0)) NOT NULL,
    [JobSpecificSettings] NVARCHAR (MAX) CONSTRAINT [DF_JobSetting_JobSpecificSettings] DEFAULT ('') NOT NULL,
    [ModifiedBy]          INT            CONSTRAINT [DF_JobSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME       CONSTRAINT [DF_JobSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [JobSettingName]      NVARCHAR (50)  CONSTRAINT [DF_JobSetting_JobSettingName] DEFAULT ('') NOT NULL,
    [FilterID]            INT            CONSTRAINT [DF_JobSetting_FilterID] DEFAULT ((0)) NOT NULL,
    [FilterData]          NVARCHAR (MAX) CONSTRAINT [DF_JobSetting_FilterData] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_JobSetting1] PRIMARY KEY CLUSTERED ([JobSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[JobSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_JobSetting] ([JobSettingID], [JobID], [JobSpecificSettings], [ModifiedBy], [ModifiedOn], [JobSettingName], [FilterID], [FilterData])
        SELECT   [JobSettingID],
                 [JobID],
                 [JobSpecificSettings],
                 [ModifiedBy],
                 [ModifiedOn],
                 [JobSettingName],
                 [FilterID],
                 [FilterData]
        FROM     [dbo].[JobSetting]
        ORDER BY [JobSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_JobSetting] OFF;
    END

DROP TABLE [dbo].[JobSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_JobSetting]', N'JobSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_JobSetting1]', N'PK_JobSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[LandingPageVideo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LandingPageVideo] (
    [LandingPageVideoID]     INT          IDENTITY (1, 1) NOT NULL,
    [VideoID]                INT          CONSTRAINT [DF_LandingPageVideo_VideoID] DEFAULT ((0)) NOT NULL,
    [LandingPageSectionType] INT          CONSTRAINT [DF_LandingPageVideo_LandingPageSectionType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]             INT          CONSTRAINT [DF_LandingPageVideo_ModifedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME     CONSTRAINT [DF_LandingPageVideo_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [VideoName]              VARCHAR (50) CONSTRAINT [DF_LandingPageVideo_VideoName] DEFAULT ('') NOT NULL,
    [LandingPageFeatureType] INT          CONSTRAINT [DF_LandingPageVideo_LandingPageFeatureType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_LandingPageVideo1] PRIMARY KEY CLUSTERED ([LandingPageVideoID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LandingPageVideo])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LandingPageVideo] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LandingPageVideo] ([LandingPageVideoID], [VideoID], [LandingPageSectionType], [ModifiedBy], [ModifiedOn], [VideoName], [LandingPageFeatureType])
        SELECT   [LandingPageVideoID],
                 [VideoID],
                 [LandingPageSectionType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [VideoName],
                 [LandingPageFeatureType]
        FROM     [dbo].[LandingPageVideo]
        ORDER BY [LandingPageVideoID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LandingPageVideo] OFF;
    END

DROP TABLE [dbo].[LandingPageVideo];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LandingPageVideo]', N'LandingPageVideo';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_LandingPageVideo1]', N'PK_LandingPageVideo', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LandingPageVideo].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LandingPageVideo]([LandingPageSectionType] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LiveTransactionLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LiveTransactionLog] (
    [LiveTransactionLogID]   INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT      CONSTRAINT [DF_LiveTransactionLog_UserID] DEFAULT ((0)) NOT NULL,
    [TransactionDateTime]    DATETIME CONSTRAINT [DF_LiveTransactionLog_TransactionDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [TransactionUTCDateTime] DATETIME CONSTRAINT [DF_LiveTransactionLog_TransactionUTCDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [TransactionType]        INT      CONSTRAINT [DF_LiveTransactionLog_TransactionType] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreID]         INT      CONSTRAINT [DF_LiveTransactionLog_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_LiveTransactionLog_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_LiveTransactionLog_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LiveTransactionLog1]
    ON [dbo].[tmp_ms_xx_LiveTransactionLog]([LiveTransactionLogID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LiveTransactionLog])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LiveTransactionLog] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LiveTransactionLog] ([LiveTransactionLogID], [UserID], [TransactionDateTime], [TransactionUTCDateTime], [TransactionType], [TimeSlicePreID], [ModifiedBy], [ModifiedOn])
        SELECT   [LiveTransactionLogID],
                 [UserID],
                 [TransactionDateTime],
                 [TransactionUTCDateTime],
                 [TransactionType],
                 [TimeSlicePreID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LiveTransactionLog]
        ORDER BY [LiveTransactionLogID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LiveTransactionLog] OFF;
    END

DROP TABLE [dbo].[LiveTransactionLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LiveTransactionLog]', N'LiveTransactionLog';

EXECUTE sp_rename N'[dbo].[LiveTransactionLog].[tmp_ms_xx_index_PK_LiveTransactionLog1]', N'PK_LiveTransactionLog', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LiveTransactionLog]([UserID] ASC, [TransactionUTCDateTime] DESC);


GO
PRINT N'Starting rebuilding table [dbo].[LL]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LL] (
    [LLID]                      INT           IDENTITY (1, 1) NOT NULL,
    [LLName]                    NVARCHAR (50) CONSTRAINT [DF_LL_LLName] DEFAULT ('') NOT NULL,
    [OrdinalPosition]           INT           CONSTRAINT [DF_LL_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                INT           CONSTRAINT [DF_LL_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                DATETIME      CONSTRAINT [DF_LL_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UnrestrictedAccessEnabled] BIT           CONSTRAINT [DF_LL_UnrestrictedAccessEnabled] DEFAULT ((0)) NOT NULL,
    [AutoSortEnabled]           BIT           CONSTRAINT [DF_LL_CustomFieldOrdinalPosEnabled] DEFAULT ((0)) NOT NULL,
    [PayrollUniqueId]           BIGINT        DEFAULT ((-1)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevel1]
    ON [dbo].[tmp_ms_xx_LL]([LLID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LL])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LL] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LL] ([LLID], [LLName], [OrdinalPosition], [ModifiedBy], [ModifiedOn], [UnrestrictedAccessEnabled], [AutoSortEnabled], [PayrollUniqueId])
        SELECT   [LLID],
                 [LLName],
                 [OrdinalPosition],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UnrestrictedAccessEnabled],
                 [AutoSortEnabled],
                 [PayrollUniqueId]
        FROM     [dbo].[LL]
        ORDER BY [LLID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LL] OFF;
    END

DROP TABLE [dbo].[LL];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LL]', N'LL';

EXECUTE sp_rename N'[dbo].[LL].[tmp_ms_xx_index_PK_LaborLevel1]', N'PK_LaborLevel', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LL].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LL]([LLName] ASC, [OrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetail] (
    [LLDetailID]       INT            IDENTITY (1, 1) NOT NULL,
    [LLID]             INT            CONSTRAINT [DF_LLDetail_LLID] DEFAULT ((0)) NOT NULL,
    [LLDetailCode]     NVARCHAR (300) CONSTRAINT [DF_LLDetail_LLDetailCode] DEFAULT ('') NOT NULL,
    [LLDetailName]     NVARCHAR (300) CONSTRAINT [DF_LLDetail_LLDetailName] DEFAULT ('') NOT NULL,
    [StartDate]        DATETIME       CONSTRAINT [DF_LLDetail_StartDate] DEFAULT ('1/1/1900') NOT NULL,
    [EndDate]          DATETIME       CONSTRAINT [DF_LLDetail_EndDate] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]       INT            CONSTRAINT [DF_LLDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME       CONSTRAINT [DF_LLDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [IsDeleted]        BIT            CONSTRAINT [DF_LLDetail_IsDeleted] DEFAULT ((0)) NOT NULL,
    [EmpNotesRequired] BIT            CONSTRAINT [DF_LLDetail_EmpNotesRequired] DEFAULT ((0)) NOT NULL,
    [CreatedOn]        DATETIME       CONSTRAINT [DF_LLDetail_CreatedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [CreatedBy]        INT            CONSTRAINT [DF_LLDetail_CreatedBy] DEFAULT ((0)) NOT NULL,
    [PayrollUniqueID]  BIGINT         DEFAULT ((-1)) NOT NULL,
    [OriginalCode]     NVARCHAR (300) CONSTRAINT [DF_LLDetail_OriginalCode] DEFAULT ('') NOT NULL,
    [CAStartDate]      DATETIME       CONSTRAINT [DF_LLDetail_CAStartDate] DEFAULT ('1/1/1900') NOT NULL,
    [CAEndDate]        DATETIME       CONSTRAINT [DF_LLDetail_CAEndDate] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetail1]
    ON [dbo].[tmp_ms_xx_LLDetail]([LLDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetail] ([LLDetailID], [LLID], [LLDetailCode], [LLDetailName], [StartDate], [EndDate], [ModifiedBy], [ModifiedOn], [IsDeleted], [EmpNotesRequired], [CreatedOn], [CreatedBy], [PayrollUniqueID], [OriginalCode], [CAStartDate], [CAEndDate])
        SELECT   [LLDetailID],
                 [LLID],
                 [LLDetailCode],
                 [LLDetailName],
                 [StartDate],
                 [EndDate],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDeleted],
                 [EmpNotesRequired],
                 [CreatedOn],
                 [CreatedBy],
                 [PayrollUniqueID],
                 [OriginalCode],
                 [CAStartDate],
                 [CAEndDate]
        FROM     [dbo].[LLDetail]
        ORDER BY [LLDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetail] OFF;
    END

DROP TABLE [dbo].[LLDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetail]', N'LLDetail';

EXECUTE sp_rename N'[dbo].[LLDetail].[tmp_ms_xx_index_PK_LaborLevelDetail1]', N'PK_LaborLevelDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetail]([LLID] ASC, [LLDetailCode] ASC, [StartDate] ASC, [EndDate] ASC);


GO
PRINT N'Creating [dbo].[LLDetail].[IX_Main_Name]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main_Name]
    ON [dbo].[LLDetail]([LLID] ASC, [LLDetailName] ASC, [StartDate] ASC, [EndDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailAssign] (
    [LLDetailAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [LLID]             INT      CONSTRAINT [DF_LLDetailAssign_LLID] DEFAULT ((0)) NOT NULL,
    [LLDetailID]       INT      CONSTRAINT [DF_LLDetailAssign_LLDetailID] DEFAULT ((0)) NOT NULL,
    [UserID]           INT      CONSTRAINT [DF_LLDetailAssign_UserID] DEFAULT ((0)) NOT NULL,
    [IsHomeLL]         BIT      CONSTRAINT [DF_LLDetailAssign_IsHomeLL] DEFAULT ((0)) NOT NULL,
    [StartDateTime]    DATETIME CONSTRAINT [DF_LLDetailAssign_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]      DATETIME CONSTRAINT [DF_LLDetailAssign_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_LLDetailAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_LLDetailAssign_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetailUserAssign1]
    ON [dbo].[tmp_ms_xx_LLDetailAssign]([LLDetailAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailAssign] ([LLDetailAssignID], [LLID], [LLDetailID], [UserID], [IsHomeLL], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [LLDetailAssignID],
                 [LLID],
                 [LLDetailID],
                 [UserID],
                 [IsHomeLL],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailAssign]
        ORDER BY [LLDetailAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssign] OFF;
    END

DROP TABLE [dbo].[LLDetailAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailAssign]', N'LLDetailAssign';

EXECUTE sp_rename N'[dbo].[LLDetailAssign].[tmp_ms_xx_index_PK_LaborLevelDetailUserAssign1]', N'PK_LaborLevelDetailUserAssign', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetailAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetailAssign]([LLID] ASC, [LLDetailID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailAssignChargeRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailAssignChargeRate] (
    [ID]               INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailAssignID] INT      CONSTRAINT [DF_LLDetailAssignChargeRate_LLDetailAssignID] DEFAULT ((0)) NOT NULL,
    [ChargeRate]       MONEY    CONSTRAINT [DF_LLDetailAssignChargeRate_ChargeRate] DEFAULT ((0)) NOT NULL,
    [StartDateTime]    DATETIME CONSTRAINT [DF_LLDetailAssignChargeRate_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]      DATETIME CONSTRAINT [DF_LLDetailAssignChargeRate_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_LLDetailAssignChargeRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_LLDetailAssignChargeRate_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetailAssignChrgRate1]
    ON [dbo].[tmp_ms_xx_LLDetailAssignChargeRate]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailAssignChargeRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssignChargeRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailAssignChargeRate] ([ID], [LLDetailAssignID], [ChargeRate], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [LLDetailAssignID],
                 [ChargeRate],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailAssignChargeRate]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssignChargeRate] OFF;
    END

DROP TABLE [dbo].[LLDetailAssignChargeRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailAssignChargeRate]', N'LLDetailAssignChargeRate';

EXECUTE sp_rename N'[dbo].[LLDetailAssignChargeRate].[tmp_ms_xx_index_PK_LaborLevelDetailAssignChrgRate1]', N'PK_LaborLevelDetailAssignChrgRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetailAssignChargeRate]([LLDetailAssignID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailAssignPayRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailAssignPayRate] (
    [ID]               INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailAssignID] INT      CONSTRAINT [DF_LLDetailAssignPayRate_LLDetailAssignID] DEFAULT ((0)) NOT NULL,
    [PayRate]          MONEY    CONSTRAINT [DF_LLDetailAssignPayRate_PayRate] DEFAULT ((0)) NOT NULL,
    [StartDateTime]    DATETIME CONSTRAINT [DF_LLDetailAssignPayRate_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]      DATETIME CONSTRAINT [DF_LLDetailAssignPayRate_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_LLDetailAssignPayRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_LLDetailAssignPayRate_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetailAssignPayRate1]
    ON [dbo].[tmp_ms_xx_LLDetailAssignPayRate]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailAssignPayRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssignPayRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailAssignPayRate] ([ID], [LLDetailAssignID], [PayRate], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [LLDetailAssignID],
                 [PayRate],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailAssignPayRate]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailAssignPayRate] OFF;
    END

DROP TABLE [dbo].[LLDetailAssignPayRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailAssignPayRate]', N'LLDetailAssignPayRate';

EXECUTE sp_rename N'[dbo].[LLDetailAssignPayRate].[tmp_ms_xx_index_PK_LaborLevelDetailAssignPayRate1]', N'PK_LaborLevelDetailAssignPayRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetailAssignPayRate]([LLDetailAssignID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailChargeRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailChargeRate] (
    [ID]            INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailID]    INT      CONSTRAINT [DF_LLDetailChargeRate_LLDetailID] DEFAULT ((0)) NOT NULL,
    [StartDateTime] DATETIME CONSTRAINT [DF_LLDetailChargeRate_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]   DATETIME CONSTRAINT [DF_LLDetailChargeRate_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [ChargeRate]    MONEY    CONSTRAINT [DF_LLDetailChargeRate_ChargeRate] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]    INT      CONSTRAINT [DF_LLDetailChargeRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]    DATETIME CONSTRAINT [DF_LLDetailChargeRate_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetailChargeRate1]
    ON [dbo].[tmp_ms_xx_LLDetailChargeRate]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailChargeRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailChargeRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailChargeRate] ([ID], [LLDetailID], [StartDateTime], [EndDateTime], [ChargeRate], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [LLDetailID],
                 [StartDateTime],
                 [EndDateTime],
                 [ChargeRate],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailChargeRate]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailChargeRate] OFF;
    END

DROP TABLE [dbo].[LLDetailChargeRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailChargeRate]', N'LLDetailChargeRate';

EXECUTE sp_rename N'[dbo].[LLDetailChargeRate].[tmp_ms_xx_index_PK_LaborLevelDetailChargeRate1]', N'PK_LaborLevelDetailChargeRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetailChargeRate]([LLDetailID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailHardwareTerminal]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailHardwareTerminal] (
    [LLDetailHardwareTerminalID] INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailID]                 INT      NOT NULL,
    [HardwareTerminalID]         INT      NOT NULL,
    [ModifiedBy]                 INT      CONSTRAINT [DF_LLDetailHardwareTerminal_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME CONSTRAINT [DF_LLDetailHardwareTerminal_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_LLDetailHardwareTerminal1] PRIMARY KEY CLUSTERED ([LLDetailHardwareTerminalID] ASC) WITH (FILLFACTOR = 90)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailHardwareTerminal])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailHardwareTerminal] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailHardwareTerminal] ([LLDetailHardwareTerminalID], [LLDetailID], [HardwareTerminalID], [ModifiedBy], [ModifiedOn])
        SELECT   [LLDetailHardwareTerminalID],
                 [LLDetailID],
                 [HardwareTerminalID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailHardwareTerminal]
        ORDER BY [LLDetailHardwareTerminalID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailHardwareTerminal] OFF;
    END

DROP TABLE [dbo].[LLDetailHardwareTerminal];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailHardwareTerminal]', N'LLDetailHardwareTerminal';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_LLDetailHardwareTerminal1]', N'PK_LLDetailHardwareTerminal', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[LLDetailPayRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLDetailPayRate] (
    [ID]            INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailID]    INT      CONSTRAINT [DF_LLDetailPayRate_LLDetailID] DEFAULT ((0)) NOT NULL,
    [StartDateTime] DATETIME CONSTRAINT [DF_LLDetailPayRate_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]   DATETIME CONSTRAINT [DF_LLDetailPayRate_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [PayRate]       MONEY    CONSTRAINT [DF_LLDetailPayRate_PayRate] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]    INT      CONSTRAINT [DF_LLDetailPayRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]    DATETIME CONSTRAINT [DF_LLDetailPayRate_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_LaborLevelDetailPayRate1]
    ON [dbo].[tmp_ms_xx_LLDetailPayRate]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLDetailPayRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailPayRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLDetailPayRate] ([ID], [LLDetailID], [StartDateTime], [EndDateTime], [PayRate], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [LLDetailID],
                 [StartDateTime],
                 [EndDateTime],
                 [PayRate],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLDetailPayRate]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLDetailPayRate] OFF;
    END

DROP TABLE [dbo].[LLDetailPayRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLDetailPayRate]', N'LLDetailPayRate';

EXECUTE sp_rename N'[dbo].[LLDetailPayRate].[tmp_ms_xx_index_PK_LaborLevelDetailPayRate1]', N'PK_LaborLevelDetailPayRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLDetailPayRate]([LLDetailID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[LLHierarchy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_LLHierarchy] (
    [LLHierarchyID]    INT      IDENTITY (1, 1) NOT NULL,
    [LLDetailID]       INT      CONSTRAINT [DF_LLHierarchy_LLDetailID] DEFAULT ((0)) NOT NULL,
    [RefLLHierarchyID] INT      CONSTRAINT [DF_LLHierarchy_RefLLHierarchyID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_LLHierarchy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_LLHierarchy_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_LLHierarchy1] PRIMARY KEY CLUSTERED ([LLHierarchyID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[LLHierarchy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLHierarchy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_LLHierarchy] ([LLHierarchyID], [LLDetailID], [RefLLHierarchyID], [ModifiedBy], [ModifiedOn])
        SELECT   [LLHierarchyID],
                 [LLDetailID],
                 [RefLLHierarchyID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[LLHierarchy]
        ORDER BY [LLHierarchyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_LLHierarchy] OFF;
    END

DROP TABLE [dbo].[LLHierarchy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_LLHierarchy]', N'LLHierarchy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_LLHierarchy1]', N'PK_LLHierarchy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[LLHierarchy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[LLHierarchy]([LLDetailID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[MatrixTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MatrixTemplate] (
    [MatrixTemplateID] INT            IDENTITY (1, 1) NOT NULL,
    [PayTypeID]        INT            CONSTRAINT [DF_MatrixTemplate_PayTypeID] DEFAULT ((0)) NOT NULL,
    [Day1Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day1Seconds] DEFAULT ((0)) NOT NULL,
    [Day2Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day2Seconds] DEFAULT ((0)) NOT NULL,
    [Day3Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day3Seconds] DEFAULT ((0)) NOT NULL,
    [Day4Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day4Seconds] DEFAULT ((0)) NOT NULL,
    [Day5Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day5Seconds] DEFAULT ((0)) NOT NULL,
    [Day6Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day6Seconds] DEFAULT ((0)) NOT NULL,
    [Day7Seconds]      INT            CONSTRAINT [DF_MatrixTemplate_Day7Seconds] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]      INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]     INT            CONSTRAINT [DF_MatrixTemplate_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [Day1Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day1Notes] DEFAULT ('') NOT NULL,
    [Day2Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day2Notes] DEFAULT ('') NOT NULL,
    [Day3Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day3Notes] DEFAULT ('') NOT NULL,
    [Day4Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day4Notes] DEFAULT ('') NOT NULL,
    [Day5Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day5Notes] DEFAULT ('') NOT NULL,
    [Day6Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day6Notes] DEFAULT ('') NOT NULL,
    [Day7Notes]        NVARCHAR (MAX) CONSTRAINT [DF_MatrixTemplate_Day7Notes] DEFAULT ('') NOT NULL,
    [ModifiedBy]       INT            CONSTRAINT [DF_MatrixTemplate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME       CONSTRAINT [DF_MatrixTemplate_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [UserID]           INT            CONSTRAINT [DF_MatrixTemplate_UserID] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MatrixTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MatrixTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MatrixTemplate] ([MatrixTemplateID], [PayTypeID], [Day1Seconds], [Day2Seconds], [Day3Seconds], [Day4Seconds], [Day5Seconds], [Day6Seconds], [Day7Seconds], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [Day1Notes], [Day2Notes], [Day3Notes], [Day4Notes], [Day5Notes], [Day6Notes], [Day7Notes], [ModifiedBy], [ModifiedOn], [UserID])
        SELECT [MatrixTemplateID],
               [PayTypeID],
               [Day1Seconds],
               [Day2Seconds],
               [Day3Seconds],
               [Day4Seconds],
               [Day5Seconds],
               [Day6Seconds],
               [Day7Seconds],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [Day1Notes],
               [Day2Notes],
               [Day3Notes],
               [Day4Notes],
               [Day5Notes],
               [Day6Notes],
               [Day7Notes],
               [ModifiedBy],
               [ModifiedOn],
               [UserID]
        FROM   [dbo].[MatrixTemplate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MatrixTemplate] OFF;
    END

DROP TABLE [dbo].[MatrixTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MatrixTemplate]', N'MatrixTemplate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Message]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Message] (
    [MessageID]        INT            IDENTITY (1, 1) NOT NULL,
    [UserID]           INT            CONSTRAINT [DF_Message_UserID] DEFAULT ((0)) NOT NULL,
    [MessageBody]      NVARCHAR (MAX) CONSTRAINT [DF_Message_MessageBody] DEFAULT ('') NOT NULL,
    [MessageSubject]   NVARCHAR (512) CONSTRAINT [DF_Message_MessageSubject] DEFAULT ('') NOT NULL,
    [RelatedMessageID] INT            CONSTRAINT [DF_Message_RelatedMessageID] DEFAULT ((0)) NOT NULL,
    [RelationType]     INT            CONSTRAINT [DF_Message_RelationType] DEFAULT ((0)) NOT NULL,
    [IsRead]           BIT            CONSTRAINT [DF_Message_IsRead] DEFAULT ((0)) NOT NULL,
    [IsDeleted]        BIT            CONSTRAINT [DF_Message_IsDeleted] DEFAULT ((0)) NOT NULL,
    [SentOn]           DATETIME       CONSTRAINT [DF_Message_SentOn] DEFAULT ('1900-01-01') NOT NULL,
    [ExpiresOn]        DATETIME       CONSTRAINT [DF_Message_ExpiresOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Message1] PRIMARY KEY CLUSTERED ([MessageID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Message])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Message] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Message] ([MessageID], [UserID], [MessageBody], [MessageSubject], [RelatedMessageID], [RelationType], [IsRead], [IsDeleted], [SentOn], [ExpiresOn])
        SELECT   [MessageID],
                 [UserID],
                 [MessageBody],
                 [MessageSubject],
                 [RelatedMessageID],
                 [RelationType],
                 [IsRead],
                 [IsDeleted],
                 [SentOn],
                 [ExpiresOn]
        FROM     [dbo].[Message]
        ORDER BY [MessageID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Message] OFF;
    END

DROP TABLE [dbo].[Message];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Message]', N'Message';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Message1]', N'PK_Message', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Message].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Message]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[MessageDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MessageDetail] (
    [ID]               INT      IDENTITY (1, 1) NOT NULL,
    [MessageID]        INT      CONSTRAINT [DF_MessageDetails_MessageID] DEFAULT ((0)) NOT NULL,
    [UserID]           INT      CONSTRAINT [DF_MessageDetails_UserID] DEFAULT ((0)) NOT NULL,
    [RelatedMessageID] INT      CONSTRAINT [DF_MessageDetails_RelatedMessageID] DEFAULT ((0)) NOT NULL,
    [RelationType]     INT      CONSTRAINT [DF_MessageDetails_RelationType] DEFAULT ((0)) NOT NULL,
    [IsRead]           BIT      CONSTRAINT [DF_MessageDetails_IsRead] DEFAULT ((0)) NOT NULL,
    [IsDeleted]        BIT      CONSTRAINT [DF_MessageDetails_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_MessageDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_MessageDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_MessageDetail1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MessageDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MessageDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MessageDetail] ([ID], [MessageID], [UserID], [RelatedMessageID], [RelationType], [IsRead], [IsDeleted], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [MessageID],
                 [UserID],
                 [RelatedMessageID],
                 [RelationType],
                 [IsRead],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[MessageDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MessageDetail] OFF;
    END

DROP TABLE [dbo].[MessageDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MessageDetail]', N'MessageDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_MessageDetail1]', N'PK_MessageDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[MessageDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[MessageDetail]([MessageID] ASC, [UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[MissingPunchesWidgetSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MissingPunchesWidgetSetting] (
    [MissingPunchesWidgetSettingID] INT      IDENTITY (1, 1) NOT NULL,
    [ShowException]                 BIT      CONSTRAINT [DF_Table_1_ShowExcepetion] DEFAULT ((0)) NOT NULL,
    [ShowMissingPunch]              BIT      CONSTRAINT [DF_MissingPunchesWidgetSetting_ShowMissingPunch] DEFAULT ((0)) NOT NULL,
    [HideAcknowledgedException]     BIT      CONSTRAINT [DF_MissingPunchesWidgetSetting_HideAcknowledgedException] DEFAULT ((0)) NOT NULL,
    [UserID]                        INT      CONSTRAINT [DF_MissingPunchesWidgetSetting_UserID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_MissingPunchesWidgetSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_MissingPunchesWidgetSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [HomeWidgetSettingType]         INT      CONSTRAINT [DF_MissingPunchesWidgetSetting_HomeWidgetSettingType] DEFAULT ((0)) NOT NULL,
    [PreferenceID]                  INT      CONSTRAINT [DF_MissingPunchesWidgetSetting_PreferenceID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_MissingPunchesWidgetSetting1] PRIMARY KEY CLUSTERED ([MissingPunchesWidgetSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MissingPunchesWidgetSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MissingPunchesWidgetSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MissingPunchesWidgetSetting] ([MissingPunchesWidgetSettingID], [ShowException], [ShowMissingPunch], [HideAcknowledgedException], [UserID], [ModifiedBy], [ModifiedOn], [HomeWidgetSettingType], [PreferenceID])
        SELECT   [MissingPunchesWidgetSettingID],
                 [ShowException],
                 [ShowMissingPunch],
                 [HideAcknowledgedException],
                 [UserID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [HomeWidgetSettingType],
                 [PreferenceID]
        FROM     [dbo].[MissingPunchesWidgetSetting]
        ORDER BY [MissingPunchesWidgetSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MissingPunchesWidgetSetting] OFF;
    END

DROP TABLE [dbo].[MissingPunchesWidgetSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MissingPunchesWidgetSetting]', N'MissingPunchesWidgetSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_MissingPunchesWidgetSetting1]', N'PK_MissingPunchesWidgetSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[MissingPunchesWidgetSetting]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[MobileSettings]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_MobileSettings] (
    [MobileSettingsID] INT           IDENTITY (1, 1) NOT NULL,
    [UserID]           INT           NOT NULL,
    [SettingType]      VARCHAR (50)  NOT NULL,
    [SettingValue]     VARCHAR (MAX) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[MobileSettings])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MobileSettings] ON;
        INSERT INTO [dbo].[tmp_ms_xx_MobileSettings] ([MobileSettingsID], [UserID], [SettingType], [SettingValue])
        SELECT [MobileSettingsID],
               [UserID],
               [SettingType],
               [SettingValue]
        FROM   [dbo].[MobileSettings];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_MobileSettings] OFF;
    END

DROP TABLE [dbo].[MobileSettings];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_MobileSettings]', N'MobileSettings';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Modifier]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Modifier] (
    [ModifierID]        INT             IDENTITY (1, 1) NOT NULL,
    [ModifierName]      NVARCHAR (100)  CONSTRAINT [DF_Modifier_ModifierName] DEFAULT ('') NOT NULL,
    [ModifierType]      INT             CONSTRAINT [DF_Modifier_ModifierType] DEFAULT ((0)) NOT NULL,
    [ModifierParam1]    INT             CONSTRAINT [DF_Modifier_ModifierParam] DEFAULT ((0)) NOT NULL,
    [IsDeleted]         BIT             CONSTRAINT [DF_Modifier_IsDeleted] DEFAULT ((0)) NOT NULL,
    [Notes]             NVARCHAR (MAX)  CONSTRAINT [DF_Modifier_Notes] DEFAULT ('') NOT NULL,
    [ModifiedBy]        INT             CONSTRAINT [DF_Modifier_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME        CONSTRAINT [DF_Modifier_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsSystemGenerated] BIT             CONSTRAINT [DF_Modifier_IsSystemGenerated] DEFAULT ((0)) NOT NULL,
    [ModifierParam2]    DECIMAL (18, 2) CONSTRAINT [DF_Modifier_ModifierParam2] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Modifier1] PRIMARY KEY CLUSTERED ([ModifierID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Modifier])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Modifier] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Modifier] ([ModifierID], [ModifierName], [ModifierType], [ModifierParam1], [IsDeleted], [Notes], [ModifiedBy], [ModifiedOn], [IsSystemGenerated], [ModifierParam2])
        SELECT   [ModifierID],
                 [ModifierName],
                 [ModifierType],
                 [ModifierParam1],
                 [IsDeleted],
                 [Notes],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsSystemGenerated],
                 [ModifierParam2]
        FROM     [dbo].[Modifier]
        ORDER BY [ModifierID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Modifier] OFF;
    END

DROP TABLE [dbo].[Modifier];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Modifier]', N'Modifier';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Modifier1]', N'PK_Modifier', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Modifier].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Modifier]([ModifierName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NewEmpDefault]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NewEmpDefault] (
    [NewEmpDefaultID]                INT            IDENTITY (1, 1) NOT NULL,
    [PriorityNumber]                 INT            CONSTRAINT [DF_NewEmpDefault_PriorityNumber] DEFAULT ((0)) NOT NULL,
    [IsDefaultPolicy]                BIT            CONSTRAINT [DF_NewEmpDefault_IsDefaultPolicy] DEFAULT ((0)) NOT NULL,
    [NewEmpDefaultName]              NVARCHAR (50)  CONSTRAINT [DF_NewEmpDefault_NewEmpDefaultName] DEFAULT ('') NOT NULL,
    [PayrollPolicyID]                INT            CONSTRAINT [DF_NewEmpDefault_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [EmpStatus]                      INT            CONSTRAINT [DF_NewEmpDefault_EmpStatus] DEFAULT ((0)) NOT NULL,
    [CallBackPolicyID]               INT            CONSTRAINT [DF_NewEmpDefault_CallBackPolicyID] DEFAULT ((0)) NOT NULL,
    [TimeZoneKey]                    NVARCHAR (100) CONSTRAINT [DF_NewEmpDefault_TimeZoneKey] DEFAULT ('') NOT NULL,
    [HolidayListID]                  INT            CONSTRAINT [DF_NewEmpDefault_HolidayListID] DEFAULT ((0)) NOT NULL,
    [IsSalary]                       BIT            CONSTRAINT [DF_NewEmpDefault_IsSalary] DEFAULT ((0)) NOT NULL,
    [TimeOffPolicyID]                INT            CONSTRAINT [DF_NewEmpDefault_TimeOffPolicyID] DEFAULT ((0)) NOT NULL,
    [IsExempt]                       BIT            CONSTRAINT [DF_NewEmpDefault_IsExempt] DEFAULT ((0)) NOT NULL,
    [RestrictShortLunchEnabled]      BIT            CONSTRAINT [DF_NewEmpDefault_RestrictShortLunchEnabled] DEFAULT ((0)) NOT NULL,
    [RestrictToScheduleEnabled]      BIT            CONSTRAINT [DF_NewEmpDefault_RestrictToScheduleEnabled] DEFAULT ((0)) NOT NULL,
    [ShiftDiffPolicyID]              INT            CONSTRAINT [DF_NewEmpDefault_ShiftDiffPolicyID] DEFAULT ((0)) NOT NULL,
    [IPAccessPolicyID]               INT            CONSTRAINT [DF_NewEmpDefault_IPAccessPolicyID] DEFAULT ((0)) NOT NULL,
    [PasswordPolicyID]               INT            CONSTRAINT [DF_NewEmpDefault_PasswordPolicyID] DEFAULT ((0)) NOT NULL,
    [FATID]                          INT            CONSTRAINT [DF_NewEmpDefault_FATID] DEFAULT ((0)) NOT NULL,
    [ExceptionPolicyID]              INT            CONSTRAINT [DF_NewEmpDefault_ExceptionPolicyID] DEFAULT ((0)) NOT NULL,
    [ScheduleTempID]                 INT            CONSTRAINT [DF_NewEmpDefault_ScheduleTempID] DEFAULT ((0)) NOT NULL,
    [PreferenceID]                   INT            CONSTRAINT [DF_NewEmpDefault_PreferenceID] DEFAULT ((0)) NOT NULL,
    [HardwareZoneID1]                INT            CONSTRAINT [DF_NewEmpDefault_HardwareZoneID1] DEFAULT ((0)) NOT NULL,
    [HardwareZoneID2]                INT            CONSTRAINT [DF_NewEmpDefault_HardwareZoneID2] DEFAULT ((0)) NOT NULL,
    [TelePunchPolicyID]              INT            CONSTRAINT [DF_NewEmpDefault_TelephonePolicyID] DEFAULT ((0)) NOT NULL,
    [WebAccessEnabled]               BIT            CONSTRAINT [DF_NewEmpDefault_WebAccessEnabled] DEFAULT ((0)) NOT NULL,
    [WebLoginGenerationType]         INT            CONSTRAINT [DF_NewEmpDefault_WebLoginGenerationType] DEFAULT ((0)) NOT NULL,
    [WebPasswordGenerationType]      INT            CONSTRAINT [DF_NewEmpDefault_WebPasswordGenerationType] DEFAULT ((0)) NOT NULL,
    [WebPunchingEnabled]             BIT            CONSTRAINT [DF_NewEmpDefault_WebPunchingEnabled] DEFAULT ((0)) NOT NULL,
    [TimeSheetSubmitEnabled]         BIT            CONSTRAINT [DF_NewEmpDefault_TimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [WorkTimeSheetSubmitEnabled]     BIT            CONSTRAINT [DF_NewEmpDefault_WorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [NonWorkTimeSheetSubmitEnabled]  BIT            CONSTRAINT [DF_NewEmpDefault_NonWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [DefaultClockIn]                 DATETIME       CONSTRAINT [DF_NewEmpDefault_TimeSheetDefaultClockIn] DEFAULT ('1/1/1900') NOT NULL,
    [TimeSheetDefaultPaid]           BIT            CONSTRAINT [DF_NewEmpDefault_TimeSheetDefaultPaid] DEFAULT ((0)) NOT NULL,
    [TrackAttendanceOnlyEnabled]     BIT            CONSTRAINT [DF_NewEmpDefault_TrackAttendanceOnlyEnabled] DEFAULT ((0)) NOT NULL,
    [AttendanceShiftLength]          INT            CONSTRAINT [DF_NewEmpDefault_AttendanceShiftLength] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]                    INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]                   INT            CONSTRAINT [DF_NewEmpDefault_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME       CONSTRAINT [DF_NewEmpDefault_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                     INT            CONSTRAINT [DF_NewEmpDefault_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [PointsTrackingPolicyID]         INT            CONSTRAINT [DF_NewEmpDefault_PointsTrackingPolicyID] DEFAULT ((0)) NOT NULL,
    [ACAPolicyID]                    INT            CONSTRAINT [DF_NewEmpDefault_ACAPolicyID] DEFAULT ((0)) NOT NULL,
    [MobileWebPunchEnabled]          BIT            CONSTRAINT [DF_NewEmpDefault_MobileWebPunchEnabled] DEFAULT ((0)) NOT NULL,
    [EnforceIPAccessOnMobileWeb]     BIT            CONSTRAINT [DF_NewEmpDefault_EnforceIPAccessOnMobileWeb] DEFAULT ((0)) NOT NULL,
    [TrackGeolocation]               BIT            CONSTRAINT [DF_NewEmpDefault_TrackGeolocation] DEFAULT ((0)) NOT NULL,
    [DisablePunchWithoutGeolocation] BIT            CONSTRAINT [DF_NewEmpDefault_DisablePunchWithoutGeolocation] DEFAULT ((0)) NOT NULL,
    [HoursForecastPolicyID]          INT            CONSTRAINT [DF_NewEmpDefault_HoursForecastPolicyID] DEFAULT ((0)) NOT NULL,
    [CompTimePolicyID]               INT            CONSTRAINT [DF_NewEmpDefault_CompTimePolicyID] DEFAULT ((0)) NOT NULL,
    [SSOLoginOnly]                   BIT            CONSTRAINT [DF_NewEmpDefault_SSOLoginOnly] DEFAULT ((0)) NOT NULL,
    [WebKioskPunchEnabled]           BIT            CONSTRAINT [DF_NewEmpDefault_WebKioskPunchEnabled] DEFAULT ((0)) NOT NULL,
    [AllowMobTimeSheetSubmit]        BIT            CONSTRAINT [DF_NewEmpDefault_MobileTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [AllowMobWorkTimeSheetSubmit]    BIT            CONSTRAINT [DF_NewEmpDefault_MobileWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [AllowMobNonWorkTimeSheetSubmit] BIT            CONSTRAINT [DF_NewEmpDefault_MobileNonWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [MobTimeSheetDefaultPaid]        BIT            CONSTRAINT [DF_NewEmpDefault_MobileTimeSheetDefaultPaid] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_NewEmpDefault1] PRIMARY KEY CLUSTERED ([NewEmpDefaultID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NewEmpDefault])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefault] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NewEmpDefault] ([NewEmpDefaultID], [PriorityNumber], [IsDefaultPolicy], [NewEmpDefaultName], [PayrollPolicyID], [EmpStatus], [CallBackPolicyID], [TimeZoneKey], [HolidayListID], [IsSalary], [TimeOffPolicyID], [IsExempt], [RestrictShortLunchEnabled], [RestrictToScheduleEnabled], [ShiftDiffPolicyID], [IPAccessPolicyID], [PasswordPolicyID], [FATID], [ExceptionPolicyID], [ScheduleTempID], [PreferenceID], [HardwareZoneID1], [HardwareZoneID2], [TelePunchPolicyID], [WebAccessEnabled], [WebLoginGenerationType], [WebPasswordGenerationType], [WebPunchingEnabled], [TimeSheetSubmitEnabled], [WorkTimeSheetSubmitEnabled], [NonWorkTimeSheetSubmitEnabled], [DefaultClockIn], [TimeSheetDefaultPaid], [TrackAttendanceOnlyEnabled], [AttendanceShiftLength], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedOn], [ModifiedBy], [PointsTrackingPolicyID], [ACAPolicyID], [MobileWebPunchEnabled], [EnforceIPAccessOnMobileWeb], [TrackGeolocation], [DisablePunchWithoutGeolocation], [HoursForecastPolicyID], [CompTimePolicyID], [SSOLoginOnly], [WebKioskPunchEnabled], [AllowMobTimeSheetSubmit], [AllowMobWorkTimeSheetSubmit], [AllowMobNonWorkTimeSheetSubmit], [MobTimeSheetDefaultPaid])
        SELECT   [NewEmpDefaultID],
                 [PriorityNumber],
                 [IsDefaultPolicy],
                 [NewEmpDefaultName],
                 [PayrollPolicyID],
                 [EmpStatus],
                 [CallBackPolicyID],
                 [TimeZoneKey],
                 [HolidayListID],
                 [IsSalary],
                 [TimeOffPolicyID],
                 [IsExempt],
                 [RestrictShortLunchEnabled],
                 [RestrictToScheduleEnabled],
                 [ShiftDiffPolicyID],
                 [IPAccessPolicyID],
                 [PasswordPolicyID],
                 [FATID],
                 [ExceptionPolicyID],
                 [ScheduleTempID],
                 [PreferenceID],
                 [HardwareZoneID1],
                 [HardwareZoneID2],
                 [TelePunchPolicyID],
                 [WebAccessEnabled],
                 [WebLoginGenerationType],
                 [WebPasswordGenerationType],
                 [WebPunchingEnabled],
                 [TimeSheetSubmitEnabled],
                 [WorkTimeSheetSubmitEnabled],
                 [NonWorkTimeSheetSubmitEnabled],
                 [DefaultClockIn],
                 [TimeSheetDefaultPaid],
                 [TrackAttendanceOnlyEnabled],
                 [AttendanceShiftLength],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedOn],
                 [ModifiedBy],
                 [PointsTrackingPolicyID],
                 [ACAPolicyID],
                 [MobileWebPunchEnabled],
                 [EnforceIPAccessOnMobileWeb],
                 [TrackGeolocation],
                 [DisablePunchWithoutGeolocation],
                 [HoursForecastPolicyID],
                 [CompTimePolicyID],
                 [SSOLoginOnly],
                 [WebKioskPunchEnabled],
                 [AllowMobTimeSheetSubmit],
                 [AllowMobWorkTimeSheetSubmit],
                 [AllowMobNonWorkTimeSheetSubmit],
                 [MobTimeSheetDefaultPaid]
        FROM     [dbo].[NewEmpDefault]
        ORDER BY [NewEmpDefaultID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefault] OFF;
    END

DROP TABLE [dbo].[NewEmpDefault];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NewEmpDefault]', N'NewEmpDefault';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_NewEmpDefault1]', N'PK_NewEmpDefault', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[NewEmpDefault].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[NewEmpDefault]([NewEmpDefaultName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NewEmpDefaultCriteria]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NewEmpDefaultCriteria] (
    [NewEmpDefaultCriteriaID] INT      IDENTITY (1, 1) NOT NULL,
    [NewEmpDefaultID]         INT      CONSTRAINT [DF_NewEmpDefaultCriteria_NewEmpDefaultID] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldType]       INT      CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldType] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldID]         INT      CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldID] DEFAULT ((0)) NOT NULL,
    [CriteriaFieldValue]      INT      CONSTRAINT [DF_NewEmpDefaultCriteria_CriteriaFieldValue] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_NewEmpDefaultCriteria_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_NewEmpDefaultCriteria_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_NewEmployeeDefaultCriteria1]
    ON [dbo].[tmp_ms_xx_NewEmpDefaultCriteria]([NewEmpDefaultCriteriaID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NewEmpDefaultCriteria])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultCriteria] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NewEmpDefaultCriteria] ([NewEmpDefaultCriteriaID], [NewEmpDefaultID], [CriteriaFieldType], [CriteriaFieldID], [CriteriaFieldValue], [ModifiedBy], [ModifiedOn])
        SELECT   [NewEmpDefaultCriteriaID],
                 [NewEmpDefaultID],
                 [CriteriaFieldType],
                 [CriteriaFieldID],
                 [CriteriaFieldValue],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[NewEmpDefaultCriteria]
        ORDER BY [NewEmpDefaultCriteriaID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultCriteria] OFF;
    END

DROP TABLE [dbo].[NewEmpDefaultCriteria];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NewEmpDefaultCriteria]', N'NewEmpDefaultCriteria';

EXECUTE sp_rename N'[dbo].[NewEmpDefaultCriteria].[tmp_ms_xx_index_PK_NewEmployeeDefaultCriteria1]', N'PK_NewEmployeeDefaultCriteria', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[NewEmpDefaultCriteria]([NewEmpDefaultID] ASC, [CriteriaFieldType] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NewEmpDefaultTimeOffHour]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour] (
    [NewEmpDefaultTimeOffHourID] INT      IDENTITY (1, 1) NOT NULL,
    [PayTypeID]                  INT      NOT NULL,
    [NewEmpDefaultID]            INT      CONSTRAINT [DF_NewEmpDefaultTimeOffHour_NewEmpDefaultID] DEFAULT ((0)) NOT NULL,
    [InitialSecs]                INT      CONSTRAINT [DF_NewEmpDefaultTimeOffHour_InitialSecs] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                 INT      CONSTRAINT [DF_NewEmpDefaultTimeOffHour_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME CONSTRAINT [DF_NewEmpDefaultTimeOffHour_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_NewEmployeeDfltBenefitHour1]
    ON [dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour]([NewEmpDefaultTimeOffHourID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NewEmpDefaultTimeOffHour])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour] ([NewEmpDefaultTimeOffHourID], [PayTypeID], [NewEmpDefaultID], [InitialSecs], [ModifiedBy], [ModifiedOn])
        SELECT   [NewEmpDefaultTimeOffHourID],
                 [PayTypeID],
                 [NewEmpDefaultID],
                 [InitialSecs],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[NewEmpDefaultTimeOffHour]
        ORDER BY [NewEmpDefaultTimeOffHourID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour] OFF;
    END

DROP TABLE [dbo].[NewEmpDefaultTimeOffHour];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NewEmpDefaultTimeOffHour]', N'NewEmpDefaultTimeOffHour';

EXECUTE sp_rename N'[dbo].[NewEmpDefaultTimeOffHour].[tmp_ms_xx_index_PK_NewEmployeeDfltBenefitHour1]', N'PK_NewEmployeeDfltBenefitHour', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[NewEmpDefaultTimeOffHour]([NewEmpDefaultID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NewEmpDefaultUserGroup]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NewEmpDefaultUserGroup] (
    [NewEmpDefaultUserGroupID] INT      IDENTITY (1, 1) NOT NULL,
    [NewEmpDefaultID]          INT      CONSTRAINT [DF_NewEmpDefaultUserGroup_NewEmpDefaultID] DEFAULT ((0)) NOT NULL,
    [UserGroupID]              INT      CONSTRAINT [DF_NewEmpDefaultUserGroup_UserGroupID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_NewEmpDefaultUserGroup_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_NewEmpDefaultUserGroup_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_NewEmployeeDefaultUserGroup1]
    ON [dbo].[tmp_ms_xx_NewEmpDefaultUserGroup]([NewEmpDefaultUserGroupID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NewEmpDefaultUserGroup])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultUserGroup] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NewEmpDefaultUserGroup] ([NewEmpDefaultUserGroupID], [NewEmpDefaultID], [UserGroupID], [ModifiedBy], [ModifiedOn])
        SELECT   [NewEmpDefaultUserGroupID],
                 [NewEmpDefaultID],
                 [UserGroupID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[NewEmpDefaultUserGroup]
        ORDER BY [NewEmpDefaultUserGroupID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultUserGroup] OFF;
    END

DROP TABLE [dbo].[NewEmpDefaultUserGroup];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NewEmpDefaultUserGroup]', N'NewEmpDefaultUserGroup';

EXECUTE sp_rename N'[dbo].[NewEmpDefaultUserGroup].[tmp_ms_xx_index_PK_NewEmployeeDefaultUserGroup1]', N'PK_NewEmployeeDefaultUserGroup', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[NewEmpDefaultUserGroup]([NewEmpDefaultID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NewEmpDefaultUserGroupMgr]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr] (
    [NewEmpDefaultUserGroupMgrID] INT      IDENTITY (1, 1) NOT NULL,
    [NewEmpDefaultID]             INT      CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_NewEmpDefaultID] DEFAULT ((0)) NOT NULL,
    [UserGroupID]                 INT      CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_UserGroupID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                  INT      CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                  DATETIME CONSTRAINT [DF_NewEmpDefaultUserGroupMgr_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_NewEmployeeDfltUsrGrpManager1]
    ON [dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr]([NewEmpDefaultUserGroupMgrID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NewEmpDefaultUserGroupMgr])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr] ([NewEmpDefaultUserGroupMgrID], [NewEmpDefaultID], [UserGroupID], [ModifiedBy], [ModifiedOn])
        SELECT   [NewEmpDefaultUserGroupMgrID],
                 [NewEmpDefaultID],
                 [UserGroupID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[NewEmpDefaultUserGroupMgr]
        ORDER BY [NewEmpDefaultUserGroupMgrID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr] OFF;
    END

DROP TABLE [dbo].[NewEmpDefaultUserGroupMgr];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NewEmpDefaultUserGroupMgr]', N'NewEmpDefaultUserGroupMgr';

EXECUTE sp_rename N'[dbo].[NewEmpDefaultUserGroupMgr].[tmp_ms_xx_index_PK_NewEmployeeDfltUsrGrpManager1]', N'PK_NewEmployeeDfltUsrGrpManager', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[NewEmpDefaultUserGroupMgr]([NewEmpDefaultID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[NotificationDateRangeSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_NotificationDateRangeSetting] (
    [NotificationDateRangeSettingID] INT      IDENTITY (1, 1) NOT NULL,
    [NotificationType]               INT      CONSTRAINT [DF_NotificationDateRangeSetting_NotificationType] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyID]                INT      CONSTRAINT [DF_NotificationDateRangeSetting_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [IsCurrentOptionEnabled]         BIT      CONSTRAINT [DF_NotificationDateRangeSetting_IsCurrentOptionEnabled] DEFAULT ((0)) NOT NULL,
    [IsPreviousOptionEnabled]        BIT      CONSTRAINT [DF_NotificationDateRangeSetting_IsPreviousOptionEnabled] DEFAULT ((0)) NOT NULL,
    [IsNextOptionEnabled]            BIT      CONSTRAINT [DF_NotificationDateRangeSetting_IsNextOptionEnabled] DEFAULT ((0)) NOT NULL,
    [PreviousCount]                  INT      CONSTRAINT [DF_NotificationDateRangeSetting_PreviousCount] DEFAULT ((0)) NOT NULL,
    [NextCount]                      INT      CONSTRAINT [DF_NotificationDateRangeSetting_NextCount] DEFAULT ((0)) NOT NULL,
    [CurrentOptionType]              INT      CONSTRAINT [DF_NotificationDateRangeSetting_CurrentOptionType] DEFAULT ((0)) NOT NULL,
    [PreviousOptionType]             INT      CONSTRAINT [DF_NotificationDateRangeSetting_PreviousOptionType] DEFAULT ((0)) NOT NULL,
    [NextOptionType]                 INT      CONSTRAINT [DF_NotificationDateRangeSetting_NextOptionType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT      CONSTRAINT [DF_NotificationDateRangeSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME CONSTRAINT [DF_NotificationDateRangeSetting_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_NotificationDateRangeSetting1] PRIMARY KEY CLUSTERED ([NotificationDateRangeSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[NotificationDateRangeSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NotificationDateRangeSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_NotificationDateRangeSetting] ([NotificationDateRangeSettingID], [NotificationType], [PayrollPolicyID], [IsCurrentOptionEnabled], [IsPreviousOptionEnabled], [IsNextOptionEnabled], [PreviousCount], [NextCount], [CurrentOptionType], [PreviousOptionType], [NextOptionType], [ModifiedBy], [ModifiedOn])
        SELECT   [NotificationDateRangeSettingID],
                 [NotificationType],
                 [PayrollPolicyID],
                 [IsCurrentOptionEnabled],
                 [IsPreviousOptionEnabled],
                 [IsNextOptionEnabled],
                 [PreviousCount],
                 [NextCount],
                 [CurrentOptionType],
                 [PreviousOptionType],
                 [NextOptionType],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[NotificationDateRangeSetting]
        ORDER BY [NotificationDateRangeSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_NotificationDateRangeSetting] OFF;
    END

DROP TABLE [dbo].[NotificationDateRangeSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_NotificationDateRangeSetting]', N'NotificationDateRangeSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_NotificationDateRangeSetting1]', N'PK_NotificationDateRangeSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[OvertimeRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_OvertimeRule] (
    [ID]                  INT           IDENTITY (1, 1) NOT NULL,
    [OvertimeRuleID]      INT           CONSTRAINT [DF_OvertimeRule_OvertimeRuleID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]       DATETIME      CONSTRAINT [DF_OvertimeRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]         DATETIME      CONSTRAINT [DF_OvertimeRule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]           BIT           CONSTRAINT [DF_OvertimeRule_IsDeleted] DEFAULT ((0)) NOT NULL,
    [OvertimeRuleName]    NVARCHAR (50) CONSTRAINT [DF_OvertimeRule_OvertimeRuleName] DEFAULT ('') NOT NULL,
    [OvertimeRuleType]    INT           CONSTRAINT [DF_OvertimeRule_OvertimeRuleType] DEFAULT ((0)) NOT NULL,
    [NumberOfDays]        INT           CONSTRAINT [DF_OvertimeRule_NumberOfDays] DEFAULT ((0)) NOT NULL,
    [DayStartType]        INT           CONSTRAINT [DF_OvertimeRule_DayStartType] DEFAULT ((0)) NOT NULL,
    [IsHoliday]           BIT           CONSTRAINT [DF_OvertimeRule_IsHoliday] DEFAULT ((0)) NOT NULL,
    [IsOutsideSchedule]   BIT           CONSTRAINT [DF_OvertimeRule_IsOutsideSchedule] DEFAULT ((0)) NOT NULL,
    [OutsideScheduleType] INT           CONSTRAINT [DF_OvertimeRule_OutsideScheduleType] DEFAULT ((0)) NOT NULL,
    [IsUnscheduled]       BIT           CONSTRAINT [DF_OvertimeRule_IsUnscheduled] DEFAULT ((0)) NOT NULL,
    [DayOfWeek]           INT           CONSTRAINT [DF_OvertimeRule_DayOfWeek] DEFAULT ((0)) NOT NULL,
    [DaysFrom]            DATETIME      CONSTRAINT [DF_OvertimeRule_DaysFrom] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartTime]           DATETIME      CONSTRAINT [DF_OvertimeRule_StartTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndTime]             DATETIME      CONSTRAINT [DF_OvertimeRule_EndTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Threshold]           INT           CONSTRAINT [DF_OvertimeRule_Threshold] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_OvertimeRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_OvertimeRule_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_OvertimeRule1]
    ON [dbo].[tmp_ms_xx_OvertimeRule]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[OvertimeRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_OvertimeRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_OvertimeRule] ([ID], [OvertimeRuleID], [StartDateTime], [EndDateTime], [IsDeleted], [OvertimeRuleName], [OvertimeRuleType], [NumberOfDays], [DayStartType], [IsHoliday], [IsOutsideSchedule], [OutsideScheduleType], [IsUnscheduled], [DayOfWeek], [DaysFrom], [StartTime], [EndTime], [Threshold], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [OvertimeRuleID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [OvertimeRuleName],
                 [OvertimeRuleType],
                 [NumberOfDays],
                 [DayStartType],
                 [IsHoliday],
                 [IsOutsideSchedule],
                 [OutsideScheduleType],
                 [IsUnscheduled],
                 [DayOfWeek],
                 [DaysFrom],
                 [StartTime],
                 [EndTime],
                 [Threshold],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[OvertimeRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_OvertimeRule] OFF;
    END

DROP TABLE [dbo].[OvertimeRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_OvertimeRule]', N'OvertimeRule';

EXECUTE sp_rename N'[dbo].[OvertimeRule].[tmp_ms_xx_index_PK_OvertimeRule1]', N'PK_OvertimeRule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[OvertimeRule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[OvertimeRule]([OvertimeRuleID] ASC, [StartDateTime] ASC, [EndDateTime] ASC, [OvertimeRuleName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PasswordPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PasswordPolicy] (
    [PasswordPolicyID]            INT           IDENTITY (1, 1) NOT NULL,
    [PasswordPolicyName]          NVARCHAR (50) CONSTRAINT [DF_PasswordPolicy_PasswordPolicyName] DEFAULT ('') NOT NULL,
    [MinCharacters]               INT           CONSTRAINT [DF_PasswordPolicy_MinCharacters] DEFAULT ((0)) NOT NULL,
    [MinUpperCaseCharacters]      INT           CONSTRAINT [DF_PasswordPolicy_MinUpperCaseCharacters] DEFAULT ((0)) NOT NULL,
    [MinLowerCaseCharacters]      INT           CONSTRAINT [DF_PasswordPolicy_MinLowerCaseCharacters] DEFAULT ((0)) NOT NULL,
    [MinNumericSpecialCharacters] INT           CONSTRAINT [DF_PasswordPolicy_MinNumericSpecialCharacters] DEFAULT ((0)) NOT NULL,
    [ProhibitUserData]            BIT           CONSTRAINT [DF_PasswordPolicy_ProhibitUserData] DEFAULT ((0)) NOT NULL,
    [ExpiresAfterDays]            INT           CONSTRAINT [DF_PasswordPolicy_ExpiresAfterDays] DEFAULT ((0)) NOT NULL,
    [MaxPasswordAttempts]         INT           CONSTRAINT [DF_PasswordPolicy_MaxPasswordAttempts] DEFAULT ((0)) NOT NULL,
    [PasswordLockoutTime]         INT           CONSTRAINT [DF_PasswordPolicy_PasswordLockoutTime] DEFAULT ((0)) NOT NULL,
    [AllowPasswordReuse]          BIT           CONSTRAINT [DF_PasswordPolicy_AllowPasswordReuse] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                  INT           CONSTRAINT [DF_PasswordPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                  DATETIME      CONSTRAINT [DF_PasswordPolicy_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [MinSpecialCharacters]        INT           CONSTRAINT [DF_PasswordPolicy_MinSpecialCharacters] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PasswordPolicy1]
    ON [dbo].[tmp_ms_xx_PasswordPolicy]([PasswordPolicyID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PasswordPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PasswordPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PasswordPolicy] ([PasswordPolicyID], [PasswordPolicyName], [MinCharacters], [MinUpperCaseCharacters], [MinLowerCaseCharacters], [MinNumericSpecialCharacters], [ProhibitUserData], [ExpiresAfterDays], [MaxPasswordAttempts], [PasswordLockoutTime], [AllowPasswordReuse], [ModifiedBy], [ModifiedOn], [MinSpecialCharacters])
        SELECT   [PasswordPolicyID],
                 [PasswordPolicyName],
                 [MinCharacters],
                 [MinUpperCaseCharacters],
                 [MinLowerCaseCharacters],
                 [MinNumericSpecialCharacters],
                 [ProhibitUserData],
                 [ExpiresAfterDays],
                 [MaxPasswordAttempts],
                 [PasswordLockoutTime],
                 [AllowPasswordReuse],
                 [ModifiedBy],
                 [ModifiedOn],
                 [MinSpecialCharacters]
        FROM     [dbo].[PasswordPolicy]
        ORDER BY [PasswordPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PasswordPolicy] OFF;
    END

DROP TABLE [dbo].[PasswordPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PasswordPolicy]', N'PasswordPolicy';

EXECUTE sp_rename N'[dbo].[PasswordPolicy].[tmp_ms_xx_index_PK_PasswordPolicy1]', N'PK_PasswordPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PasswordPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PasswordPolicy]([PasswordPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayAdjustment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayAdjustment] (
    [ID]                INT           IDENTITY (1, 1) NOT NULL,
    [PayAdjustmentID]   INT           CONSTRAINT [DF_PayAdjustment_PayAdjustmentID] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentName] NVARCHAR (50) CONSTRAINT [DF_PayAdjustment_PayAdjustmentName] DEFAULT ('') NOT NULL,
    [PayAdjustmentCode] NVARCHAR (50) CONSTRAINT [DF_PayAdjustment_PayAdjustmentCode] DEFAULT ('') NOT NULL,
    [AllowEmpEntry]     BIT           CONSTRAINT [DF_PayAdjustment_AllowEmpEntry] DEFAULT ((0)) NOT NULL,
    [IsDeduction]       BIT           CONSTRAINT [DF_PayAdjustment_IsDeduction] DEFAULT ((0)) NOT NULL,
    [UnitLabel]         NVARCHAR (50) CONSTRAINT [DF_PayAdjustment_UnitLabel] DEFAULT ('') NOT NULL,
    [UseFormula]        BIT           CONSTRAINT [DF_PayAdjustment_UseFormula] DEFAULT ((0)) NOT NULL,
    [OperatorType]      INT           CONSTRAINT [DF_PayAdjustment_OperatorType] DEFAULT ((0)) NOT NULL,
    [UseEmpPayRate]     BIT           CONSTRAINT [DF_PayAdjustment_UseEmpPayRate] DEFAULT ((0)) NOT NULL,
    [PayPerUnit]        MONEY         CONSTRAINT [DF_PayAdjustment_PayPerUnit] DEFAULT ((0)) NOT NULL,
    [IncludeInWAOT]     BIT           CONSTRAINT [DF_PayAdjustment_IncludeInWAOT] DEFAULT ((0)) NOT NULL,
    [StartDateTime]     DATETIME      CONSTRAINT [DF_PayAdjustment_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]       DATETIME      CONSTRAINT [DF_PayAdjustment_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [IsDeleted]         BIT           CONSTRAINT [DF_PayAdjustment_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT           CONSTRAINT [DF_PayAdjustment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME      CONSTRAINT [DF_PayAdjustment_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [PayAdjustmentType] INT           CONSTRAINT [DF_PayAdjustment_PayAdjustmentType] DEFAULT ((0)) NOT NULL,
    [PayrollUniqueID]   BIGINT        CONSTRAINT [DF_PayAdjustment_PayrollUniqueID] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayAdjustment1]
    ON [dbo].[tmp_ms_xx_PayAdjustment]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayAdjustment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayAdjustment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayAdjustment] ([ID], [PayAdjustmentID], [PayAdjustmentName], [PayAdjustmentCode], [AllowEmpEntry], [IsDeduction], [UnitLabel], [UseFormula], [OperatorType], [UseEmpPayRate], [PayPerUnit], [IncludeInWAOT], [StartDateTime], [EndDateTime], [IsDeleted], [ModifiedBy], [ModifiedOn], [PayAdjustmentType], [PayrollUniqueID])
        SELECT   [ID],
                 [PayAdjustmentID],
                 [PayAdjustmentName],
                 [PayAdjustmentCode],
                 [AllowEmpEntry],
                 [IsDeduction],
                 [UnitLabel],
                 [UseFormula],
                 [OperatorType],
                 [UseEmpPayRate],
                 [PayPerUnit],
                 [IncludeInWAOT],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn],
                 [PayAdjustmentType],
                 [PayrollUniqueID]
        FROM     [dbo].[PayAdjustment]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayAdjustment] OFF;
    END

DROP TABLE [dbo].[PayAdjustment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayAdjustment]', N'PayAdjustment';

EXECUTE sp_rename N'[dbo].[PayAdjustment].[tmp_ms_xx_index_PK_PayAdjustment1]', N'PK_PayAdjustment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayAdjustment].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayAdjustment]([PayAdjustmentID] ASC, [PayAdjustmentName] ASC, [PayAdjustmentCode] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayAdjustmentData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayAdjustmentData] (
    [PayAdjustmentDataID]     INT             IDENTITY (1, 1) NOT NULL,
    [PayAdjustmentID]         INT             CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentID] DEFAULT ((0)) NOT NULL,
    [UserID]                  INT             CONSTRAINT [DF_PayAdjustmentData_UserID] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentDate]       DATETIME        CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDate] DEFAULT ('1/1/1900') NOT NULL,
    [Unit]                    DECIMAL (18, 4) CONSTRAINT [DF_PayAdjustmentData_Unit] DEFAULT ((0)) NOT NULL,
    [PayPerUnit]              MONEY           CONSTRAINT [DF_PayAdjustmentData_PayPerUnit] DEFAULT ((0)) NOT NULL,
    [Amount]                  MONEY           CONSTRAINT [DF_PayAdjustmentData_Amount] DEFAULT ((0)) NOT NULL,
    [Notes]                   NVARCHAR (MAX)  CONSTRAINT [DF_PayAdjustmentData_Notes] DEFAULT ('') NOT NULL,
    [IsModified]              BIT             CONSTRAINT [DF_PayAdjustmentData_IsModified] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]             INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]            INT             CONSTRAINT [DF_PayAdjustmentData_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [MgrApproved]             BIT             CONSTRAINT [DF_PayAdjustmentData_MgrApproved] DEFAULT ((0)) NOT NULL,
    [EmpApproved]             BIT             CONSTRAINT [DF_PayAdjustmentData_EmpApproved] DEFAULT ((0)) NOT NULL,
    [ClosedType]              INT             CONSTRAINT [DF_PayAdjustmentData_IsClosed] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT             CONSTRAINT [DF_PayAdjustmentData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME        CONSTRAINT [DF_PayAdjustmentData_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [TimeSlicePreID]          INT             CONSTRAINT [DF_PayAdjustmentData_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentDataType]   INT             CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDataType] DEFAULT ((0)) NOT NULL,
    [PayAdjustmentDataSource] INT             CONSTRAINT [DF_PayAdjustmentData_PayAdjustmentDataSource] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayAdjustmentData1]
    ON [dbo].[tmp_ms_xx_PayAdjustmentData]([PayAdjustmentDataID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayAdjustmentData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayAdjustmentData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayAdjustmentData] ([PayAdjustmentDataID], [PayAdjustmentID], [UserID], [PayAdjustmentDate], [Unit], [PayPerUnit], [Amount], [Notes], [IsModified], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [MgrApproved], [EmpApproved], [ClosedType], [ModifiedBy], [ModifiedOn], [TimeSlicePreID], [PayAdjustmentDataType], [PayAdjustmentDataSource])
        SELECT   [PayAdjustmentDataID],
                 [PayAdjustmentID],
                 [UserID],
                 [PayAdjustmentDate],
                 [Unit],
                 [PayPerUnit],
                 [Amount],
                 [Notes],
                 [IsModified],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [MgrApproved],
                 [EmpApproved],
                 [ClosedType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [TimeSlicePreID],
                 [PayAdjustmentDataType],
                 [PayAdjustmentDataSource]
        FROM     [dbo].[PayAdjustmentData]
        ORDER BY [PayAdjustmentDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayAdjustmentData] OFF;
    END

DROP TABLE [dbo].[PayAdjustmentData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayAdjustmentData]', N'PayAdjustmentData';

EXECUTE sp_rename N'[dbo].[PayAdjustmentData].[tmp_ms_xx_index_PK_PayAdjustmentData1]', N'PK_PayAdjustmentData', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayAdjustmentData]([PayAdjustmentID] ASC, [UserID] ASC, [PayAdjustmentDate] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PaychexRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PaychexRate] (
    [PaychexRateID]   INT       IDENTITY (1, 1) NOT NULL,
    [PaychexRateHash] CHAR (40) CONSTRAINT [DF_PaychexRate_PaychexRateHash] DEFAULT ('') NOT NULL,
    [UserID]          INT       CONSTRAINT [DF_PaychexRate_UserID] DEFAULT ((0)) NOT NULL,
    [RateNumber]      INT       CONSTRAINT [DF_PaychexRate_RateNumber] DEFAULT ((0)) NOT NULL,
    [PayRate]         MONEY     CONSTRAINT [DF_PaychexRate_PayRate] DEFAULT ((0)) NOT NULL,
    [StartDateTime]   DATETIME  CONSTRAINT [DF_PaychexRate_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]     DATETIME  CONSTRAINT [DF_PaychexRate_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]      INT       CONSTRAINT [DF_PaychexRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME  CONSTRAINT [DF_PaychexRate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PaychexRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PaychexRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PaychexRate] ([PaychexRateID], [PaychexRateHash], [UserID], [RateNumber], [PayRate], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT [PaychexRateID],
               [PaychexRateHash],
               [UserID],
               [RateNumber],
               [PayRate],
               [StartDateTime],
               [EndDateTime],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[PaychexRate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PaychexRate] OFF;
    END

DROP TABLE [dbo].[PaychexRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PaychexRate]', N'PaychexRate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayComponent]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayComponent] (
    [PayComponentID]  INT           IDENTITY (1, 1) NOT NULL,
    [Code]            VARCHAR (50)  DEFAULT ((0)) NOT NULL,
    [StandardName]    VARCHAR (MAX) DEFAULT ('') NOT NULL,
    [CustomName]      VARCHAR (20)  NULL,
    [PayrollUniqueID] BIGINT        DEFAULT ((0)) NOT NULL,
    [CustomPayrollID] BIGINT        NULL,
    [StartDate]       DATETIME      DEFAULT ('1/1/1900') NOT NULL,
    [EndDate]         DATETIME      DEFAULT ('1/1/1900') NOT NULL,
    [Action]          INT           NULL,
    [IsPayAdjustment] BIT           DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PayComponent1] PRIMARY KEY CLUSTERED ([PayComponentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayComponent])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayComponent] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayComponent] ([PayComponentID], [Code], [StandardName], [CustomName], [PayrollUniqueID], [CustomPayrollID], [StartDate], [EndDate], [Action], [IsPayAdjustment])
        SELECT   [PayComponentID],
                 [Code],
                 [StandardName],
                 [CustomName],
                 [PayrollUniqueID],
                 [CustomPayrollID],
                 [StartDate],
                 [EndDate],
                 [Action],
                 [IsPayAdjustment]
        FROM     [dbo].[PayComponent]
        ORDER BY [PayComponentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayComponent] OFF;
    END

DROP TABLE [dbo].[PayComponent];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayComponent]', N'PayComponent';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PayComponent1]', N'PK_PayComponent', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayrollCheckDate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollCheckDate] (
    [PayrollCheckDateID] INT           IDENTITY (1, 1) NOT NULL,
    [CheckDate]          DATETIME      NOT NULL,
    [PeriodStartDate]    DATETIME      NOT NULL,
    [PeriodEndDate]      DATETIME      NOT NULL,
    [PeriodDesc]         VARCHAR (255) NOT NULL,
    [PayPeriodID]        BIGINT        NOT NULL,
    [CurrentCheckStatus] VARCHAR (50)  DEFAULT ('') NOT NULL,
    [CheckPayFrequency]  VARCHAR (50)  DEFAULT ('') NULL,
    [IsPayPeriodActive]  BIT           DEFAULT 0 NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollCheckDate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollCheckDate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollCheckDate] ([PayrollCheckDateID], [CheckDate], [PeriodStartDate], [PeriodEndDate], [PeriodDesc], [PayPeriodID], [CurrentCheckStatus], [CheckPayFrequency], [IsPayPeriodActive])
        SELECT [PayrollCheckDateID],
               [CheckDate],
               [PeriodStartDate],
               [PeriodEndDate],
               [PeriodDesc],
               [PayPeriodID],
               [CurrentCheckStatus],
               [CheckPayFrequency],
               [IsPayPeriodActive]
        FROM   [dbo].[PayrollCheckDate];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollCheckDate] OFF;
    END

DROP TABLE [dbo].[PayrollCheckDate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollCheckDate]', N'PayrollCheckDate';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicy] (
    [ID]                             INT             IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyID]                INT             NOT NULL,
    [StartDateTime]                  DATETIME        CONSTRAINT [DF_PayrollPolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME        CONSTRAINT [DF_PayrollPolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]                      BIT             CONSTRAINT [DF_PayrollPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyName]              NVARCHAR (50)   CONSTRAINT [DF_PayrollPolicy_PayrollPolicyName] DEFAULT ('') NOT NULL,
    [WorkWeekStartDay]               INT             CONSTRAINT [DF_PayrollPolicy_WorkWeekStartDay] DEFAULT ((0)) NOT NULL,
    [PayPeriodType]                  INT             CONSTRAINT [DF_PayrollPolicy_PayPeriodType] DEFAULT ((0)) NOT NULL,
    [PayPeriodSemiMonthlyDay]        INT             CONSTRAINT [DF_PayrollPolicy_PayPeriodSemiMonthlyDay] DEFAULT ((0)) NOT NULL,
    [PayPeriodMonthlyDay]            INT             CONSTRAINT [DF_PayrollPolicy_PayPeriodMonthlyDay] DEFAULT ((0)) NOT NULL,
    [GraceMaxSecs]                   INT             CONSTRAINT [DF_PayrollPolicy_GraceMaxSecs] DEFAULT ((0)) NOT NULL,
    [RoundInBeforeSchedule]          INT             CONSTRAINT [DF_PayrollPolicy_RoundInBeforeSchedule] DEFAULT ((0)) NOT NULL,
    [RoundInAfterSchedule]           INT             CONSTRAINT [DF_PayrollPolicy_RoundInAfterSchedule] DEFAULT ((0)) NOT NULL,
    [RoundOutBeforeSchedule]         INT             CONSTRAINT [DF_PayrollPolicy_RoundOutBeforeSchedule] DEFAULT ((0)) NOT NULL,
    [RoundOutAfterSchedule]          INT             CONSTRAINT [DF_PayrollPolicy_RoundOutAfterSchedule] DEFAULT ((0)) NOT NULL,
    [RoundInType]                    INT             CONSTRAINT [DF_PayrollPolicy_RoundInType] DEFAULT ((0)) NOT NULL,
    [RoundInTimesTo]                 INT             CONSTRAINT [DF_PayrollPolicy_RoundInTimesTo] DEFAULT ((0)) NOT NULL,
    [RoundOutType]                   INT             CONSTRAINT [DF_PayrollPolicy_RoundOutType] DEFAULT ((0)) NOT NULL,
    [RoundOutTimesTo]                INT             CONSTRAINT [DF_PayrollPolicy_RoundOutTimesTo] DEFAULT ((0)) NOT NULL,
    [RoundTransferType]              INT             CONSTRAINT [DF_PayrollPolicy_RoundTransferType] DEFAULT ((0)) NOT NULL,
    [RoundTransferTimesTo]           INT             CONSTRAINT [DF_PayrollPolicy_RoundTransferTimesTo] DEFAULT ((0)) NOT NULL,
    [HolEnabled]                     BIT             CONSTRAINT [DF_PayrollPolicy_HolEnabled] DEFAULT ((0)) NOT NULL,
    [HolPayTypeID]                   INT             CONSTRAINT [DF_PayrollPolicy_HolPayTypeID] DEFAULT ((0)) NOT NULL,
    [HolMinDaysOfEmployment]         INT             CONSTRAINT [DF_PayrollPolicy_HolMinDaysOfEmployment] DEFAULT ((0)) NOT NULL,
    [HolSchedToWork]                 BIT             CONSTRAINT [DF_PayrollPolicy_HolSchedToWork] DEFAULT ((0)) NOT NULL,
    [HolMustWorkSchedIfCompanyWork]  BIT             CONSTRAINT [DF_PayrollPolicy_HolMustWorkSchedIfCompanyWork] DEFAULT ((0)) NOT NULL,
    [HolQualifyOnTimeWorkRequired]   BIT             CONSTRAINT [DF_PayrollPolicy_HolQualifyOnTimeWorkRequired] DEFAULT ((0)) NOT NULL,
    [HolQualifyOnTimeWorkType]       INT             CONSTRAINT [DF_PayrollPolicy_HolQualifyOnTimeWorkType] DEFAULT ((0)) NOT NULL,
    [HolQualifyRequiredToWorkType]   INT             CONSTRAINT [DF_PayrollPolicy_HolQualifyRequiredToWorkType] DEFAULT ((0)) NOT NULL,
    [HolMinSecsDayBefore]            INT             CONSTRAINT [DF_PayrollPolicy_HolMinSecsDayBefore] DEFAULT ((0)) NOT NULL,
    [HolMinSecsDayAfter]             INT             CONSTRAINT [DF_PayrollPolicy_HolMinSecsDayAfter] DEFAULT ((0)) NOT NULL,
    [HolApplyOnNextDay]              BIT             CONSTRAINT [DF_PayrollPolicy_HolApplyOnNextDay] DEFAULT ((0)) NOT NULL,
    [HolApplyTowardsOvertime]        BIT             CONSTRAINT [DF_PayrollPolicy_HolApplyTowardsOvertime] DEFAULT ((0)) NOT NULL,
    [HolUnworkType]                  INT             CONSTRAINT [DF_PayrollPolicy_HolUnworkType] DEFAULT ((0)) NOT NULL,
    [HolUnworkSecsToAdd]             INT             CONSTRAINT [DF_PayrollPolicy_HolUnworkSecsToAdd] DEFAULT ((0)) NOT NULL,
    [HolUnworkLunchSecsToSubtract]   INT             CONSTRAINT [DF_PayrollPolicy_HolUnworkLunchSecsToSubtract] DEFAULT ((0)) NOT NULL,
    [HolWorkType]                    INT             CONSTRAINT [DF_PayrollPolicy_HolWorkType] DEFAULT ((0)) NOT NULL,
    [HolWorkSecsToAdd]               INT             CONSTRAINT [DF_PayrollPolicy_HolWorkSecsToAdd] DEFAULT ((0)) NOT NULL,
    [HolWorkLunchSecsToSubtract]     INT             CONSTRAINT [DF_PayrollPolicy_HolWorkLunchSecsToSubtract] DEFAULT ((0)) NOT NULL,
    [HolWorkHoursFactorEnabled]      BIT             CONSTRAINT [DF_PayrollPolicy_HolWorkHoursFactorEnabled] DEFAULT ((0)) NOT NULL,
    [HolWorkHoursFactor]             DECIMAL (18, 4) CONSTRAINT [DF_PayrollPolicy_HolWorkHoursFactor] DEFAULT ((0)) NOT NULL,
    [LunchType]                      INT             CONSTRAINT [DF_PayrollPolicy_LunchType] DEFAULT ((0)) NOT NULL,
    [LunchRoundInType]               INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundInType] DEFAULT ((0)) NOT NULL,
    [LunchRoundInSecs]               INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundInSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundOutType]              INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundOutType] DEFAULT ((0)) NOT NULL,
    [LunchRoundOutSecs]              INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundOutSecs] DEFAULT ((0)) NOT NULL,
    [LunchDurationRoundingEnabled]   BIT             CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingEnabled] DEFAULT ((0)) NOT NULL,
    [LunchDurationRoundingType]      INT             CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingType] DEFAULT ((0)) NOT NULL,
    [LunchDurationRoundingSecs]      INT             CONSTRAINT [DF_PayrollPolicy_LunchDurationRoundingSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundShortDownEnabled]     BIT             CONSTRAINT [DF_PayrollPolicy_LunchRoundShortDownEnabled] DEFAULT ((0)) NOT NULL,
    [LunchRoundShortDownToSecs]      INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundShortDownToSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundDownLessThanSecs]     INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundDownLessThanSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundShortUpEnabled]       BIT             CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpEnabled] DEFAULT ((0)) NOT NULL,
    [LunchRoundShortUpToSecs]        INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpToSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundShortUpAtLeastSecs]   INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundShortUpAtLeastSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundLongEnabled]          BIT             CONSTRAINT [DF_PayrollPolicy_LunchRoundLongEnabled] DEFAULT ((0)) NOT NULL,
    [LunchRoundLongDownToSecs]       INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundLongDownToSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundLongLessThanSecs]     INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundLongLessThanSecs] DEFAULT ((0)) NOT NULL,
    [BreakType]                      INT             CONSTRAINT [DF_PayrollPolicy_BreakType] DEFAULT ((0)) NOT NULL,
    [BreakRoundInType]               INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundInType] DEFAULT ((0)) NOT NULL,
    [BreakRoundInSecs]               INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundInSecs] DEFAULT ((0)) NOT NULL,
    [BreakRoundOutType]              INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundOutType] DEFAULT ((0)) NOT NULL,
    [BreakRoundOutSecs]              INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundOutSecs] DEFAULT ((0)) NOT NULL,
    [BreakDurationRoundingEnabled]   BIT             CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingEnabled] DEFAULT ((0)) NOT NULL,
    [BreakDurationRoundingType]      INT             CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingType] DEFAULT ((0)) NOT NULL,
    [BreakDurationRoundingSecs]      INT             CONSTRAINT [DF_PayrollPolicy_BreakDurationRoundingSecs] DEFAULT ((0)) NOT NULL,
    [BreakRoundShortDownEnabled]     BIT             CONSTRAINT [DF_PayrollPolicy_BreakRoundShortDownEnabled] DEFAULT ((0)) NOT NULL,
    [BreakRoundShortDownToSecs]      INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundShortDownToSecs] DEFAULT ((0)) NOT NULL,
    [BreakRoundDownLessThanSecs]     INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundDownLessThanSecs] DEFAULT ((0)) NOT NULL,
    [BreakRoundShortUpEnabled]       BIT             CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpEnabled] DEFAULT ((0)) NOT NULL,
    [BreakRoundShortUpToSecs]        INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpToSecs] DEFAULT ((0)) NOT NULL,
    [BreakRoundShortUpAtLeastSecs]   INT             CONSTRAINT [DF_PayrollPolicy_BreakRoundShortUpAtLeastSecs] DEFAULT ((0)) NOT NULL,
    [CountTimeTowardsType]           INT             CONSTRAINT [DF_PayrollPolicy_CountTimeTowardsType] DEFAULT ((0)) NOT NULL,
    [RejectDuplicatePunchWithinSecs] INT             CONSTRAINT [DF_PayrollPolicy_RejectDuplicatePunchWithinSecs] DEFAULT ((0)) NOT NULL,
    [RejectOpposingPunchWithinSecs]  INT             CONSTRAINT [DF_PayrollPolicy_RejectOpposingPunchWithinSecs] DEFAULT ((0)) NOT NULL,
    [MaxShiftLengthSecs]             INT             CONSTRAINT [DF_PayrollPolicy_MaxShiftLengthSecs] DEFAULT ((0)) NOT NULL,
    [NineEightyRuleEnabled]          BIT             CONSTRAINT [DF_PayrollPolicy_NineEightyRuleEnabled] DEFAULT ((0)) NOT NULL,
    [WorkDaySplitAt]                 DATETIME        CONSTRAINT [DF_PayrollPolicy_WorkDaySplitAt] DEFAULT ('1/1/1900') NOT NULL,
    [UseBlendedRateEnabled]          BIT             CONSTRAINT [DF_PayrollPolicy_UseBlendedRateEnabled] DEFAULT ((0)) NOT NULL,
    [HolUnworkWeeksCountForAvgSched] INT             CONSTRAINT [DF_PayrollPolicy_HolUnworkWeeksCountForAvgSched] DEFAULT ((0)) NOT NULL,
    [HolUnworkWeeksCountForAvgWork]  INT             CONSTRAINT [DF_PayrollPolicy_HolUnworkWeeksCountForAvgWork] DEFAULT ((0)) NOT NULL,
    [HolWorkWeeksCountForAvgSched]   INT             CONSTRAINT [DF_PayrollPolicy_HolWorkWeeksCountForAvgSched] DEFAULT ((0)) NOT NULL,
    [HolWorkWeeksCountForAvgWork]    INT             CONSTRAINT [DF_PayrollPolicy_HolWorkWeeksCountForAvgWork] DEFAULT ((0)) NOT NULL,
    [LunchRoundAdditionalEnabled]    BIT             CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalEnabled] DEFAULT ((0)) NOT NULL,
    [LunchRoundAdditionalSecs]       INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalSecs] DEFAULT ((0)) NOT NULL,
    [LunchRoundAdditionalPayType]    INT             CONSTRAINT [DF_PayrollPolicy_LunchRoundAdditionalPayType] DEFAULT ((0)) NOT NULL,
    [AllowManLunchOverride]          BIT             CONSTRAINT [DF_PayrollPolicy_AllowManLunchOverride] DEFAULT ((0)) NOT NULL,
    [AllowManBreakOverride]          BIT             CONSTRAINT [DF_PayrollPolicy_AllowManBreakOverride] DEFAULT ((0)) NOT NULL,
    [PaidLunchShiftDiffEnabled]      BIT             CONSTRAINT [DF_PayrollPolicy_PaidLunchShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [PaidBreakShiftDiffEnabled]      BIT             CONSTRAINT [DF_PayrollPolicy_PaidBreakShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [DefaultShiftLengthSecs]         INT             CONSTRAINT [DF_PayrollPolicy_DefaultShiftLengthSecs] DEFAULT ((0)) NOT NULL,
    [MissingPunchBufferSecs]         INT             CONSTRAINT [DF_PayrollPolicy_MissingPunchBufferSecs] DEFAULT ((0)) NOT NULL,
    [SwipeNGoMealEnabled]            BIT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoMealEnabled] DEFAULT ((0)) NOT NULL,
    [SwipeNGoMealWindowSecs]         INT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoMealWindowSecs] DEFAULT ((0)) NOT NULL,
    [SwipeNGoBreakEnabled]           BIT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoBreakEnabled] DEFAULT ((0)) NOT NULL,
    [SwipeNGoBreakWindowSecs]        INT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoBreaklWindowSecs] DEFAULT ((0)) NOT NULL,
    [SwipeNGoTransferEnabled]        BIT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoTransferEnabled] DEFAULT ((0)) NOT NULL,
    [SwipeNGoTransferWindowSecs]     INT             CONSTRAINT [DF_PayrollPolicy_SwipeNGoTransferWindowSecs] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT             CONSTRAINT [DF_PayrollPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME        CONSTRAINT [DF_PayrollPolicy_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [IsDefault]                      BIT             CONSTRAINT [DF_PayrollPolicy_IsDefault] DEFAULT ((0)) NOT NULL,
    [DaySplitEnabled]                BIT             CONSTRAINT [DF_PayrollPolicy_DaySplitEnabled] DEFAULT ((0)) NOT NULL,
    [MealPremWorkEnabled]            BIT             CONSTRAINT [DF_PayrollPolicy_MealPremWorkEnabled] DEFAULT ((0)) NOT NULL,
    [MealPremWorkSecs]               INT             CONSTRAINT [DF_PayrollPolicy_MealPremWorkSecs] DEFAULT ((0)) NOT NULL,
    [MealPremWorkAllowedSecs]        INT             CONSTRAINT [DF_PayrollPolicy_MealPremWorkAllowedSecs] DEFAULT ((0)) NOT NULL,
    [MealPremWorkAllowedPayTypeID]   INT             CONSTRAINT [DF_PayrollPolicy_MealPremWorkAllowedPayTypeID] DEFAULT ((0)) NOT NULL,
    [MealPremWorkMinWorkSecs]        INT             CONSTRAINT [DF_PayrollPolicy_MealPremWorkMinWorkSecs] DEFAULT ((0)) NOT NULL,
    [MealPremPunchEnabled]           BIT             CONSTRAINT [DF_PayrollPolicy_MealPremPunchEnabled] DEFAULT ((0)) NOT NULL,
    [MealPremPunchSecs]              INT             CONSTRAINT [DF_PayrollPolicy_MealPremPunchSecs] DEFAULT ((0)) NOT NULL,
    [MealPremPunchType]              INT             CONSTRAINT [DF_PayrollPolicy_MealPremPunchType] DEFAULT ((0)) NOT NULL,
    [MealPremPunchAllowedSecs]       INT             CONSTRAINT [DF_PayrollPolicy_MealPremPunchAllowedSecs] DEFAULT ((0)) NOT NULL,
    [MealPremPunchAllowedPayTypeID]  INT             CONSTRAINT [DF_PayrollPolicy_MealPremPunchAllowedPayTypeID] DEFAULT ((0)) NOT NULL,
    [CustomPayPeriodDateType]        INT             CONSTRAINT [DF_PayrollPolicy_CustomPayPeriodDateType] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledTransactions]  BIT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledTransactions] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledTransfers]     BIT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledTransfers] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledMeals]         BIT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledMeals] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledBreaks]        BIT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledBreaks] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledOverride]      BIT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledOverride] DEFAULT ((0)) NOT NULL,
    [PopulateScheduledOverrideSecs]  INT             CONSTRAINT [DF_PayrollPolicy_PopulateScheduledOverrideSecs] DEFAULT ((0)) NOT NULL,
    [SpreadOfHoursPayEnabled]        BIT             CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayEnabled] DEFAULT ((0)) NOT NULL,
    [SpreadOfHoursPaySecs]           INT             CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayDuration] DEFAULT ((0)) NOT NULL,
    [SpreadOfHoursPayAmount]         MONEY           CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayPayRate] DEFAULT ((0)) NOT NULL,
    [SpreadOfHoursPayPunchTimeType]  INT             CONSTRAINT [DF_PayrollPolicy_SpreadOfHoursPayPunchTimeType] DEFAULT ((0)) NOT NULL,
    [RoundNonWorkDurationType]       INT             CONSTRAINT [DF_PayrollPolicy_RoundNonWorkType] DEFAULT ((0)) NOT NULL,
    [RoundNonWorkDurationTimesTo]    INT             CONSTRAINT [DF_PayrollPolicy_RoundNonWorkTimesTo] DEFAULT ((0)) NOT NULL,
    [AllowTORReplaceTimeSheets]      BIT             CONSTRAINT [DF_PayrollPolicy_AllowTORReplaceTimeSheets] DEFAULT ((0)) NOT NULL,
    [AllowTORReplacePartTimeSheets]  BIT             CONSTRAINT [DF_PayrollPolicy_AllowTORReplacePartTimeSheets] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicy1]
    ON [dbo].[tmp_ms_xx_PayrollPolicy]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicy] ([ID], [PayrollPolicyID], [StartDateTime], [EndDateTime], [IsDeleted], [PayrollPolicyName], [WorkWeekStartDay], [PayPeriodType], [PayPeriodSemiMonthlyDay], [PayPeriodMonthlyDay], [GraceMaxSecs], [RoundInBeforeSchedule], [RoundInAfterSchedule], [RoundOutBeforeSchedule], [RoundOutAfterSchedule], [RoundInType], [RoundInTimesTo], [RoundOutType], [RoundOutTimesTo], [RoundTransferType], [RoundTransferTimesTo], [HolEnabled], [HolPayTypeID], [HolMinDaysOfEmployment], [HolSchedToWork], [HolMustWorkSchedIfCompanyWork], [HolQualifyOnTimeWorkRequired], [HolQualifyOnTimeWorkType], [HolQualifyRequiredToWorkType], [HolMinSecsDayBefore], [HolMinSecsDayAfter], [HolApplyOnNextDay], [HolApplyTowardsOvertime], [HolUnworkType], [HolUnworkSecsToAdd], [HolUnworkLunchSecsToSubtract], [HolWorkType], [HolWorkSecsToAdd], [HolWorkLunchSecsToSubtract], [HolWorkHoursFactorEnabled], [HolWorkHoursFactor], [LunchType], [LunchRoundInType], [LunchRoundInSecs], [LunchRoundOutType], [LunchRoundOutSecs], [LunchDurationRoundingEnabled], [LunchDurationRoundingType], [LunchDurationRoundingSecs], [LunchRoundShortDownEnabled], [LunchRoundShortDownToSecs], [LunchRoundDownLessThanSecs], [LunchRoundShortUpEnabled], [LunchRoundShortUpToSecs], [LunchRoundShortUpAtLeastSecs], [LunchRoundLongEnabled], [LunchRoundLongDownToSecs], [LunchRoundLongLessThanSecs], [BreakType], [BreakRoundInType], [BreakRoundInSecs], [BreakRoundOutType], [BreakRoundOutSecs], [BreakDurationRoundingEnabled], [BreakDurationRoundingType], [BreakDurationRoundingSecs], [BreakRoundShortDownEnabled], [BreakRoundShortDownToSecs], [BreakRoundDownLessThanSecs], [BreakRoundShortUpEnabled], [BreakRoundShortUpToSecs], [BreakRoundShortUpAtLeastSecs], [CountTimeTowardsType], [RejectDuplicatePunchWithinSecs], [RejectOpposingPunchWithinSecs], [MaxShiftLengthSecs], [NineEightyRuleEnabled], [WorkDaySplitAt], [UseBlendedRateEnabled], [HolUnworkWeeksCountForAvgSched], [HolUnworkWeeksCountForAvgWork], [HolWorkWeeksCountForAvgSched], [HolWorkWeeksCountForAvgWork], [LunchRoundAdditionalEnabled], [LunchRoundAdditionalSecs], [LunchRoundAdditionalPayType], [AllowManLunchOverride], [AllowManBreakOverride], [PaidLunchShiftDiffEnabled], [PaidBreakShiftDiffEnabled], [DefaultShiftLengthSecs], [MissingPunchBufferSecs], [SwipeNGoMealEnabled], [SwipeNGoMealWindowSecs], [SwipeNGoBreakEnabled], [SwipeNGoBreakWindowSecs], [SwipeNGoTransferEnabled], [SwipeNGoTransferWindowSecs], [ModifiedBy], [ModifiedOn], [IsDefault], [DaySplitEnabled], [MealPremWorkEnabled], [MealPremWorkSecs], [MealPremWorkAllowedSecs], [MealPremWorkAllowedPayTypeID], [MealPremWorkMinWorkSecs], [MealPremPunchEnabled], [MealPremPunchSecs], [MealPremPunchType], [MealPremPunchAllowedSecs], [MealPremPunchAllowedPayTypeID], [CustomPayPeriodDateType], [PopulateScheduledTransactions], [PopulateScheduledTransfers], [PopulateScheduledMeals], [PopulateScheduledBreaks], [PopulateScheduledOverride], [PopulateScheduledOverrideSecs], [SpreadOfHoursPayEnabled], [SpreadOfHoursPaySecs], [SpreadOfHoursPayAmount], [SpreadOfHoursPayPunchTimeType], [RoundNonWorkDurationType], [RoundNonWorkDurationTimesTo], [AllowTORReplaceTimeSheets], [AllowTORReplacePartTimeSheets])
        SELECT   [ID],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [PayrollPolicyName],
                 [WorkWeekStartDay],
                 [PayPeriodType],
                 [PayPeriodSemiMonthlyDay],
                 [PayPeriodMonthlyDay],
                 [GraceMaxSecs],
                 [RoundInBeforeSchedule],
                 [RoundInAfterSchedule],
                 [RoundOutBeforeSchedule],
                 [RoundOutAfterSchedule],
                 [RoundInType],
                 [RoundInTimesTo],
                 [RoundOutType],
                 [RoundOutTimesTo],
                 [RoundTransferType],
                 [RoundTransferTimesTo],
                 [HolEnabled],
                 [HolPayTypeID],
                 [HolMinDaysOfEmployment],
                 [HolSchedToWork],
                 [HolMustWorkSchedIfCompanyWork],
                 [HolQualifyOnTimeWorkRequired],
                 [HolQualifyOnTimeWorkType],
                 [HolQualifyRequiredToWorkType],
                 [HolMinSecsDayBefore],
                 [HolMinSecsDayAfter],
                 [HolApplyOnNextDay],
                 [HolApplyTowardsOvertime],
                 [HolUnworkType],
                 [HolUnworkSecsToAdd],
                 [HolUnworkLunchSecsToSubtract],
                 [HolWorkType],
                 [HolWorkSecsToAdd],
                 [HolWorkLunchSecsToSubtract],
                 [HolWorkHoursFactorEnabled],
                 [HolWorkHoursFactor],
                 [LunchType],
                 [LunchRoundInType],
                 [LunchRoundInSecs],
                 [LunchRoundOutType],
                 [LunchRoundOutSecs],
                 [LunchDurationRoundingEnabled],
                 [LunchDurationRoundingType],
                 [LunchDurationRoundingSecs],
                 [LunchRoundShortDownEnabled],
                 [LunchRoundShortDownToSecs],
                 [LunchRoundDownLessThanSecs],
                 [LunchRoundShortUpEnabled],
                 [LunchRoundShortUpToSecs],
                 [LunchRoundShortUpAtLeastSecs],
                 [LunchRoundLongEnabled],
                 [LunchRoundLongDownToSecs],
                 [LunchRoundLongLessThanSecs],
                 [BreakType],
                 [BreakRoundInType],
                 [BreakRoundInSecs],
                 [BreakRoundOutType],
                 [BreakRoundOutSecs],
                 [BreakDurationRoundingEnabled],
                 [BreakDurationRoundingType],
                 [BreakDurationRoundingSecs],
                 [BreakRoundShortDownEnabled],
                 [BreakRoundShortDownToSecs],
                 [BreakRoundDownLessThanSecs],
                 [BreakRoundShortUpEnabled],
                 [BreakRoundShortUpToSecs],
                 [BreakRoundShortUpAtLeastSecs],
                 [CountTimeTowardsType],
                 [RejectDuplicatePunchWithinSecs],
                 [RejectOpposingPunchWithinSecs],
                 [MaxShiftLengthSecs],
                 [NineEightyRuleEnabled],
                 [WorkDaySplitAt],
                 [UseBlendedRateEnabled],
                 [HolUnworkWeeksCountForAvgSched],
                 [HolUnworkWeeksCountForAvgWork],
                 [HolWorkWeeksCountForAvgSched],
                 [HolWorkWeeksCountForAvgWork],
                 [LunchRoundAdditionalEnabled],
                 [LunchRoundAdditionalSecs],
                 [LunchRoundAdditionalPayType],
                 [AllowManLunchOverride],
                 [AllowManBreakOverride],
                 [PaidLunchShiftDiffEnabled],
                 [PaidBreakShiftDiffEnabled],
                 [DefaultShiftLengthSecs],
                 [MissingPunchBufferSecs],
                 [SwipeNGoMealEnabled],
                 [SwipeNGoMealWindowSecs],
                 [SwipeNGoBreakEnabled],
                 [SwipeNGoBreakWindowSecs],
                 [SwipeNGoTransferEnabled],
                 [SwipeNGoTransferWindowSecs],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDefault],
                 [DaySplitEnabled],
                 [MealPremWorkEnabled],
                 [MealPremWorkSecs],
                 [MealPremWorkAllowedSecs],
                 [MealPremWorkAllowedPayTypeID],
                 [MealPremWorkMinWorkSecs],
                 [MealPremPunchEnabled],
                 [MealPremPunchSecs],
                 [MealPremPunchType],
                 [MealPremPunchAllowedSecs],
                 [MealPremPunchAllowedPayTypeID],
                 [CustomPayPeriodDateType],
                 [PopulateScheduledTransactions],
                 [PopulateScheduledTransfers],
                 [PopulateScheduledMeals],
                 [PopulateScheduledBreaks],
                 [PopulateScheduledOverride],
                 [PopulateScheduledOverrideSecs],
                 [SpreadOfHoursPayEnabled],
                 [SpreadOfHoursPaySecs],
                 [SpreadOfHoursPayAmount],
                 [SpreadOfHoursPayPunchTimeType],
                 [RoundNonWorkDurationType],
                 [RoundNonWorkDurationTimesTo],
                 [AllowTORReplaceTimeSheets],
                 [AllowTORReplacePartTimeSheets]
        FROM     [dbo].[PayrollPolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicy] OFF;
    END

DROP TABLE [dbo].[PayrollPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicy]', N'PayrollPolicy';

EXECUTE sp_rename N'[dbo].[PayrollPolicy].[tmp_ms_xx_index_PK_PayrollPolicy1]', N'PK_PayrollPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicy]([PayrollPolicyID] ASC, [PayrollPolicyName] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyAssign] (
    [PayrollPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyID]       INT      CONSTRAINT [DF_PayrollPolicyAssign_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [UserID]                INT      CONSTRAINT [DF_PayrollPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]         DATETIME CONSTRAINT [DF_PayrollPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]           DATETIME CONSTRAINT [DF_PayrollPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]            INT      CONSTRAINT [DF_PayrollPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME CONSTRAINT [DF_PayrollPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyUserAssignment1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyAssign]([PayrollPolicyAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyAssign] ([PayrollPolicyAssignID], [PayrollPolicyID], [UserID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [PayrollPolicyAssignID],
                 [PayrollPolicyID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyAssign]
        ORDER BY [PayrollPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyAssign] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyAssign]', N'PayrollPolicyAssign';

EXECUTE sp_rename N'[dbo].[PayrollPolicyAssign].[tmp_ms_xx_index_PK_PayrollPolicyUserAssignment1]', N'PK_PayrollPolicyUserAssignment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyAssign]([PayrollPolicyID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[IX_UserID_StartDateTime_EndDateTime]...';


GO
CREATE NONCLUSTERED INDEX [IX_UserID_StartDateTime_EndDateTime]
    ON [dbo].[PayrollPolicyAssign]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyBreakAutoDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail] (
    [ID]                             INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyBreakAutoDetailID] INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_PayrollPolicyBreakAutoDetailID] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyID]                INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                  DATETIME CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [BreakSecs]                      INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakSecs] DEFAULT ((0)) NOT NULL,
    [IsBreakPaid]                    BIT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_IsBreakPaid] DEFAULT ((0)) NOT NULL,
    [ApplyBreakToOvertime]           BIT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ApplyBreakToOvertime] DEFAULT ((0)) NOT NULL,
    [BreakUnpaidSecs]                INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakUnpaidSecs] DEFAULT ((0)) NOT NULL,
    [BreakStartSecsAfterClockIn]     INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakStartSecsAfterClockIn] DEFAULT ((0)) NOT NULL,
    [BreakStartAtTime]               DATETIME CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakStartAtTime] DEFAULT ('1/1/1900') NOT NULL,
    [BreakEndSecsAfterClockIn]       INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_BreakEndSecsAfterClockIn] DEFAULT ((0)) NOT NULL,
    [AutoBreakType]                  INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_AutoBreakType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT      CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME CONSTRAINT [DF_PayrollPolicyBreakAutoDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyBreakAutoDtl1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyBreakAutoDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail] ([ID], [PayrollPolicyBreakAutoDetailID], [PayrollPolicyID], [StartDateTime], [EndDateTime], [BreakSecs], [IsBreakPaid], [ApplyBreakToOvertime], [BreakUnpaidSecs], [BreakStartSecsAfterClockIn], [BreakStartAtTime], [BreakEndSecsAfterClockIn], [AutoBreakType], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyBreakAutoDetailID],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [BreakSecs],
                 [IsBreakPaid],
                 [ApplyBreakToOvertime],
                 [BreakUnpaidSecs],
                 [BreakStartSecsAfterClockIn],
                 [BreakStartAtTime],
                 [BreakEndSecsAfterClockIn],
                 [AutoBreakType],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyBreakAutoDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyBreakAutoDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyBreakAutoDetail]', N'PayrollPolicyBreakAutoDetail';

EXECUTE sp_rename N'[dbo].[PayrollPolicyBreakAutoDetail].[tmp_ms_xx_index_PK_PayrollPolicyBreakAutoDtl1]', N'PK_PayrollPolicyBreakAutoDtl', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyBreakAutoDetail]([PayrollPolicyBreakAutoDetailID] ASC, [PayrollPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyBreakManDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail] (
    [ID]                            INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyBreakManDetailID] INT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_PayrollPolicyBreakManDetailID] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyID]               INT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME CONSTRAINT [DF_PayrollPolicyBreakManDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME CONSTRAINT [DF_PayrollPolicyBreakManDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [BreakAvailableAfterSecs]       INT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_BreakAvailableAfterSecs] DEFAULT ((0)) NOT NULL,
    [IsBreakPaid]                   BIT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_IsBreakPaid] DEFAULT ((0)) NOT NULL,
    [MaxBreakPaidSecs]              INT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_MaxBreakPaidSecs] DEFAULT ((0)) NOT NULL,
    [ApplyBreakToOvertime]          BIT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_ApplyBreakToOvertime] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_PayrollPolicyBreakManDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_PayrollPolicyBreakManDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyBreakManDtl1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyBreakManDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail] ([ID], [PayrollPolicyBreakManDetailID], [PayrollPolicyID], [StartDateTime], [EndDateTime], [BreakAvailableAfterSecs], [IsBreakPaid], [MaxBreakPaidSecs], [ApplyBreakToOvertime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyBreakManDetailID],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [BreakAvailableAfterSecs],
                 [IsBreakPaid],
                 [MaxBreakPaidSecs],
                 [ApplyBreakToOvertime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyBreakManDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyBreakManDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyBreakManDetail]', N'PayrollPolicyBreakManDetail';

EXECUTE sp_rename N'[dbo].[PayrollPolicyBreakManDetail].[tmp_ms_xx_index_PK_PayrollPolicyBreakManDtl1]', N'PK_PayrollPolicyBreakManDtl', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyBreakManDetail]([PayrollPolicyBreakManDetailID] ASC, [PayrollPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyCustomPayPeriod]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyCustomPayPeriod] (
    [ID]                             INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyCustomPayPeriodID] INT      CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_PayrollPolicyCustomPayPeriodID] DEFAULT ((0)) NOT NULL,
    [StartDate]                      DATETIME CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]                        DATETIME CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayrollPolicyID]                INT      CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                  DATETIME CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_EndDateTime] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                     INT      CONSTRAINT [DF_PayrollPolicyCustomPayPeriod_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PayrollPolicyCustomPayPeriod1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyCustomPayPeriod])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyCustomPayPeriod] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyCustomPayPeriod] ([ID], [PayrollPolicyCustomPayPeriodID], [StartDate], [EndDate], [PayrollPolicyID], [StartDateTime], [EndDateTime], [ModifiedOn], [ModifiedBy])
        SELECT   [ID],
                 [PayrollPolicyCustomPayPeriodID],
                 [StartDate],
                 [EndDate],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[PayrollPolicyCustomPayPeriod]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyCustomPayPeriod] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyCustomPayPeriod];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyCustomPayPeriod]', N'PayrollPolicyCustomPayPeriod';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PayrollPolicyCustomPayPeriod1]', N'PK_PayrollPolicyCustomPayPeriod', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyLunchAutoDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail] (
    [ID]                             INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyLunchAutoDetailID] INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_PayrollPolicyLunchAutoDetailID] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyID]                INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                  DATETIME CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LunchSecs]                      INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchSecs] DEFAULT ((0)) NOT NULL,
    [IsLunchPaid]                    BIT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_IsLunchPaid] DEFAULT ((0)) NOT NULL,
    [ApplyLunchToOvertime]           BIT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ApplyLunchToOvertime] DEFAULT ((0)) NOT NULL,
    [LunchUnpaidSecs]                INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchUnpaidSecs] DEFAULT ((0)) NOT NULL,
    [LunchStartSecsAfterClockIn]     INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchStartSecsAfterClockIn] DEFAULT ((0)) NOT NULL,
    [LunchStartAtTime]               DATETIME CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchStartAtTime] DEFAULT ('1/1/1900') NOT NULL,
    [LunchEndSecsAfterClockIn]       INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_LunchEndSecsAfterClockIn] DEFAULT ((0)) NOT NULL,
    [AutoLunchType]                  INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_AutoLunchType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT      CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME CONSTRAINT [DF_PayrollPolicyLunchAutoDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyLunchAutoDtl1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyLunchAutoDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail] ([ID], [PayrollPolicyLunchAutoDetailID], [PayrollPolicyID], [StartDateTime], [EndDateTime], [LunchSecs], [IsLunchPaid], [ApplyLunchToOvertime], [LunchUnpaidSecs], [LunchStartSecsAfterClockIn], [LunchStartAtTime], [LunchEndSecsAfterClockIn], [AutoLunchType], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyLunchAutoDetailID],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [LunchSecs],
                 [IsLunchPaid],
                 [ApplyLunchToOvertime],
                 [LunchUnpaidSecs],
                 [LunchStartSecsAfterClockIn],
                 [LunchStartAtTime],
                 [LunchEndSecsAfterClockIn],
                 [AutoLunchType],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyLunchAutoDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyLunchAutoDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyLunchAutoDetail]', N'PayrollPolicyLunchAutoDetail';

EXECUTE sp_rename N'[dbo].[PayrollPolicyLunchAutoDetail].[tmp_ms_xx_index_PK_PayrollPolicyLunchAutoDtl1]', N'PK_PayrollPolicyLunchAutoDtl', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyLunchAutoDetail]([PayrollPolicyLunchAutoDetailID] ASC, [PayrollPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyLunchManDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail] (
    [ID]                            INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyLunchManDetailID] INT      CONSTRAINT [DF_PayrollPolicyLunchManDetail_PayrollPolicyLunchManDetailID] DEFAULT ((0)) NOT NULL,
    [PayrollPolicyID]               INT      NOT NULL,
    [StartDateTime]                 DATETIME CONSTRAINT [DF_PayrollPolicyLunchManDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME CONSTRAINT [DF_PayrollPolicyLunchManDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LunchAvailableAfterSecs]       INT      NOT NULL,
    [IsLunchPaid]                   BIT      NOT NULL,
    [MaxLunchPaidSecs]              INT      NOT NULL,
    [ApplyLunchToOvertime]          BIT      NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_PayrollPolicyLunchManDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_PayrollPolicyLunchManDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyLunchManDtl1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyLunchManDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail] ([ID], [PayrollPolicyLunchManDetailID], [PayrollPolicyID], [StartDateTime], [EndDateTime], [LunchAvailableAfterSecs], [IsLunchPaid], [MaxLunchPaidSecs], [ApplyLunchToOvertime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyLunchManDetailID],
                 [PayrollPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [LunchAvailableAfterSecs],
                 [IsLunchPaid],
                 [MaxLunchPaidSecs],
                 [ApplyLunchToOvertime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyLunchManDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyLunchManDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyLunchManDetail]', N'PayrollPolicyLunchManDetail';

EXECUTE sp_rename N'[dbo].[PayrollPolicyLunchManDetail].[tmp_ms_xx_index_PK_PayrollPolicyLunchManDtl1]', N'PK_PayrollPolicyLunchManDtl', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyLunchManDetail]([PayrollPolicyLunchManDetailID] ASC, [PayrollPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyOvertimeAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign] (
    [ID]                            INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyOvertimeAssignID] INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_PayrollPolicyOvertimeAssignID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayrollPolicyID]               INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [OvertimeRuleID]                INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OvertimeRuleID] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]               INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [OvertimePayTypeID]             INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_OvertimePayTypeID] DEFAULT ((0)) NOT NULL,
    [Threshold]                     INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_Threshold] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_PayrollPolicyOvertimeAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeAssign_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyOvertimeAssign1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyOvertimeAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign] ([ID], [PayrollPolicyOvertimeAssignID], [StartDateTime], [EndDateTime], [PayrollPolicyID], [OvertimeRuleID], [OrdinalPosition], [OvertimePayTypeID], [Threshold], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyOvertimeAssignID],
                 [StartDateTime],
                 [EndDateTime],
                 [PayrollPolicyID],
                 [OvertimeRuleID],
                 [OrdinalPosition],
                 [OvertimePayTypeID],
                 [Threshold],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyOvertimeAssign]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyOvertimeAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyOvertimeAssign]', N'PayrollPolicyOvertimeAssign';

EXECUTE sp_rename N'[dbo].[PayrollPolicyOvertimeAssign].[tmp_ms_xx_index_PK_PayrollPolicyOvertimeAssign1]', N'PK_PayrollPolicyOvertimeAssign', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyOvertimeAssign]([PayrollPolicyOvertimeAssignID] ASC, [StartDateTime] ASC, [EndDateTime] ASC, [PayrollPolicyID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollPolicyOvertimeLevel]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel] (
    [ID]                           INT      IDENTITY (1, 1) NOT NULL,
    [PayrollPolicyOvertimeLevelID] INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayrollPolicyOvertimeLevelID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeLevel_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                  DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeLevel_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayrollPolicyID]              INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [LevelIndex]                   INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_LevelIndex] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                    INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_PayTypeID] DEFAULT ((0)) NOT NULL,
    [WorkOvertimePaytypeID]        INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_WorkOvertimePaytypeID] DEFAULT ((0)) NOT NULL,
    [OvertimePayTypeID]            INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_OvertimePayTypeID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_PayrollPolicyOvertimeLevel_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_PayrollPolicyOvertimeLevel_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayrollPolicyOvertimeLevel1]
    ON [dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollPolicyOvertimeLevel])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel] ([ID], [PayrollPolicyOvertimeLevelID], [StartDateTime], [EndDateTime], [PayrollPolicyID], [LevelIndex], [PayTypeID], [WorkOvertimePaytypeID], [OvertimePayTypeID], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PayrollPolicyOvertimeLevelID],
                 [StartDateTime],
                 [EndDateTime],
                 [PayrollPolicyID],
                 [LevelIndex],
                 [PayTypeID],
                 [WorkOvertimePaytypeID],
                 [OvertimePayTypeID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PayrollPolicyOvertimeLevel]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel] OFF;
    END

DROP TABLE [dbo].[PayrollPolicyOvertimeLevel];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollPolicyOvertimeLevel]', N'PayrollPolicyOvertimeLevel';

EXECUTE sp_rename N'[dbo].[PayrollPolicyOvertimeLevel].[tmp_ms_xx_index_PK_PayrollPolicyOvertimeLevel1]', N'PK_PayrollPolicyOvertimeLevel', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayrollPolicyOvertimeLevel]([PayrollPolicyOvertimeLevelID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PayrollTransmission]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollTransmission] (
    [PayrollTransmissionId]      INT              IDENTITY (1, 1) NOT NULL,
    [TransmissionId]             UNIQUEIDENTIFIER NOT NULL,
    [PayrollCheckId]             INT              NOT NULL,
    [EmployeeId]                 INT              NOT NULL,
    [PayrollEmployeeId]          BIGINT           NOT NULL,
    [PayTypeId]                  INT              NOT NULL,
    [PayrollPayComponentId]      BIGINT           NOT NULL,
    [PayRateCode]                NVARCHAR (1)     NOT NULL,
    [PayRateOverride]            MONEY            NOT NULL,
    [ShiftCode]                  NVARCHAR (10)    NOT NULL,
    [Amount]                     MONEY            NOT NULL,
    [DataSent]                   BIT              NOT NULL,
    [WageTypeId]                 INT              NOT NULL,
    [PayrollOrgUnitId]           BIGINT           NOT NULL,
    [PayrollShiftDifferentialId] BIGINT           NOT NULL,
    [JobId]                      BIGINT           NOT NULL,
    [LaborAssignId]              BIGINT           NOT NULL,
    [CheckLineDate]              DATETIME         NOT NULL,
    [HasAutoDist]                BIT              NOT NULL,
    [ModifiedOn]                 DATETIME         NULL,
    [ModifiedBy]                 INT              NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PayrollTransmission1] PRIMARY KEY CLUSTERED ([PayrollTransmissionId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollTransmission])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmission] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollTransmission] ([PayrollTransmissionId], [TransmissionId], [PayrollCheckId], [EmployeeId], [PayrollEmployeeId], [PayTypeId], [PayrollPayComponentId], [PayRateCode], [PayRateOverride], [ShiftCode], [Amount], [DataSent], [WageTypeId], [PayrollOrgUnitId], [PayrollShiftDifferentialId], [JobId], [LaborAssignId], [CheckLineDate], [HasAutoDist], [ModifiedOn], [ModifiedBy])
        SELECT   [PayrollTransmissionId],
                 [TransmissionId],
                 [PayrollCheckId],
                 [EmployeeId],
                 [PayrollEmployeeId],
                 [PayTypeId],
                 [PayrollPayComponentId],
                 [PayRateCode],
                 [PayRateOverride],
                 [ShiftCode],
                 [Amount],
                 [DataSent],
                 [WageTypeId],
                 [PayrollOrgUnitId],
                 [PayrollShiftDifferentialId],
                 [JobId],
                 [LaborAssignId],
                 [CheckLineDate],
                 [HasAutoDist],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[PayrollTransmission]
        ORDER BY [PayrollTransmissionId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmission] OFF;
    END

DROP TABLE [dbo].[PayrollTransmission];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollTransmission]', N'PayrollTransmission';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PayrollTransmission1]', N'PK_PayrollTransmission', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayrollTransmissionMaster]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollTransmissionMaster] (
    [PayrollTransmissionMasterId] INT              IDENTITY (1, 1) NOT NULL,
    [TransmissionId]              UNIQUEIDENTIFIER NOT NULL,
    [CreateDate]                  DATETIME         NOT NULL,
    [LastSentDate]                DATETIME         NOT NULL,
    [TransmissionStatusId]        INT              NOT NULL,
    [AdditionalData]              VARCHAR (255)    NULL,
    [RequestorUserId]             VARCHAR (50)     NULL,
    [RequestorLogin]              VARCHAR (50)     NULL,
    [ModifiedOn]                  DATETIME         NULL,
    [ModifiedBy]                  INT              NULL,
    [IsHoursByDay]                BIT              CONSTRAINT [DF_PayrollTransmissionMaster_IsHoursByDay] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PayrollTransmissionMaster1] PRIMARY KEY CLUSTERED ([PayrollTransmissionMasterId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollTransmissionMaster])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmissionMaster] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollTransmissionMaster] ([PayrollTransmissionMasterId], [TransmissionId], [CreateDate], [LastSentDate], [TransmissionStatusId], [AdditionalData], [RequestorUserId], [RequestorLogin], [ModifiedOn], [ModifiedBy], [IsHoursByDay])
        SELECT   [PayrollTransmissionMasterId],
                 [TransmissionId],
                 [CreateDate],
                 [LastSentDate],
                 [TransmissionStatusId],
                 [AdditionalData],
                 [RequestorUserId],
                 [RequestorLogin],
                 [ModifiedOn],
                 [ModifiedBy],
                 [IsHoursByDay]
        FROM     [dbo].[PayrollTransmissionMaster]
        ORDER BY [PayrollTransmissionMasterId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmissionMaster] OFF;
    END

DROP TABLE [dbo].[PayrollTransmissionMaster];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollTransmissionMaster]', N'PayrollTransmissionMaster';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PayrollTransmissionMaster1]', N'PK_PayrollTransmissionMaster', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
The column Status on table [dbo].[PayrollTransmissionResult] must be changed from NULL to NOT NULL. If the table contains data, the ALTER script may not work. To avoid this issue, you must add values to this column for all rows or mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/
GO
PRINT N'Starting rebuilding table [dbo].[PayrollTransmissionResult]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayrollTransmissionResult] (
    [PayrollTransmissionResultId] INT              IDENTITY (1, 1) NOT NULL,
    [TransmissionId]              UNIQUEIDENTIFIER NOT NULL,
    [PayrollCheckId]              INT              NOT NULL,
    [PayrollEmployeeId]           BIGINT           NOT NULL,
    [Status]                      VARCHAR (20)     NOT NULL,
    [ErrorCode]                   VARCHAR (200)    NOT NULL,
    [ErrorMessage]                VARCHAR (5000)   NOT NULL,
    [CreateDate]                  DATETIME         CONSTRAINT [DF_PayrollTransmissionResult_CreateDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PayrollTransmissionResult1] PRIMARY KEY CLUSTERED ([PayrollTransmissionResultId] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayrollTransmissionResult])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmissionResult] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayrollTransmissionResult] ([PayrollTransmissionResultId], [TransmissionId], [PayrollCheckId], [PayrollEmployeeId], [Status], [ErrorCode], [ErrorMessage], [CreateDate])
        SELECT   [PayrollTransmissionResultId],
                 [TransmissionId],
                 [PayrollCheckId],
                 [PayrollEmployeeId],
                 [Status],
                 [ErrorCode],
                 [ErrorMessage],
                 [CreateDate]
        FROM     [dbo].[PayrollTransmissionResult]
        ORDER BY [PayrollTransmissionResultId] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayrollTransmissionResult] OFF;
    END

DROP TABLE [dbo].[PayrollTransmissionResult];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayrollTransmissionResult]', N'PayrollTransmissionResult';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PayrollTransmissionResult1]', N'PK_PayrollTransmissionResult', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PayType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PayType] (
    [ID]                      INT             IDENTITY (1, 1) NOT NULL,
    [PayTypeID]               INT             CONSTRAINT [DF_PayType_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME        CONSTRAINT [DF_PayType_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]             DATETIME        CONSTRAINT [DF_PayType_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [IsDeleted]               BIT             CONSTRAINT [DF_PayType_IsDeleted] DEFAULT ((0)) NOT NULL,
    [PayTypeName]             VARCHAR (50)    CONSTRAINT [DF_PayType_PayTypeName] DEFAULT ('') NOT NULL,
    [PayTypeCode]             VARCHAR (50)    CONSTRAINT [DF_PayType_PayTypeCode] DEFAULT ('') NOT NULL,
    [CountTowardsHolidayMin]  BIT             CONSTRAINT [DF_PayType_CountTowardsHolidayMin] DEFAULT ((0)) NOT NULL,
    [OverridesAbsence]        BIT             CONSTRAINT [DF_PayType_OverridesAbsence] DEFAULT ((0)) NOT NULL,
    [IsWorkType]              BIT             CONSTRAINT [DF_PayType_IsWorkType] DEFAULT ((0)) NOT NULL,
    [ApplyToOvertime]         BIT             CONSTRAINT [DF_PayType_ApplyToOvertime] DEFAULT ((0)) NOT NULL,
    [IncludeInBlendedRate]    BIT             CONSTRAINT [DF_PayType_IncludeInBlendedRate] DEFAULT ((0)) NOT NULL,
    [ApplyToTimeOff]          BIT             CONSTRAINT [DF_PayType_ApplyToTimeOff] DEFAULT ((0)) NOT NULL,
    [CanBeOvertime]           BIT             CONSTRAINT [DF_PayType_CanBeOvertime] DEFAULT ((0)) NOT NULL,
    [TimeOffPayTypeID]        INT             CONSTRAINT [DF_PayType_TimeOffPayTypeID] DEFAULT ((0)) NOT NULL,
    [DefaultPayLevelRateType] INT             CONSTRAINT [DF_PayType_DefaultPayLevelRateType] DEFAULT ((0)) NOT NULL,
    [IsOvertimeType]          BIT             CONSTRAINT [DF_PayType_IsOvertimeType] DEFAULT ((0)) NOT NULL,
    [OvertimeFactor]          DECIMAL (18, 2) CONSTRAINT [DF_PayType_OvertimeFactor] DEFAULT ((0)) NOT NULL,
    [ColorCode]               NCHAR (1)       CONSTRAINT [DF_PayType_ColorCode] DEFAULT ('') NOT NULL,
    [ModifiedBy]              INT             CONSTRAINT [DF_PayType_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME        CONSTRAINT [DF_PayType_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [AllowShiftDiff]          BIT             CONSTRAINT [DF_PayType_AllowShiftDiff] DEFAULT ((0)) NOT NULL,
    [DeductFromPayType]       BIT             CONSTRAINT [DF_PayType_DeductFromPayType_1] DEFAULT ((0)) NOT NULL,
    [DeductFromPayTypeID]     INT             CONSTRAINT [DF_PayType_DeductFromPayType] DEFAULT ((0)) NOT NULL,
    [IsDurationOnly]          BIT             CONSTRAINT [DF_PayType_IsDurationOnly] DEFAULT ((0)) NOT NULL,
    [IsLLRequired]            BIT             CONSTRAINT [DF_PayType_IsLLRequired] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_PayType1]
    ON [dbo].[tmp_ms_xx_PayType]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PayType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PayType] ([ID], [PayTypeID], [StartDateTime], [EndDateTime], [IsDeleted], [PayTypeName], [PayTypeCode], [CountTowardsHolidayMin], [OverridesAbsence], [IsWorkType], [ApplyToOvertime], [IncludeInBlendedRate], [ApplyToTimeOff], [CanBeOvertime], [TimeOffPayTypeID], [DefaultPayLevelRateType], [IsOvertimeType], [OvertimeFactor], [ColorCode], [ModifiedBy], [ModifiedOn], [AllowShiftDiff], [DeductFromPayType], [DeductFromPayTypeID], [IsDurationOnly], [IsLLRequired])
        SELECT   [ID],
                 [PayTypeID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [PayTypeName],
                 [PayTypeCode],
                 [CountTowardsHolidayMin],
                 [OverridesAbsence],
                 [IsWorkType],
                 [ApplyToOvertime],
                 [IncludeInBlendedRate],
                 [ApplyToTimeOff],
                 [CanBeOvertime],
                 [TimeOffPayTypeID],
                 [DefaultPayLevelRateType],
                 [IsOvertimeType],
                 [OvertimeFactor],
                 [ColorCode],
                 [ModifiedBy],
                 [ModifiedOn],
                 [AllowShiftDiff],
                 [DeductFromPayType],
                 [DeductFromPayTypeID],
                 [IsDurationOnly],
                 [IsLLRequired]
        FROM     [dbo].[PayType]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PayType] OFF;
    END

DROP TABLE [dbo].[PayType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PayType]', N'PayType';

EXECUTE sp_rename N'[dbo].[PayType].[tmp_ms_xx_index_PK_PayType1]', N'PK_PayType', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PayType].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PayType]([PayTypeID] ASC, [StartDateTime] ASC, [EndDateTime] ASC, [PayTypeName] ASC, [PayTypeCode] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PerfectAttendanceDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PerfectAttendanceDetail] (
    [ID]                        INT             IDENTITY (1, 1) NOT NULL,
    [PerfectAttendanceDetailID] INT             CONSTRAINT [DF_PerfectAttendanceDetail_PerfectAttendanceDetailID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingRuleID]      INT             CONSTRAINT [DF_PerfectAttendanceDetail_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [Duration]                  INT             CONSTRAINT [DF_PerfectAttendanceDetail_Duration] DEFAULT ((0)) NOT NULL,
    [RangeType]                 INT             CONSTRAINT [DF_PerfectAttendanceDetail_RangeType] DEFAULT ((0)) NOT NULL,
    [AwardAmount]               DECIMAL (18, 2) CONSTRAINT [DF_PerfectAttendanceDetail_AwardAmount] DEFAULT ((0)) NOT NULL,
    [StartDateTime]             DATETIME        CONSTRAINT [DF_PerfectAttendanceDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]               DATETIME        CONSTRAINT [DF_PerfectAttendanceDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]                DATETIME        CONSTRAINT [DF_PerfectAttendanceDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                INT             CONSTRAINT [DF_PerfectAttendanceDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PerfectAttendanceDetail1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PerfectAttendanceDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PerfectAttendanceDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PerfectAttendanceDetail] ([ID], [PerfectAttendanceDetailID], [PointsTrackingRuleID], [Duration], [RangeType], [AwardAmount], [StartDateTime], [EndDateTime], [ModifiedOn], [ModifiedBy])
        SELECT   [ID],
                 [PerfectAttendanceDetailID],
                 [PointsTrackingRuleID],
                 [Duration],
                 [RangeType],
                 [AwardAmount],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[PerfectAttendanceDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PerfectAttendanceDetail] OFF;
    END

DROP TABLE [dbo].[PerfectAttendanceDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PerfectAttendanceDetail]', N'PerfectAttendanceDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PerfectAttendanceDetail1]', N'PK_PerfectAttendanceDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingData] (
    [PointsTrackingDataID]           INT             IDENTITY (1, 1) NOT NULL,
    [TimeSlicePostExceptionDetailID] INT             CONSTRAINT [DF_PointsTrackingData_TimeSlicePostExceptionDetailID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingRuleID]           INT             CONSTRAINT [DF_PointsTrackingData_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [UserID]                         INT             CONSTRAINT [DF_PointsTrackingData_UserID] DEFAULT ((0)) NOT NULL,
    [Points]                         DECIMAL (18, 2) CONSTRAINT [DF_PointsTrackingData_Points] DEFAULT ((0)) NOT NULL,
    [TimeSlicePostID]                INT             CONSTRAINT [DF_PointsTrackingData_TimeSlicePostID] DEFAULT ((0)) NOT NULL,
    [ApplyToDate]                    DATETIME        CONSTRAINT [DF_PointsTrackingData_ApplyToDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [HashKey]                        VARCHAR (MAX)   CONSTRAINT [DF_PointsTrackingData_HashKey] DEFAULT ('') NOT NULL,
    [ModifiedOn]                     DATETIME        CONSTRAINT [DF_PointsTrackingData_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                     INT             CONSTRAINT [DF_PointsTrackingData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ExceptionPolicyRuleID]          INT             CONSTRAINT [DF_PointsTrackingData_ExceptionPolicyRuleID] DEFAULT ((0)) NOT NULL,
    [PointsSource]                   INT             CONSTRAINT [DF_PointsTrackingData_PointsSource] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreModifierID]         INT             CONSTRAINT [DF_PointsTrackingData_TimeSlicePreModifierID] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreID]                 INT             CONSTRAINT [DF_PointsTrackingData_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [IsExcused]                      BIT             CONSTRAINT [DF_PointsTrackingData_IsExcused] DEFAULT ((0)) NOT NULL,
    [IsModified]                     BIT             CONSTRAINT [DF_PointsTrackingData_IsModified] DEFAULT ((0)) NOT NULL,
    [Note]                           NVARCHAR (MAX)  CONSTRAINT [DF_PointsTrackingData_Note] DEFAULT ('') NOT NULL,
    [IsNotified]                     BIT             CONSTRAINT [DF_PointsTrackingData_IsNotified] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingData1] PRIMARY KEY CLUSTERED ([PointsTrackingDataID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingData] ([PointsTrackingDataID], [TimeSlicePostExceptionDetailID], [PointsTrackingRuleID], [UserID], [Points], [TimeSlicePostID], [ApplyToDate], [HashKey], [ModifiedOn], [ModifiedBy], [ExceptionPolicyRuleID], [PointsSource], [TimeSlicePreModifierID], [TimeSlicePreID], [IsExcused], [IsModified], [Note], [IsNotified])
        SELECT   [PointsTrackingDataID],
                 [TimeSlicePostExceptionDetailID],
                 [PointsTrackingRuleID],
                 [UserID],
                 [Points],
                 [TimeSlicePostID],
                 [ApplyToDate],
                 [HashKey],
                 [ModifiedOn],
                 [ModifiedBy],
                 [ExceptionPolicyRuleID],
                 [PointsSource],
                 [TimeSlicePreModifierID],
                 [TimeSlicePreID],
                 [IsExcused],
                 [IsModified],
                 [Note],
                 [IsNotified]
        FROM     [dbo].[PointsTrackingData]
        ORDER BY [PointsTrackingDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingData] OFF;
    END

DROP TABLE [dbo].[PointsTrackingData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingData]', N'PointsTrackingData';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingData1]', N'PK_PointsTrackingData', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingDetail] (
    [PointsTrackingDetailID] INT             IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT             CONSTRAINT [DF_PointsTrackingDetail_UserID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingNoticeID] INT             CONSTRAINT [DF_PointsTrackingDetail_PointsTrackingNoticeID] DEFAULT ((0)) NOT NULL,
    [Points]                 DECIMAL (18, 2) CONSTRAINT [DF_PointsTrackingDetail_Points] DEFAULT ((0)) NOT NULL,
    [PointsTrackingRuleID]   INT             CONSTRAINT [DF_PointsTrackingDetail_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [ThresholdCrossed]       BIT             CONSTRAINT [DF_PointsTrackingDetail_IsOverThreshold] DEFAULT ((0)) NOT NULL,
    [NotifiedOn]             DATETIME        CONSTRAINT [DF_PointsTrackingDetail_NotifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT             CONSTRAINT [DF_PointsTrackingDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME        CONSTRAINT [DF_PointsTrackingDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [HelpFile]               VARBINARY (MAX) NULL,
    [HelpFileName]           NVARCHAR (50)   CONSTRAINT [DF_PointsTrackingDetail_HelpFileName] DEFAULT ((0)) NOT NULL,
    [NotificationDiscussed]  BIT             CONSTRAINT [DF_PointsTrackingDetail_NotificationDiscussed] DEFAULT ((0)) NOT NULL,
    [StatusType]             INT             CONSTRAINT [DF_PointsTrackingDetail_StatusType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingDetail1] PRIMARY KEY CLUSTERED ([PointsTrackingDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingDetail] ([PointsTrackingDetailID], [UserID], [PointsTrackingNoticeID], [Points], [PointsTrackingRuleID], [ThresholdCrossed], [NotifiedOn], [ModifiedBy], [ModifiedOn], [HelpFile], [HelpFileName], [NotificationDiscussed], [StatusType])
        SELECT   [PointsTrackingDetailID],
                 [UserID],
                 [PointsTrackingNoticeID],
                 [Points],
                 [PointsTrackingRuleID],
                 [ThresholdCrossed],
                 [NotifiedOn],
                 [ModifiedBy],
                 [ModifiedOn],
                 [HelpFile],
                 [HelpFileName],
                 [NotificationDiscussed],
                 [StatusType]
        FROM     [dbo].[PointsTrackingDetail]
        ORDER BY [PointsTrackingDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingDetail] OFF;
    END

DROP TABLE [dbo].[PointsTrackingDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingDetail]', N'PointsTrackingDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingDetail1]', N'PK_PointsTrackingDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingNotice]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingNotice] (
    [ID]                         INT             IDENTITY (1, 1) NOT NULL,
    [PointsTrackingNoticeID]     INT             CONSTRAINT [DF_PointsTrackingNotice_PointsTrackingNoticeID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingPolicyID]     INT             CONSTRAINT [DF_PointsTrackingNotice_PointsTrackingPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]              DATETIME        CONSTRAINT [DF_PointsTrackingNotice_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME        CONSTRAINT [DF_PointsTrackingNotice_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [NoticeName]                 NVARCHAR (50)   CONSTRAINT [DF_PointsTrackingNotice_NoticeName] DEFAULT ('') NOT NULL,
    [RecipientType]              INT             CONSTRAINT [DF_PointsTrackingNotice_RecipientType] DEFAULT ((0)) NOT NULL,
    [Threshold]                  DECIMAL (18, 2) CONSTRAINT [DF_PointsTrackingNotice_Threshold] DEFAULT ((0)) NOT NULL,
    [RollingPeriodDuration]      INT             CONSTRAINT [DF_PointsTrackingNotice_RollingDays] DEFAULT ((0)) NOT NULL,
    [ActionType]                 INT             CONSTRAINT [DF_PointsTrackingNotice_ActionType] DEFAULT ((0)) NOT NULL,
    [AttachHelpFileEnabled]      BIT             CONSTRAINT [DF_PointsTrackingNotice_AttachHelpFileEnabled] DEFAULT ((0)) NOT NULL,
    [NoticeText]                 NVARCHAR (MAX)  CONSTRAINT [DF_PointsTrackingNotice_NoticeText] DEFAULT ('') NOT NULL,
    [HelpFile]                   VARBINARY (MAX) NULL,
    [HelpFileName]               NVARCHAR (50)   CONSTRAINT [DF_PointsTrackingNotice_HelpFileName] DEFAULT ('') NOT NULL,
    [ModifiedOn]                 DATETIME        CONSTRAINT [DF_PointsTrackingNotice_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                 INT             CONSTRAINT [DF_PointsTrackingNotice_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [RollingPeriodType]          INT             CONSTRAINT [DF_PointsTrackingNotice_RollingPeriodType] DEFAULT ((0)) NOT NULL,
    [NotifyAfterLowLevelEnabled] BIT             CONSTRAINT [DF_PointsTrackingNotice_NotifyAfterLowLevelEnabled] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingNotice1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingNotice])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingNotice] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingNotice] ([ID], [PointsTrackingNoticeID], [PointsTrackingPolicyID], [StartDateTime], [EndDateTime], [NoticeName], [RecipientType], [Threshold], [RollingPeriodDuration], [ActionType], [AttachHelpFileEnabled], [NoticeText], [HelpFile], [HelpFileName], [ModifiedOn], [ModifiedBy], [RollingPeriodType], [NotifyAfterLowLevelEnabled])
        SELECT   [ID],
                 [PointsTrackingNoticeID],
                 [PointsTrackingPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [NoticeName],
                 [RecipientType],
                 [Threshold],
                 [RollingPeriodDuration],
                 [ActionType],
                 [AttachHelpFileEnabled],
                 [NoticeText],
                 [HelpFile],
                 [HelpFileName],
                 [ModifiedOn],
                 [ModifiedBy],
                 [RollingPeriodType],
                 [NotifyAfterLowLevelEnabled]
        FROM     [dbo].[PointsTrackingNotice]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingNotice] OFF;
    END

DROP TABLE [dbo].[PointsTrackingNotice];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingNotice]', N'PointsTrackingNotice';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingNotice1]', N'PK_PointsTrackingNotice', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingNoticeDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingNoticeDetail] (
    [ID]                           INT      IDENTITY (1, 1) NOT NULL,
    [PointsTrackingNoticeDetailID] INT      CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingNoticeDetailID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingNoticeID]       INT      CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingNoticeID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingRuleID]         INT      CONSTRAINT [DF_PointsTrackingNoticeDetail_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                DATETIME CONSTRAINT [DF_PointsTrackingNoticeDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                  DATETIME CONSTRAINT [DF_PointsTrackingNoticeDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_PointsTrackingNoticeDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_PointsTrackingNoticeDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingNoticeDetail1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingNoticeDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingNoticeDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingNoticeDetail] ([ID], [PointsTrackingNoticeDetailID], [PointsTrackingNoticeID], [PointsTrackingRuleID], [StartDateTime], [EndDateTime], [ModifiedOn], [ModifiedBy])
        SELECT   [ID],
                 [PointsTrackingNoticeDetailID],
                 [PointsTrackingNoticeID],
                 [PointsTrackingRuleID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[PointsTrackingNoticeDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingNoticeDetail] OFF;
    END

DROP TABLE [dbo].[PointsTrackingNoticeDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingNoticeDetail]', N'PointsTrackingNoticeDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingNoticeDetail1]', N'PK_PointsTrackingNoticeDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingPolicy] (
    [ID]                       INT           IDENTITY (1, 1) NOT NULL,
    [PointsTrackingPolicyID]   INT           CONSTRAINT [DF_PointsTrackingPolicy_PointsTrackingPolicyID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingPolicyName] NVARCHAR (50) CONSTRAINT [DF_PointsTrackingPolicy_PointsTrackingPolicyName] DEFAULT ('') NOT NULL,
    [IsDeleted]                BIT           CONSTRAINT [DF_PointsTrackingPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]            DATETIME      CONSTRAINT [DF_PointsTrackingPolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]              DATETIME      CONSTRAINT [DF_PointsTrackingPolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]               INT           CONSTRAINT [DF_PointsTrackingPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME      CONSTRAINT [DF_PointsTrackingPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DesignatedPersonUserID]   INT           CONSTRAINT [DF_PointsTrackingPolicy_DesignatedUserID] DEFAULT ((0)) NOT NULL,
    [LocationLLID]             INT           CONSTRAINT [DF_PointsTrackingPolicy_LocationLLID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingPolicy1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingPolicy] ([ID], [PointsTrackingPolicyID], [PointsTrackingPolicyName], [IsDeleted], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [DesignatedPersonUserID], [LocationLLID])
        SELECT   [ID],
                 [PointsTrackingPolicyID],
                 [PointsTrackingPolicyName],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [DesignatedPersonUserID],
                 [LocationLLID]
        FROM     [dbo].[PointsTrackingPolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingPolicy] OFF;
    END

DROP TABLE [dbo].[PointsTrackingPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingPolicy]', N'PointsTrackingPolicy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingPolicy1]', N'PK_PointsTrackingPolicy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingPolicyAssign] (
    [PointsTrackingPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [PointsTrackingPolicyID]       INT      CONSTRAINT [DF_PointsTrackingPolicyAssign_PointsTrackingPolicyID] DEFAULT ((0)) NOT NULL,
    [UserID]                       INT      CONSTRAINT [DF_PointsTrackingPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                DATETIME CONSTRAINT [DF_PointsTrackingPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                  DATETIME CONSTRAINT [DF_PointsTrackingPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_PointsTrackingPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_PointsTrackingPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingPolicyAssign1] PRIMARY KEY CLUSTERED ([PointsTrackingPolicyAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingPolicyAssign] ([PointsTrackingPolicyAssignID], [PointsTrackingPolicyID], [UserID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [PointsTrackingPolicyAssignID],
                 [PointsTrackingPolicyID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PointsTrackingPolicyAssign]
        ORDER BY [PointsTrackingPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingPolicyAssign] OFF;
    END

DROP TABLE [dbo].[PointsTrackingPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingPolicyAssign]', N'PointsTrackingPolicyAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingPolicyAssign1]', N'PK_PointsTrackingPolicyAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingRule] (
    [ID]                     INT           IDENTITY (1, 1) NOT NULL,
    [PointsTrackingRuleID]   INT           CONSTRAINT [DF_PointsTrackingRule_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingPolicyID] INT           CONSTRAINT [DF_PointsTrackingRule_PointsTrackingPolicyID] DEFAULT ((0)) NOT NULL,
    [RuleName]               NVARCHAR (50) CONSTRAINT [DF_PointsTrackingRule_RuleName] DEFAULT ('') NOT NULL,
    [StartDateTime]          DATETIME      CONSTRAINT [DF_PointsTrackingRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]            DATETIME      CONSTRAINT [DF_PointsTrackingRule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT           CONSTRAINT [DF_PointsTrackingRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME      CONSTRAINT [DF_PointsTrackingRule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingRule1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingRule] ([ID], [PointsTrackingRuleID], [PointsTrackingPolicyID], [RuleName], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PointsTrackingRuleID],
                 [PointsTrackingPolicyID],
                 [RuleName],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PointsTrackingRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingRule] OFF;
    END

DROP TABLE [dbo].[PointsTrackingRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingRule]', N'PointsTrackingRule';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingRule1]', N'PK_PointsTrackingRule', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PointsTrackingRuleDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PointsTrackingRuleDetail] (
    [ID]                         INT             IDENTITY (1, 1) NOT NULL,
    [PointsTrackingRuleDetailID] INT             CONSTRAINT [DF_PointsTrackingRuleDetail_PointsTrackingRuleDetailID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingRuleID]       INT             CONSTRAINT [DF_PointsTrackingRuleDetail_PointsTrackingRuleID] DEFAULT ((0)) NOT NULL,
    [PointsTrackingPolicyID]     INT             NOT NULL,
    [ExceptionPolicyRuleID]      INT             CONSTRAINT [DF_PointsTrackingRuleDetail_ExceptionPolicyRuleID] DEFAULT ((0)) NOT NULL,
    [UnexcusedPoints]            DECIMAL (18, 2) CONSTRAINT [DF_PointsTrackingRuleDetail_Points] DEFAULT ((0)) NOT NULL,
    [StartDateTime]              DATETIME        CONSTRAINT [DF_PointsTrackingRuleDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME        CONSTRAINT [DF_PointsTrackingRuleDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                 INT             CONSTRAINT [DF_PointsTrackingRuleDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME        CONSTRAINT [DF_PointsTrackingRuleDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ExcusedPoints]              DECIMAL (18, 2) CONSTRAINT [DF_PointsTrackingRuleDetail_ExcusedPoints] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PointsTrackingRuleDetail1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PointsTrackingRuleDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingRuleDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PointsTrackingRuleDetail] ([ID], [PointsTrackingRuleDetailID], [PointsTrackingRuleID], [PointsTrackingPolicyID], [ExceptionPolicyRuleID], [UnexcusedPoints], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [ExcusedPoints])
        SELECT   [ID],
                 [PointsTrackingRuleDetailID],
                 [PointsTrackingRuleID],
                 [PointsTrackingPolicyID],
                 [ExceptionPolicyRuleID],
                 [UnexcusedPoints],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ExcusedPoints]
        FROM     [dbo].[PointsTrackingRuleDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PointsTrackingRuleDetail] OFF;
    END

DROP TABLE [dbo].[PointsTrackingRuleDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PointsTrackingRuleDetail]', N'PointsTrackingRuleDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PointsTrackingRuleDetail1]', N'PK_PointsTrackingRuleDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Preference]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Preference] (
    [PreferenceID]                   INT            IDENTITY (1, 1) NOT NULL,
    [PreferenceName]                 NVARCHAR (50)  CONSTRAINT [DF_Preference_PreferenceName] DEFAULT ('') NOT NULL,
    [PreferenceCode]                 NVARCHAR (50)  CONSTRAINT [DF_Preference_PreferenceCode] DEFAULT ('') NOT NULL,
    [DefaultThemeType]               INT            CONSTRAINT [DF_Preference_DefaultThemeType] DEFAULT ((0)) NOT NULL,
    [FullNameType]                   INT            CONSTRAINT [DF_Preference_FullNameType] DEFAULT ((0)) NOT NULL,
    [DateFormatType]                 INT            CONSTRAINT [DF_Preference_DateFormatType] DEFAULT ((0)) NOT NULL,
    [TimeFormatType]                 INT            CONSTRAINT [DF_Preference_TimeFormatType] DEFAULT ((0)) NOT NULL,
    [TimeDurationType]               INT            CONSTRAINT [DF_Preference_TimeDurationType] DEFAULT ((0)) NOT NULL,
    [SessionTimeoutSecs]             INT            CONSTRAINT [DF_Preference_SessionTimeoutSecs] DEFAULT ((0)) NOT NULL,
    [LLDetailDisplayType]            INT            CONSTRAINT [DF_Preference_LLDetailDisplayType] DEFAULT ((0)) NOT NULL,
    [AllowPreferenceOverride]        BIT            CONSTRAINT [DF_Preference_AllowPreferenceOverride] DEFAULT ((0)) NOT NULL,
    [AllowViewStatusBoard]           BIT            CONSTRAINT [DF_Preference_AllowViewStatusBoard] DEFAULT ((0)) NOT NULL,
    [StatusBoardEmpDisplayType]      INT            CONSTRAINT [DF_Preference_StatusBoardEmpDisplayType] DEFAULT ((0)) NOT NULL,
    [StatusBoardNotesEnabled]        BIT            CONSTRAINT [DF_Preference_StatusBoardNotesEnabled] DEFAULT ((0)) NOT NULL,
    [StatusBoardPunchTimeEnabled]    BIT            CONSTRAINT [DF_Preference_StatusBoardPunchTimeEnabled] DEFAULT ((0)) NOT NULL,
    [ReadMessageButtonEnabled]       BIT            CONSTRAINT [DF_Preference_ReadMessageButtonEnabled] DEFAULT ((0)) NOT NULL,
    [DefaultToClockOutAfterClockIn]  BIT            CONSTRAINT [DF_Preference_DefaultToClockOutAfterClockIn] DEFAULT ((0)) NOT NULL,
    [AllowChangePassword]            BIT            CONSTRAINT [DF_Preference_AllowChangePassword] DEFAULT ((0)) NOT NULL,
    [AllowMgrApprovedPunchEdit]      BIT            CONSTRAINT [DF_Preference_AllowMgrApprovedPunchEdit] DEFAULT ((0)) NOT NULL,
    [ReplaceSchedTimesheetWithTOR]   BIT            CONSTRAINT [DF_Preference_ReplaceSchedTimesheetWithTOR] DEFAULT ((0)) NOT NULL,
    [ApplyScheduledLLsSecs]          INT            CONSTRAINT [DF_Preference_ApplyScheduledLLsSecs] DEFAULT ((0)) NOT NULL,
    [RestrictToScheduleSecs]         INT            CONSTRAINT [DF_Preference_RestrictToScheduleSecs] DEFAULT ((0)) NOT NULL,
    [ActionEnabled]                  BIT            CONSTRAINT [DF_Preference_ActionEnabled] DEFAULT ((0)) NOT NULL,
    [ActionPunchEnabled]             BIT            CONSTRAINT [DF_Preference_ActionPunchEnabled] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetEntryEnabled]    BIT            CONSTRAINT [DF_Preference_ActionTimesheetEntryEnabled] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetEntryFormatType] INT            CONSTRAINT [DF_Preference_ActionTimesheetEntryFormatType] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetEntryType]       INT            CONSTRAINT [DF_Preference_ActionTimesheetEntryType] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetHasRegOTEntry]   BIT            CONSTRAINT [DF_Preference_ActionTimesheetHasRegOTEntry] DEFAULT ((0)) NOT NULL,
    [ActionPeriodEntryEnabled]       BIT            CONSTRAINT [DF_Preference_ActionPeriodEntryEnabled] DEFAULT ((0)) NOT NULL,
    [ActionPeriodEntryHasCopyFormat] BIT            CONSTRAINT [DF_Preference_ActionPeriodEntryHasCopyFormat] DEFAULT ((0)) NOT NULL,
    [ActionPeriodEntryType]          INT            CONSTRAINT [DF_Preference_ActionPeriodEntryType] DEFAULT ((0)) NOT NULL,
    [ActionPeriodHasRegOTEntry]      BIT            CONSTRAINT [DF_Preference_ActionPeriodHasRegOTEntry] DEFAULT ((0)) NOT NULL,
    [ActionTempEntryEnabled]         BIT            CONSTRAINT [DF_Preference_ActionTempEntryEnabled] DEFAULT ((0)) NOT NULL,
    [ActionTempEntryCopyFormat]      BIT            CONSTRAINT [DF_Preference_ActionTempEntryCopyFormat] DEFAULT ((0)) NOT NULL,
    [ActionTempEntryType]            INT            CONSTRAINT [DF_Preference_ActionTempEntryType] DEFAULT ((0)) NOT NULL,
    [ActionTempHasRegOTEntry]        BIT            CONSTRAINT [DF_Preference_ActionTempHasRegOTEntry] DEFAULT ((0)) NOT NULL,
    [ActionTempHasEmpEdit]           BIT            CONSTRAINT [DF_Preference_ActionTempHasEmpEdit] DEFAULT ((0)) NOT NULL,
    [ActionTempPopulateFromSchedule] BIT            CONSTRAINT [DF_Preference_ActionTempPopulateFromSchedule] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetEntryLimitTypes] BIT            CONSTRAINT [DF_Preference_ActionTimesheetEntryLimitTypes] DEFAULT ((0)) NOT NULL,
    [ActionPeriodEntryLimitTypes]    BIT            CONSTRAINT [DF_Preference_ActionPeriodEntryLimitTypes] DEFAULT ((0)) NOT NULL,
    [ActionTempEntryLimitTypes]      BIT            CONSTRAINT [DF_Preference_ActionTempEntryLimitTypes] DEFAULT ((0)) NOT NULL,
    [ScheduleEnabled]                BIT            CONSTRAINT [DF_Preference_ScheduleEnabled] DEFAULT ((0)) NOT NULL,
    [ScheduleDefaultViewType]        INT            CONSTRAINT [DF_Preference_ScheduleDefaultViewType] DEFAULT ((0)) NOT NULL,
    [TimeOffEnabled]                 BIT            CONSTRAINT [DF_Preference_TimeOffEnabled] DEFAULT ((0)) NOT NULL,
    [TOREnabled]                     BIT            CONSTRAINT [DF_Preference_TOREnabled] DEFAULT ((0)) NOT NULL,
    [AllowViewTORCalender]           BIT            CONSTRAINT [DF_Preference_AllowViewTORCalender] DEFAULT ((0)) NOT NULL,
    [TORCalenderEmpGroupType]        INT            CONSTRAINT [DF_Preference_TORCalenderEmpGroupType] DEFAULT ((0)) NOT NULL,
    [TimeCardEnabled]                BIT            CONSTRAINT [DF_Preference_TimeCardEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardApprovalsEnabled]       BIT            CONSTRAINT [DF_Preference_TimeCardApprovalsEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardDefaultPeriodType]      INT            CONSTRAINT [DF_Preference_TimeCardDefaultPeriodType] DEFAULT ((0)) NOT NULL,
    [ReportsEnabled]                 BIT            CONSTRAINT [DF_Preference_ReportsEnabled] DEFAULT ((0)) NOT NULL,
    [EmpInfoModalDisabled]           BIT            CONSTRAINT [DF_Preference_EmpInfoModalDisabled] DEFAULT ((0)) NOT NULL,
    [DisplayMissingPunchesScreen]    BIT            CONSTRAINT [DF_Preference_DisplayMissingPunchesScreen] DEFAULT ((0)) NOT NULL,
    [EmpLinkToViewType]              INT            CONSTRAINT [DF_Preference_EmpLinkToViewType] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoEnabled]            BIT            CONSTRAINT [DF_Preference_TimeCardInfoEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column2Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column2Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column2Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column2Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column3Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column3Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column3Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column3Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column4Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column4Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column4Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column4Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column5Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column5Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow1Column5Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow1Column5Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column1Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column1Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column1Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column1Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column2Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column2Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column2Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column2Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column3Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column3Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column3Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column3Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column4Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column4Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column4Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column4Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column5Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column5Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow2Column5Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow2Column5Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column1Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column1Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column1Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column1Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column2Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column2Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column2Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column2Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column3Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column3Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column3Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column3Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column4Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column4Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column4Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column4Value] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column5Type]    INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column5Type] DEFAULT ((0)) NOT NULL,
    [TimeCardInfoRow3Column5Value]   INT            CONSTRAINT [DF_Preference_TimeCardInfoRow3Column5Value] DEFAULT ((0)) NOT NULL,
    [MgrInfoModalDisabled]           BIT            CONSTRAINT [DF_Preference_MgrInfoModalDisabled] DEFAULT ((0)) NOT NULL,
    [IsDefault]                      BIT            CONSTRAINT [DF_Preference_IsDefault] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME       CONSTRAINT [DF_Preference_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]                     INT            CONSTRAINT [DF_Preference_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [DisplayExceptionsScreen]        BIT            CONSTRAINT [DF_Preference_DisplayExceptionsScreen] DEFAULT ((0)) NOT NULL,
    [ActionPostShiftTransferEnabled] BIT            CONSTRAINT [DF_Preference_ActionPostShiftTransferEnabled] DEFAULT ((0)) NOT NULL,
    [AllowViewEmpNamesOnTORCalender] BIT            CONSTRAINT [DF_Preference_AllowViewEmpNamesOnTORCalender] DEFAULT ((0)) NOT NULL,
    [TimeCardSummaryViewEnabled]     BIT            CONSTRAINT [DF_Preference_TimeCardSummaryViewEnabled] DEFAULT ((0)) NOT NULL,
    [HideTransferOnEmpDash]          BIT            CONSTRAINT [DF_Preference_HideTransferOnEmpDash] DEFAULT ((0)) NOT NULL,
    [ActionTimesheetExpressEnabled]  BIT            CONSTRAINT [DF_Preference_ActionTimesheetExpressEnabled] DEFAULT ((0)) NOT NULL,
    [ActionDefaultDateRangeType]     INT            CONSTRAINT [DF_Preference_ActionDefaultDateRangeType] DEFAULT ((0)) NOT NULL,
    [ActionExpressEntryFormatType]   INT            CONSTRAINT [DF_Preference_ActionTimesheetExFormatType] DEFAULT ((0)) NOT NULL,
    [ActionExpressEntryType]         INT            CONSTRAINT [DF_Preference_ActionTimesheetExType] DEFAULT ((0)) NOT NULL,
    [ActionExpressHasRegOTEntry]     BIT            CONSTRAINT [DF_Preference_ActionTimesheetHasRegOTEx] DEFAULT ((0)) NOT NULL,
    [ActionExpressEntryLimitTypes]   BIT            CONSTRAINT [DF_Preference_ActionTimesheetExLimitTypes] DEFAULT ((0)) NOT NULL,
    [ActionExpressHasCopyFormat]     BIT            CONSTRAINT [DF_Preference_ActionTimeSheetExHasCopyFormat] DEFAULT ((0)) NOT NULL,
    [OnScreenWalkthroughEnabled]     BIT            CONSTRAINT [DF_Preference_OnScreenWalkthroughEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardMessageEnabled]         BIT            CONSTRAINT [DF_Preference_MessageBeforeTimeCardEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardMessage]                NVARCHAR (MAX) CONSTRAINT [DF_Preference_MessageBeforeTimeCardText] DEFAULT ('') NOT NULL,
    [TimeCardMessageButtonText]      NVARCHAR (20)  CONSTRAINT [DF_Preference_MessageBeforeTimeCard] DEFAULT ('') NOT NULL,
    [TimeCardApprovalMessageEnabled] BIT            CONSTRAINT [DF_Preference_TimeCardApprovalMessageEnabled] DEFAULT ((0)) NOT NULL,
    [TimeCardApprovalMessage]        NVARCHAR (100) CONSTRAINT [DF_Preference_TimeCardApprovalMessage] DEFAULT ('') NOT NULL,
    [AllowViewHolidayOnTORCalender]  BIT            CONSTRAINT [DF_Preference_AllowViewHolidayOnTORCalender] DEFAULT ((0)) NOT NULL,
    [TORCalendarSettingID]           INT            CONSTRAINT [DF_Preference_TORCalendarSettingID] DEFAULT ((0)) NOT NULL,
    [AssignProxyMgrEnabled]          BIT            CONSTRAINT [DF_Preference_AssignProxyMgrEnabled] DEFAULT ((0)) NOT NULL,
    [CompactModeEnabled]             BIT            CONSTRAINT [DF_Preference_CompactModeEnabled] DEFAULT ((0)) NOT NULL,
    [LLAutoCompleteEnabled]          BIT            CONSTRAINT [DF_Preference_LLAutoCompleteEnabled] DEFAULT ((0)) NOT NULL,
    [DefaultToSchedule]              BIT            CONSTRAINT [DF_Preference_DefaultToSchedule] DEFAULT ((0)) NOT NULL,
    [AllowArbitaryLLs]               BIT            CONSTRAINT [DF_Preference_AllowArbitaryLLs] DEFAULT ((0)) NOT NULL,
    [EmailForMessageDisabled]        BIT            CONSTRAINT [DF_Preference_EmailForMessageDisabled] DEFAULT ((0)) NOT NULL,
    [TimeCardOTDetailsEnabled]       BIT            CONSTRAINT [DF_Preference_TimeCardOTDetailsEnabled] DEFAULT ((0)) NOT NULL,
    [HideUnpaidHours]                BIT            CONSTRAINT [DF_Preference_HideUnpaidHours] DEFAULT ((0)) NOT NULL,
    [TimeCardShiftDiffDetailEnabled] BIT            CONSTRAINT [DF_Preference_TimeCardShiftDiffDetailEnabled] DEFAULT ((0)) NOT NULL,
    [ActionEnablePercentLLTimeEntry] BIT            CONSTRAINT [DF_Preference_ActionEnablePercentLLTimeEntry] DEFAULT ((0)) NOT NULL,
    [StatusBoardViewAllEmpEnabled]   BIT            CONSTRAINT [DF_Preference_StatusBoardViewAllEmpEnabled] DEFAULT ((0)) NOT NULL,
    [ExpandAllTimeCardsByDefault]    BIT            CONSTRAINT [DF_Preference_ExpandAllTimeCardsByDefault] DEFAULT ((0)) NOT NULL,
    [PunchLLPromptEnabled]           BIT            CONSTRAINT [DF_Preference_PunchLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [ClockInLLPromptEnabled]         BIT            CONSTRAINT [DF_Preference_ClockInLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [StartMealLLPromptEnabled]       BIT            CONSTRAINT [DF_Preference_StartMealLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [StartBreakLLPromptEnabled]      BIT            CONSTRAINT [DF_Preference_StartBreakLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [EndMealLLPromptEnabled]         BIT            CONSTRAINT [DF_Preference_EndMealLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [EndBreakLLPromptEnabled]        BIT            CONSTRAINT [DF_Preference_EndBreakLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [TransferLLPromptEnabled]        BIT            CONSTRAINT [DF_Preference_TransferLLPromptEnabled] DEFAULT ((0)) NOT NULL,
    [CurrencyLabel]                  NVARCHAR (5)   CONSTRAINT [DF_Preference_CurrencyLabel] DEFAULT ('$') NOT NULL,
    [EmailLanguagePreference]        VARCHAR (10)   CONSTRAINT [DF__Preferenc__Email__78958AE7] DEFAULT ('en-US') NOT NULL,
    [ArbitraryLaborLevelOffset]      INT            CONSTRAINT [DF_Preference_ArbitraryLaborLevelOffset] DEFAULT ((0)) NOT NULL,
    [EmpHomePayAdjustmentsLabel]     NVARCHAR (100) CONSTRAINT [DF_Preference_EmpHomePayAdjustmentsLabel] DEFAULT ('Pay Adjustments') NOT NULL,
    [DefaultMobileHomeViewType]      INT            CONSTRAINT [DF_Preference_DefaultMobileSiteViewType] DEFAULT ((0)) NOT NULL,
    [IsEditTimeSheetEntriesByHours]  BIT            CONSTRAINT [DF_Preference_IsEditTimeSheetEntriesByHours] DEFAULT ((0)) NOT NULL,
    [TimeCardApprovalPeriodType]     INT            CONSTRAINT [DF_Preference_TimeCardApprovalPeriodType] DEFAULT ((0)) NOT NULL,
    [IncludeMgrForMissingPunch]      BIT            CONSTRAINT [DF_Preference_IncludeMgrForMissingPunch] DEFAULT ((0)) NOT NULL,
    [IncludeMgrForExceptions]        BIT            CONSTRAINT [DF_Preference_IncludeMgrForExceptions] DEFAULT ((0)) NOT NULL,
    [MobTimeSheetHoursOnlyEnabled]   BIT            CONSTRAINT [DF_Preference_MobTimeSheetHoursOnlyEnabled] DEFAULT ((0)) NOT NULL,
    [CurrencyFormatType]             INT            CONSTRAINT [DF_Preference_CurrencyFormatType] DEFAULT ((4)) NOT NULL,
    [TimeCardApprovalButtonEnabled]  BIT            CONSTRAINT [DF_Preference_ApprovalButtonEnabled] DEFAULT ((0)) NOT NULL,
    [TORCalendarHomeLLs]             NVARCHAR (MAX) CONSTRAINT [DF_Preference_TORCalendarHomeLLs] DEFAULT ('') NOT NULL,
    [MessagesEnabled]                BIT            CONSTRAINT [DF_Preference_MessagesEnabled] DEFAULT ((1)) NOT NULL,
    [DontShowAknowledgedExceptions]  BIT            CONSTRAINT [DF_Preference_ViewAknowledgedExceptions] DEFAULT ((0)) NOT NULL,
    [ActionMatrixEntryEnabled]       BIT            CONSTRAINT [DF_Preference_ActionMatrixEntryEnabled] DEFAULT ((0)) NOT NULL,
    [ActionMatrixHasCopyFormat]      BIT            CONSTRAINT [DF_Preference_ActionMatrixHasCopyFormat] DEFAULT ((0)) NOT NULL,
    [ActionMatrixEntryType]          INT            CONSTRAINT [DF_Preference_ActionMatrixEntryType] DEFAULT ((0)) NOT NULL,
    [ActionMatrixHasRegOTEntry]      BIT            CONSTRAINT [DF_Preference_ActionMatrixHasRegOTEntry] DEFAULT ((0)) NOT NULL,
    [ActionMatrixEntryLimitTypes]    BIT            CONSTRAINT [DF_Preference_ActionMatrixEntryLimitTypes] DEFAULT ((0)) NOT NULL,
    [TimeCardDefaultToHomeLL]        BIT            CONSTRAINT [DF_Preference_TimeCardDefaultToHomeLL] DEFAULT ((0)) NOT NULL,
    [CustomTimeCardEnabled]          BIT            CONSTRAINT [DF_Preference_CustomTimeCardEnabled] DEFAULT ((0)) NOT NULL,
    [TimeGapRange]                   NVARCHAR (25)  CONSTRAINT [DF_Preference_TimeGapRange] DEFAULT ('1,24') NOT NULL,
    [MobileTimeSheetColumn1]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn1] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn2]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn2] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn3]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn3] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn4]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn4] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn5]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn5] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn6]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn6] DEFAULT ((0)) NOT NULL,
    [MobileTimeSheetColumn7]         INT            CONSTRAINT [DF_Preference_MobileTimeSheetColumn7] DEFAULT ((0)) NOT NULL,
    [MobileDisplayAllLLEnabled]      BIT            CONSTRAINT [DF_Preference_MobileDisplayAllLLEnabled] DEFAULT ((1)) NOT NULL,
    [CustomTimeCardShowMealBreak]    BIT            CONSTRAINT [DF_Preference_CustomTimeCardShowMealBreak] DEFAULT ((0)) NOT NULL,
    [UseHoursByDay]                  BIT            CONSTRAINT [Preference_UseHoursByDay_Default] DEFAULT ((0)) NOT NULL,
    [ShowOnlyActiveLLScheduleTemp]   BIT            CONSTRAINT [DF_Preference_ShowOnlyActiveLLScheduleTemp_1] DEFAULT ((0)) NOT NULL,
    [DefaultTimeCardToCurrentDate]   BIT            CONSTRAINT [DF_Preference_DefaultTimeCardToCurrentDate] DEFAULT ((0)) NOT NULL,
    [ViewAllEmpsOnTimeOffCalendar]   BIT            CONSTRAINT [DF_Preference_ViewAllEmpsOnTimeOffCalendar] DEFAULT ((0)) NOT NULL,
    [ViewEmpNamesOnTimeOffCalendar]  BIT            CONSTRAINT [DF_Preference_ViewEmpNamesOnTimeOffCalendar] DEFAULT ((0)) NOT NULL,
    [GroupShiftsByTransactionDate]   BIT            CONSTRAINT [DF_Preference_GroupShiftsByTransactionDate] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Preference1]
    ON [dbo].[tmp_ms_xx_Preference]([PreferenceID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Preference])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Preference] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Preference] ([PreferenceID], [PreferenceName], [PreferenceCode], [DefaultThemeType], [FullNameType], [DateFormatType], [TimeFormatType], [TimeDurationType], [SessionTimeoutSecs], [LLDetailDisplayType], [AllowPreferenceOverride], [AllowViewStatusBoard], [StatusBoardEmpDisplayType], [StatusBoardNotesEnabled], [StatusBoardPunchTimeEnabled], [ReadMessageButtonEnabled], [DefaultToClockOutAfterClockIn], [AllowChangePassword], [AllowMgrApprovedPunchEdit], [ReplaceSchedTimesheetWithTOR], [ApplyScheduledLLsSecs], [RestrictToScheduleSecs], [ActionEnabled], [ActionPunchEnabled], [ActionTimesheetEntryEnabled], [ActionTimesheetEntryFormatType], [ActionTimesheetEntryType], [ActionTimesheetHasRegOTEntry], [ActionPeriodEntryEnabled], [ActionPeriodEntryHasCopyFormat], [ActionPeriodEntryType], [ActionPeriodHasRegOTEntry], [ActionTempEntryEnabled], [ActionTempEntryCopyFormat], [ActionTempEntryType], [ActionTempHasRegOTEntry], [ActionTempHasEmpEdit], [ActionTempPopulateFromSchedule], [ActionTimesheetEntryLimitTypes], [ActionPeriodEntryLimitTypes], [ActionTempEntryLimitTypes], [ScheduleEnabled], [ScheduleDefaultViewType], [TimeOffEnabled], [TOREnabled], [AllowViewTORCalender], [TORCalenderEmpGroupType], [TimeCardEnabled], [TimeCardApprovalsEnabled], [TimeCardDefaultPeriodType], [ReportsEnabled], [EmpInfoModalDisabled], [DisplayMissingPunchesScreen], [EmpLinkToViewType], [TimeCardInfoEnabled], [TimeCardInfoRow1Column2Type], [TimeCardInfoRow1Column2Value], [TimeCardInfoRow1Column3Type], [TimeCardInfoRow1Column3Value], [TimeCardInfoRow1Column4Type], [TimeCardInfoRow1Column4Value], [TimeCardInfoRow1Column5Type], [TimeCardInfoRow1Column5Value], [TimeCardInfoRow2Column1Type], [TimeCardInfoRow2Column1Value], [TimeCardInfoRow2Column2Type], [TimeCardInfoRow2Column2Value], [TimeCardInfoRow2Column3Type], [TimeCardInfoRow2Column3Value], [TimeCardInfoRow2Column4Type], [TimeCardInfoRow2Column4Value], [TimeCardInfoRow2Column5Type], [TimeCardInfoRow2Column5Value], [TimeCardInfoRow3Column1Type], [TimeCardInfoRow3Column1Value], [TimeCardInfoRow3Column2Type], [TimeCardInfoRow3Column2Value], [TimeCardInfoRow3Column3Type], [TimeCardInfoRow3Column3Value], [TimeCardInfoRow3Column4Type], [TimeCardInfoRow3Column4Value], [TimeCardInfoRow3Column5Type], [TimeCardInfoRow3Column5Value], [MgrInfoModalDisabled], [IsDefault], [ModifiedOn], [ModifiedBy], [DisplayExceptionsScreen], [ActionPostShiftTransferEnabled], [AllowViewEmpNamesOnTORCalender], [TimeCardSummaryViewEnabled], [HideTransferOnEmpDash], [ActionTimesheetExpressEnabled], [ActionDefaultDateRangeType], [ActionExpressEntryFormatType], [ActionExpressEntryType], [ActionExpressHasRegOTEntry], [ActionExpressEntryLimitTypes], [ActionExpressHasCopyFormat], [OnScreenWalkthroughEnabled], [TimeCardMessageEnabled], [TimeCardMessage], [TimeCardMessageButtonText], [TimeCardApprovalMessageEnabled], [TimeCardApprovalMessage], [AllowViewHolidayOnTORCalender], [TORCalendarSettingID], [AssignProxyMgrEnabled], [CompactModeEnabled], [LLAutoCompleteEnabled], [DefaultToSchedule], [AllowArbitaryLLs], [EmailForMessageDisabled], [TimeCardOTDetailsEnabled], [HideUnpaidHours], [TimeCardShiftDiffDetailEnabled], [ActionEnablePercentLLTimeEntry], [StatusBoardViewAllEmpEnabled], [ExpandAllTimeCardsByDefault], [PunchLLPromptEnabled], [ClockInLLPromptEnabled], [StartMealLLPromptEnabled], [StartBreakLLPromptEnabled], [EndMealLLPromptEnabled], [EndBreakLLPromptEnabled], [TransferLLPromptEnabled], [CurrencyLabel], [EmailLanguagePreference], [ArbitraryLaborLevelOffset], [EmpHomePayAdjustmentsLabel], [DefaultMobileHomeViewType], [IsEditTimeSheetEntriesByHours], [TimeCardApprovalPeriodType], [IncludeMgrForMissingPunch], [IncludeMgrForExceptions], [MobTimeSheetHoursOnlyEnabled], [CurrencyFormatType], [TimeCardApprovalButtonEnabled], [TORCalendarHomeLLs], [MessagesEnabled], [DontShowAknowledgedExceptions], [ActionMatrixEntryEnabled], [ActionMatrixHasCopyFormat], [ActionMatrixEntryType], [ActionMatrixHasRegOTEntry], [ActionMatrixEntryLimitTypes], [TimeCardDefaultToHomeLL], [CustomTimeCardEnabled], [TimeGapRange], [MobileTimeSheetColumn1], [MobileTimeSheetColumn2], [MobileTimeSheetColumn3], [MobileTimeSheetColumn4], [MobileTimeSheetColumn5], [MobileTimeSheetColumn6], [MobileTimeSheetColumn7], [MobileDisplayAllLLEnabled], [CustomTimeCardShowMealBreak], [UseHoursByDay], [ShowOnlyActiveLLScheduleTemp], [DefaultTimeCardToCurrentDate])
        SELECT   [PreferenceID],
                 [PreferenceName],
                 [PreferenceCode],
                 [DefaultThemeType],
                 [FullNameType],
                 [DateFormatType],
                 [TimeFormatType],
                 [TimeDurationType],
                 [SessionTimeoutSecs],
                 [LLDetailDisplayType],
                 [AllowPreferenceOverride],
                 [AllowViewStatusBoard],
                 [StatusBoardEmpDisplayType],
                 [StatusBoardNotesEnabled],
                 [StatusBoardPunchTimeEnabled],
                 [ReadMessageButtonEnabled],
                 [DefaultToClockOutAfterClockIn],
                 [AllowChangePassword],
                 [AllowMgrApprovedPunchEdit],
                 [ReplaceSchedTimesheetWithTOR],
                 [ApplyScheduledLLsSecs],
                 [RestrictToScheduleSecs],
                 [ActionEnabled],
                 [ActionPunchEnabled],
                 [ActionTimesheetEntryEnabled],
                 [ActionTimesheetEntryFormatType],
                 [ActionTimesheetEntryType],
                 [ActionTimesheetHasRegOTEntry],
                 [ActionPeriodEntryEnabled],
                 [ActionPeriodEntryHasCopyFormat],
                 [ActionPeriodEntryType],
                 [ActionPeriodHasRegOTEntry],
                 [ActionTempEntryEnabled],
                 [ActionTempEntryCopyFormat],
                 [ActionTempEntryType],
                 [ActionTempHasRegOTEntry],
                 [ActionTempHasEmpEdit],
                 [ActionTempPopulateFromSchedule],
                 [ActionTimesheetEntryLimitTypes],
                 [ActionPeriodEntryLimitTypes],
                 [ActionTempEntryLimitTypes],
                 [ScheduleEnabled],
                 [ScheduleDefaultViewType],
                 [TimeOffEnabled],
                 [TOREnabled],
                 [AllowViewTORCalender],
                 [TORCalenderEmpGroupType],
                 [TimeCardEnabled],
                 [TimeCardApprovalsEnabled],
                 [TimeCardDefaultPeriodType],
                 [ReportsEnabled],
                 [EmpInfoModalDisabled],
                 [DisplayMissingPunchesScreen],
                 [EmpLinkToViewType],
                 [TimeCardInfoEnabled],
                 [TimeCardInfoRow1Column2Type],
                 [TimeCardInfoRow1Column2Value],
                 [TimeCardInfoRow1Column3Type],
                 [TimeCardInfoRow1Column3Value],
                 [TimeCardInfoRow1Column4Type],
                 [TimeCardInfoRow1Column4Value],
                 [TimeCardInfoRow1Column5Type],
                 [TimeCardInfoRow1Column5Value],
                 [TimeCardInfoRow2Column1Type],
                 [TimeCardInfoRow2Column1Value],
                 [TimeCardInfoRow2Column2Type],
                 [TimeCardInfoRow2Column2Value],
                 [TimeCardInfoRow2Column3Type],
                 [TimeCardInfoRow2Column3Value],
                 [TimeCardInfoRow2Column4Type],
                 [TimeCardInfoRow2Column4Value],
                 [TimeCardInfoRow2Column5Type],
                 [TimeCardInfoRow2Column5Value],
                 [TimeCardInfoRow3Column1Type],
                 [TimeCardInfoRow3Column1Value],
                 [TimeCardInfoRow3Column2Type],
                 [TimeCardInfoRow3Column2Value],
                 [TimeCardInfoRow3Column3Type],
                 [TimeCardInfoRow3Column3Value],
                 [TimeCardInfoRow3Column4Type],
                 [TimeCardInfoRow3Column4Value],
                 [TimeCardInfoRow3Column5Type],
                 [TimeCardInfoRow3Column5Value],
                 [MgrInfoModalDisabled],
                 [IsDefault],
                 [ModifiedOn],
                 [ModifiedBy],
                 [DisplayExceptionsScreen],
                 [ActionPostShiftTransferEnabled],
                 [AllowViewEmpNamesOnTORCalender],
                 [TimeCardSummaryViewEnabled],
                 [HideTransferOnEmpDash],
                 [ActionTimesheetExpressEnabled],
                 [ActionDefaultDateRangeType],
                 [ActionExpressEntryFormatType],
                 [ActionExpressEntryType],
                 [ActionExpressHasRegOTEntry],
                 [ActionExpressEntryLimitTypes],
                 [ActionExpressHasCopyFormat],
                 [OnScreenWalkthroughEnabled],
                 [TimeCardMessageEnabled],
                 [TimeCardMessage],
                 [TimeCardMessageButtonText],
                 [TimeCardApprovalMessageEnabled],
                 [TimeCardApprovalMessage],
                 [AllowViewHolidayOnTORCalender],
                 [TORCalendarSettingID],
                 [AssignProxyMgrEnabled],
                 [CompactModeEnabled],
                 [LLAutoCompleteEnabled],
                 [DefaultToSchedule],
                 [AllowArbitaryLLs],
                 [EmailForMessageDisabled],
                 [TimeCardOTDetailsEnabled],
                 [HideUnpaidHours],
                 [TimeCardShiftDiffDetailEnabled],
                 [ActionEnablePercentLLTimeEntry],
                 [StatusBoardViewAllEmpEnabled],
                 [ExpandAllTimeCardsByDefault],
                 [PunchLLPromptEnabled],
                 [ClockInLLPromptEnabled],
                 [StartMealLLPromptEnabled],
                 [StartBreakLLPromptEnabled],
                 [EndMealLLPromptEnabled],
                 [EndBreakLLPromptEnabled],
                 [TransferLLPromptEnabled],
                 [CurrencyLabel],
                 [EmailLanguagePreference],
                 [ArbitraryLaborLevelOffset],
                 [EmpHomePayAdjustmentsLabel],
                 [DefaultMobileHomeViewType],
                 [IsEditTimeSheetEntriesByHours],
                 [TimeCardApprovalPeriodType],
                 [IncludeMgrForMissingPunch],
                 [IncludeMgrForExceptions],
                 [MobTimeSheetHoursOnlyEnabled],
                 [CurrencyFormatType],
                 [TimeCardApprovalButtonEnabled],
                 [TORCalendarHomeLLs],
                 [MessagesEnabled],
                 [DontShowAknowledgedExceptions],
                 [ActionMatrixEntryEnabled],
                 [ActionMatrixHasCopyFormat],
                 [ActionMatrixEntryType],
                 [ActionMatrixHasRegOTEntry],
                 [ActionMatrixEntryLimitTypes],
                 [TimeCardDefaultToHomeLL],
                 [CustomTimeCardEnabled],
                 [TimeGapRange],
                 [MobileTimeSheetColumn1],
                 [MobileTimeSheetColumn2],
                 [MobileTimeSheetColumn3],
                 [MobileTimeSheetColumn4],
                 [MobileTimeSheetColumn5],
                 [MobileTimeSheetColumn6],
                 [MobileTimeSheetColumn7],
                 [MobileDisplayAllLLEnabled],
                 [CustomTimeCardShowMealBreak],
                 [UseHoursByDay],
                 [ShowOnlyActiveLLScheduleTemp],
                 [DefaultTimeCardToCurrentDate]
        FROM     [dbo].[Preference]
        ORDER BY [PreferenceID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Preference] OFF;
    END

DROP TABLE [dbo].[Preference];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Preference]', N'Preference';

EXECUTE sp_rename N'[dbo].[Preference].[tmp_ms_xx_index_PK_Preference1]', N'PK_Preference', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Preference].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Preference]([PreferenceName] ASC, [PreferenceCode] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceActionsEntryPayType]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceActionsEntryPayType] (
    [ID]                INT      IDENTITY (1, 1) NOT NULL,
    [PreferenceID]      INT      CONSTRAINT [DF_PreferenceActionsEntryPayType_PreferenceID] DEFAULT ((0)) NOT NULL,
    [ActionSectionType] INT      CONSTRAINT [DF_PreferenceActionsEntryPayType_ActionSectionType] DEFAULT ((0)) NOT NULL,
    [PayTypeID]         INT      CONSTRAINT [DF_PreferenceActionsEntryPayType_PayTypeID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_PreferenceActionsEntryPayType_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_PreferenceActionsEntryPayType_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceActionsEntryPayType1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceActionsEntryPayType])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceActionsEntryPayType] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceActionsEntryPayType] ([ID], [PreferenceID], [ActionSectionType], [PayTypeID], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PreferenceID],
                 [ActionSectionType],
                 [PayTypeID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceActionsEntryPayType]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceActionsEntryPayType] OFF;
    END

DROP TABLE [dbo].[PreferenceActionsEntryPayType];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceActionsEntryPayType]', N'PreferenceActionsEntryPayType';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceActionsEntryPayType1]', N'PK_PreferenceActionsEntryPayType', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PreferenceActionsEntryPayType]([PreferenceID] ASC, [ActionSectionType] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceArbitaryLLs]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceArbitaryLLs] (
    [ID]           INT      IDENTITY (1, 1) NOT NULL,
    [PreferenceID] INT      CONSTRAINT [DF_PreferenceArbitaryLLs_PreferenceID] DEFAULT ((0)) NOT NULL,
    [LLID]         INT      CONSTRAINT [DF_PreferenceArbitaryLLs_LLID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]   INT      CONSTRAINT [DF_PreferenceArbitaryLLs_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]   DATETIME CONSTRAINT [DF_PreferenceArbitaryLLs_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceArbitaryLLs1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceArbitaryLLs])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceArbitaryLLs] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceArbitaryLLs] ([ID], [PreferenceID], [LLID], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [PreferenceID],
                 [LLID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceArbitaryLLs]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceArbitaryLLs] OFF;
    END

DROP TABLE [dbo].[PreferenceArbitaryLLs];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceArbitaryLLs]', N'PreferenceArbitaryLLs';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceArbitaryLLs1]', N'PK_PreferenceArbitaryLLs', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PreferenceArbitaryLLs]([PreferenceID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceNotificationsSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceNotificationsSetting] (
    [PreferenceNotificationsSettingID] INT            IDENTITY (1, 1) NOT NULL,
    [PreferenceID]                     INT            CONSTRAINT [DF_PeferenceNotificationsSetting_PreferenceID] DEFAULT ((0)) NOT NULL,
    [NotificationType]                 INT            CONSTRAINT [DF_PreferenceNotificationsSetting_NotificationType] DEFAULT ((0)) NOT NULL,
    [EmpSelectionType]                 INT            CONSTRAINT [DF_PeferenceNotificationsSetting_UserSelectionType] DEFAULT ((0)) NOT NULL,
    [FilterID]                         INT            CONSTRAINT [DF_PeferenceNotificationsSetting_FilterID] DEFAULT ((0)) NOT NULL,
    [FilterData]                       NVARCHAR (MAX) CONSTRAINT [DF_PeferenceNotificationsSetting_FilterData] DEFAULT ('') NOT NULL,
    [ModifiedBy]                       INT            CONSTRAINT [DF_PeferenceNotificationsSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                       DATETIME       CONSTRAINT [DF_PeferenceNotificationsSetting_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [NotificationSettingType]          INT            CONSTRAINT [DF_PreferenceNotificationsSetting_NotificationSettingType] DEFAULT ((0)) NOT NULL,
    [UserID]                           INT            CONSTRAINT [DF_PreferenceNotificationsSetting_UserID] DEFAULT ((0)) NOT NULL,
    [ShowAllEmpsInDetailScreen]        BIT            CONSTRAINT [DF_PreferenceNotificationsSetting_ShowAllEmployeesInDetailScreen] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PeferenceNotificatonsSetting1] PRIMARY KEY CLUSTERED ([PreferenceNotificationsSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceNotificationsSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceNotificationsSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceNotificationsSetting] ([PreferenceNotificationsSettingID], [PreferenceID], [NotificationType], [EmpSelectionType], [FilterID], [FilterData], [ModifiedBy], [ModifiedOn], [NotificationSettingType], [UserID], [ShowAllEmpsInDetailScreen])
        SELECT   [PreferenceNotificationsSettingID],
                 [PreferenceID],
                 [NotificationType],
                 [EmpSelectionType],
                 [FilterID],
                 [FilterData],
                 [ModifiedBy],
                 [ModifiedOn],
                 [NotificationSettingType],
                 [UserID],
                 [ShowAllEmpsInDetailScreen]
        FROM     [dbo].[PreferenceNotificationsSetting]
        ORDER BY [PreferenceNotificationsSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceNotificationsSetting] OFF;
    END

DROP TABLE [dbo].[PreferenceNotificationsSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceNotificationsSetting]', N'PreferenceNotificationsSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PeferenceNotificatonsSetting1]', N'PK_PeferenceNotificatonsSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceProxyMgr]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceProxyMgr] (
    [PreferenceProxyMgrID] INT      IDENTITY (1, 1) NOT NULL,
    [MgrUserID]            INT      CONSTRAINT [DF_PreferenceProxyMgr_MgrUserID] DEFAULT ((0)) NOT NULL,
    [ProxyMgrUserID]       INT      CONSTRAINT [DF_PreferenceProxyMgr_ProxyMgrUserID] DEFAULT ((0)) NOT NULL,
    [StartDate]            DATETIME CONSTRAINT [DF_PreferenceProxyMgr_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]              DATETIME CONSTRAINT [DF_PreferenceProxyMgr_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_PreferenceProxyMgr_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_PreferenceProxyMgr_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceProxyMgr1] PRIMARY KEY CLUSTERED ([PreferenceProxyMgrID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceProxyMgr])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceProxyMgr] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceProxyMgr] ([PreferenceProxyMgrID], [MgrUserID], [ProxyMgrUserID], [StartDate], [EndDate], [ModifiedBy], [ModifiedOn])
        SELECT   [PreferenceProxyMgrID],
                 [MgrUserID],
                 [ProxyMgrUserID],
                 [StartDate],
                 [EndDate],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceProxyMgr]
        ORDER BY [PreferenceProxyMgrID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceProxyMgr] OFF;
    END

DROP TABLE [dbo].[PreferenceProxyMgr];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceProxyMgr]', N'PreferenceProxyMgr';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceProxyMgr1]', N'PK_PreferenceProxyMgr', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceReportAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceReportAssign] (
    [PreferenceReportAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [PreferenceID]             INT      CONSTRAINT [DF_PreferenceReportAssign_PreferenceID] DEFAULT ((0)) NOT NULL,
    [ReportID]                 INT      CONSTRAINT [DF_PreferenceReportAssign_ReportID] DEFAULT ((0)) NOT NULL,
    [ReportSettingID]          INT      CONSTRAINT [DF_PreferenceReportAssign_ReportSettingID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_PreferenceReportAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_PreferenceReportAssign_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceReportAssign1] PRIMARY KEY CLUSTERED ([PreferenceReportAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceReportAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceReportAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceReportAssign] ([PreferenceReportAssignID], [PreferenceID], [ReportID], [ReportSettingID], [ModifiedBy], [ModifiedOn])
        SELECT   [PreferenceReportAssignID],
                 [PreferenceID],
                 [ReportID],
                 [ReportSettingID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceReportAssign]
        ORDER BY [PreferenceReportAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceReportAssign] OFF;
    END

DROP TABLE [dbo].[PreferenceReportAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceReportAssign]', N'PreferenceReportAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceReportAssign1]', N'PK_PreferenceReportAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PreferenceReportAssign]([PreferenceID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceTimeSheetTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceTimeSheetTemplate] (
    [PreferenceTimeSheetTemplateID] INT      IDENTITY (1, 1) NOT NULL,
    [PreferenceID]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_PreferenceID] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]               INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                     INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartTime]                     DATETIME CONSTRAINT [DF_PreferenceTimeSheetTemplate_StartTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Duration]                      INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_Duration] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]                   INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]                  INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_PreferenceTimeSheetTemplate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_PreferenceTimeSheetTemplate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceTimeSheetTemplate1] PRIMARY KEY CLUSTERED ([PreferenceTimeSheetTemplateID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceTimeSheetTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceTimeSheetTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceTimeSheetTemplate] ([PreferenceTimeSheetTemplateID], [PreferenceID], [OrdinalPosition], [PayTypeID], [StartTime], [Duration], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn])
        SELECT   [PreferenceTimeSheetTemplateID],
                 [PreferenceID],
                 [OrdinalPosition],
                 [PayTypeID],
                 [StartTime],
                 [Duration],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceTimeSheetTemplate]
        ORDER BY [PreferenceTimeSheetTemplateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceTimeSheetTemplate] OFF;
    END

DROP TABLE [dbo].[PreferenceTimeSheetTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceTimeSheetTemplate]', N'PreferenceTimeSheetTemplate';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceTimeSheetTemplate1]', N'PK_PreferenceTimeSheetTemplate', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PreferenceTimeSheetTemplate]([PreferenceID] ASC, [OrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[PreferenceUserOverride]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PreferenceUserOverride] (
    [PreferenceUserOverrideID] INT           IDENTITY (1, 1) NOT NULL,
    [UserID]                   INT           CONSTRAINT [DF_PreferenceUserOverride_UserID] DEFAULT ((0)) NOT NULL,
    [FieldName]                NVARCHAR (50) CONSTRAINT [DF_PreferenceUserOverride_FieldName] DEFAULT ('') NOT NULL,
    [Value]                    NVARCHAR (50) CONSTRAINT [DF_PreferenceUserOverride_Value] DEFAULT ('') NOT NULL,
    [ModifiedBy]               INT           CONSTRAINT [DF_PreferenceUserOverride_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME      CONSTRAINT [DF_PreferenceUserOverride_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PreferenceUserOverride1] PRIMARY KEY CLUSTERED ([PreferenceUserOverrideID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PreferenceUserOverride])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceUserOverride] ON;
        INSERT INTO [dbo].[tmp_ms_xx_PreferenceUserOverride] ([PreferenceUserOverrideID], [UserID], [FieldName], [Value], [ModifiedBy], [ModifiedOn])
        SELECT   [PreferenceUserOverrideID],
                 [UserID],
                 [FieldName],
                 [Value],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[PreferenceUserOverride]
        ORDER BY [PreferenceUserOverrideID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_PreferenceUserOverride] OFF;
    END

DROP TABLE [dbo].[PreferenceUserOverride];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PreferenceUserOverride]', N'PreferenceUserOverride';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PreferenceUserOverride1]', N'PK_PreferenceUserOverride', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[PreferenceUserOverride]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Product]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Product] (
    [ProductID]               INT           IDENTITY (1, 1) NOT NULL,
    [SystemProductID]         INT           CONSTRAINT [DF_Product_SystemProductID] DEFAULT ((0)) NOT NULL,
    [StartDate]               DATETIME      CONSTRAINT [DF_Product_StartDate] DEFAULT (NULL) NULL,
    [EndDate]                 DATETIME      CONSTRAINT [DF_Product_EndDate] DEFAULT (NULL) NULL,
    [TargetStartDate]         DATETIME      CONSTRAINT [DF_Product_TargetStartDate] DEFAULT (NULL) NULL,
    [SetupValidationDate]     DATETIME      CONSTRAINT [DF_Product_SetupValidationDate] DEFAULT (NULL) NULL,
    [CancellationEnteredDate] DATETIME      CONSTRAINT [DF_Product_CancellationEnteredDate] DEFAULT (NULL) NULL,
    [Description]             VARCHAR (100) CONSTRAINT [DF_Product_Description] DEFAULT ('') NOT NULL,
    [StartDateTime]           DATETIME      CONSTRAINT [DF_Product_StartDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateTime]             DATETIME      CONSTRAINT [DF_Product_EndDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [IsDeleted]               BIT           CONSTRAINT [DF_Product_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT           CONSTRAINT [DF_Product_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME      CONSTRAINT [DF_Product_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Product1] PRIMARY KEY CLUSTERED ([ProductID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Product])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Product] ([ProductID], [SystemProductID], [StartDate], [EndDate], [TargetStartDate], [SetupValidationDate], [CancellationEnteredDate], [Description], [StartDateTime], [EndDateTime], [IsDeleted], [ModifiedBy], [ModifiedOn])
        SELECT   [ProductID],
                 [SystemProductID],
                 [StartDate],
                 [EndDate],
                 [TargetStartDate],
                 [SetupValidationDate],
                 [CancellationEnteredDate],
                 [Description],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[Product]
        ORDER BY [ProductID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Product] OFF;
    END

DROP TABLE [dbo].[Product];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Product]', N'Product';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Product1]', N'PK_Product', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_AlertProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_AlertProcess] (
    [AlertProcessID]    INT           IDENTITY (1, 1) NOT NULL,
    [AlertID]           INT           CONSTRAINT [DF_Queue_AlertProcess_AlertID] DEFAULT ((0)) NOT NULL,
    [UserIDToProcess]   INT           CONSTRAINT [DF_Queue_AlertProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [LanguageID]        VARCHAR (50)  CONSTRAINT [DF_Queue_AlertProcess_LanguageID] DEFAULT ('') NOT NULL,
    [ModifiedBy]        INT           CONSTRAINT [DF_Queue_AlertProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME      CONSTRAINT [DF_Queue_AlertProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [QueueID]           INT           CONSTRAINT [DF_Queue_AlertProcess_QueueID] DEFAULT ((0)) NOT NULL,
    [StartDate]         DATETIME      CONSTRAINT [DF_Queue_AlertProcess_StartDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndDate]           DATETIME      CONSTRAINT [DF_Queue_AlertProcess_EndDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [UserIDs]           VARCHAR (MAX) CONSTRAINT [DF_Queue_AlertProcess_UserIDs] DEFAULT ('') NOT NULL,
    [ProcessAlertTypes] VARCHAR (MAX) CONSTRAINT [DF_Queue_AlertProcess_ProcessAlertTypes] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_AlertProcess1] PRIMARY KEY CLUSTERED ([AlertProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_AlertProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_AlertProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_AlertProcess] ([AlertProcessID], [AlertID], [UserIDToProcess], [LanguageID], [ModifiedBy], [ModifiedOn], [QueueID], [StartDate], [EndDate], [UserIDs], [ProcessAlertTypes])
        SELECT   [AlertProcessID],
                 [AlertID],
                 [UserIDToProcess],
                 [LanguageID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [QueueID],
                 [StartDate],
                 [EndDate],
                 [UserIDs],
                 [ProcessAlertTypes]
        FROM     [dbo].[Queue_AlertProcess]
        ORDER BY [AlertProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_AlertProcess] OFF;
    END

DROP TABLE [dbo].[Queue_AlertProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_AlertProcess]', N'Queue_AlertProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_AlertProcess1]', N'PK_Queue_AlertProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_CloseTimeCardProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_CloseTimeCardProcess] (
    [CloseTimeCardProcessID] INT             IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT             CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserID_1] DEFAULT ((0)) NOT NULL,
    [UserIDToProcess]        INT             CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [StartDate]              DATETIME        CONSTRAINT [DF_Queue_CloseTimeCardProcess_StartDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ClosedType]             INT             CONSTRAINT [DF_Queue_CloseTimeCardProcess_IsLockPayPeriod] DEFAULT ((0)) NOT NULL,
    [UserIDs]                VARCHAR (MAX)   CONSTRAINT [DF_Queue_CloseTimeCardProcess_UserID] DEFAULT ('') NOT NULL,
    [ModifiedBy]             INT             CONSTRAINT [DF_Queue_CloseTimeCardProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME        CONSTRAINT [DF_Queue_CloseTimeCardProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [EndDate]                DATETIME        CONSTRAINT [DF_Queue_CloseTimeCardProcess_Date] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [CloseDate]              DATETIME        CONSTRAINT [DF_Queue_CloseTimeCardProcess_CloseDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [Email]                  NVARCHAR (1000) CONSTRAINT [DF_Queue_CloseTimeCardProcess_Email] DEFAULT ('') NOT NULL,
    [ChildRequestIDList]     VARCHAR (MAX)   CONSTRAINT [DF_Queue_CloseTimeCardProcess_ChildRequestIDList] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_CloseTimeCardProcess1] PRIMARY KEY CLUSTERED ([CloseTimeCardProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_CloseTimeCardProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_CloseTimeCardProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_CloseTimeCardProcess] ([CloseTimeCardProcessID], [UserID], [UserIDToProcess], [StartDate], [ClosedType], [UserIDs], [ModifiedBy], [ModifiedOn], [EndDate], [CloseDate], [Email], [ChildRequestIDList])
        SELECT   [CloseTimeCardProcessID],
                 [UserID],
                 [UserIDToProcess],
                 [StartDate],
                 [ClosedType],
                 [UserIDs],
                 [ModifiedBy],
                 [ModifiedOn],
                 [EndDate],
                 [CloseDate],
                 [Email],
                 [ChildRequestIDList]
        FROM     [dbo].[Queue_CloseTimeCardProcess]
        ORDER BY [CloseTimeCardProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_CloseTimeCardProcess] OFF;
    END

DROP TABLE [dbo].[Queue_CloseTimeCardProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_CloseTimeCardProcess]', N'Queue_CloseTimeCardProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_CloseTimeCardProcess1]', N'PK_Queue_CloseTimeCardProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_CustomFieldDataProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_CustomFieldDataProcess] (
    [CustomFieldDataProcessID] INT             IDENTITY (1, 1) NOT NULL,
    [LanguageID]               VARCHAR (50)    CONSTRAINT [DF_Queue_CustomFieldDataProcess_LanguageID] DEFAULT ('') NOT NULL,
    [UserID]                   INT             CONSTRAINT [DF_Queue_CustomFieldDataProcess_UserID] DEFAULT ((0)) NOT NULL,
    [CustomFieldID]            INT             CONSTRAINT [DF_Queue_CustomFieldDataProcess_CustomFieldID] DEFAULT ((0)) NOT NULL,
    [DataString]               NVARCHAR (50)   CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataString] DEFAULT ('') NOT NULL,
    [DataDate]                 DATETIME        CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [DataMoney]                MONEY           CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataMoney] DEFAULT ((0.00)) NOT NULL,
    [DataNumber]               DECIMAL (18, 2) CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataNumber] DEFAULT ((0.00)) NOT NULL,
    [DataSelect]               INT             CONSTRAINT [DF_Queue_CustomFieldDataProcess_DataSelect] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT             CONSTRAINT [DF_Queue_CustomFieldDataProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME        CONSTRAINT [DF_Queue_CustomFieldDataProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [UserIDs]                  VARCHAR (MAX)   CONSTRAINT [DF_Queue_CustomFieldDataProcess_UserIDs] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_CustomFieldDataProcess1] PRIMARY KEY CLUSTERED ([CustomFieldDataProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_CustomFieldDataProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_CustomFieldDataProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_CustomFieldDataProcess] ([CustomFieldDataProcessID], [LanguageID], [UserID], [CustomFieldID], [DataString], [DataDate], [DataMoney], [DataNumber], [DataSelect], [ModifiedBy], [ModifiedOn], [UserIDs])
        SELECT   [CustomFieldDataProcessID],
                 [LanguageID],
                 [UserID],
                 [CustomFieldID],
                 [DataString],
                 [DataDate],
                 [DataMoney],
                 [DataNumber],
                 [DataSelect],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UserIDs]
        FROM     [dbo].[Queue_CustomFieldDataProcess]
        ORDER BY [CustomFieldDataProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_CustomFieldDataProcess] OFF;
    END

DROP TABLE [dbo].[Queue_CustomFieldDataProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_CustomFieldDataProcess]', N'Queue_CustomFieldDataProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_CustomFieldDataProcess1]', N'PK_Queue_CustomFieldDataProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_FTPImport]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_FTPImport] (
    [FTPImportID]       INT      IDENTITY (1, 1) NOT NULL,
    [ImportIDToProcess] INT      CONSTRAINT [DF_FTPImport_ImportIDToProcess] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_FTPImport_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_FTPImport_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_FTPImport])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_FTPImport] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_FTPImport] ([FTPImportID], [ImportIDToProcess], [ModifiedBy], [ModifiedOn])
        SELECT [FTPImportID],
               [ImportIDToProcess],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[Queue_FTPImport];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_FTPImport] OFF;
    END

DROP TABLE [dbo].[Queue_FTPImport];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_FTPImport]', N'Queue_FTPImport';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_HolidayProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_HolidayProcess] (
    [HolidayProcessID] INT           IDENTITY (1, 1) NOT NULL,
    [HolidayListID]    INT           CONSTRAINT [DF_Queue_HolidayProcess_HolidayListID] DEFAULT ((0)) NOT NULL,
    [UserID]           INT           CONSTRAINT [DF_Queue_HolidayProcess_UserID] DEFAULT ((-1)) NOT NULL,
    [UserIDToProcess]  INT           CONSTRAINT [DF_Queue_HolidayProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [StartDate]        DATETIME      CONSTRAINT [DF_Queue_HolidayProcess_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]          DATETIME      CONSTRAINT [DF_Queue_HolidayProcess_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]       INT           CONSTRAINT [DF_Queue_HolidayProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME      CONSTRAINT [DF_Queue_HolidayProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserIDs]          VARCHAR (MAX) CONSTRAINT [DF_Queue_HolidayProcess_UserIDs] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_HolidayProcess1] PRIMARY KEY CLUSTERED ([HolidayProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_HolidayProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_HolidayProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_HolidayProcess] ([HolidayProcessID], [HolidayListID], [UserID], [UserIDToProcess], [StartDate], [EndDate], [ModifiedBy], [ModifiedOn], [UserIDs])
        SELECT   [HolidayProcessID],
                 [HolidayListID],
                 [UserID],
                 [UserIDToProcess],
                 [StartDate],
                 [EndDate],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UserIDs]
        FROM     [dbo].[Queue_HolidayProcess]
        ORDER BY [HolidayProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_HolidayProcess] OFF;
    END

DROP TABLE [dbo].[Queue_HolidayProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_HolidayProcess]', N'Queue_HolidayProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_HolidayProcess1]', N'PK_Queue_HolidayProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_JobProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_JobProcess] (
    [JobProcessID]        INT          IDENTITY (1, 1) NOT NULL,
    [JobSettingID]        INT          CONSTRAINT [DF_Queue_JobProcess_JobSettingID] DEFAULT ((0)) NOT NULL,
    [JobProcessType]      INT          CONSTRAINT [DF_Queue_JobProcess_JobProcessType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT          CONSTRAINT [DF_Queue_JobProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME     CONSTRAINT [DF_Queue_JobProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [JobProcessHistoryID] INT          CONSTRAINT [DF_Queue_JobProcess_JobProcessHistoryID] DEFAULT ((0)) NOT NULL,
    [LanguageID]          VARCHAR (50) CONSTRAINT [DF_Queue_JobProcess_LanguageID] DEFAULT ('') NOT NULL,
    [UserID]              INT          CONSTRAINT [DF_Queue_JobProcess_UserID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_JobProcess1] PRIMARY KEY CLUSTERED ([JobProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_JobProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_JobProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_JobProcess] ([JobProcessID], [JobSettingID], [JobProcessType], [ModifiedBy], [ModifiedOn], [JobProcessHistoryID], [LanguageID], [UserID])
        SELECT   [JobProcessID],
                 [JobSettingID],
                 [JobProcessType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [JobProcessHistoryID],
                 [LanguageID],
                 [UserID]
        FROM     [dbo].[Queue_JobProcess]
        ORDER BY [JobProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_JobProcess] OFF;
    END

DROP TABLE [dbo].[Queue_JobProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_JobProcess]', N'Queue_JobProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_JobProcess1]', N'PK_Queue_JobProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_MassTimeCardProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_MassTimeCardProcess] (
    [MassTimeCardProcessID] INT            IDENTITY (1, 1) NOT NULL,
    [LanguageID]            VARCHAR (50)   CONSTRAINT [DF_Queue_MassTimeCardProcess_LanguageID] DEFAULT ('') NOT NULL,
    [IncludeSaturday]       BIT            CONSTRAINT [DF_Queue_MassTimeCardProcess_IncludeSaturday] DEFAULT ((0)) NOT NULL,
    [IncludeSunday]         BIT            CONSTRAINT [DF_Queue_MassTimeCardProcess_IncludeSunday] DEFAULT ((0)) NOT NULL,
    [DuplicateEntryDays]    INT            CONSTRAINT [DF_Queue_MassTimeCardProcess_DuplicateEntryDays] DEFAULT ((0)) NOT NULL,
    [UserID]                INT            CONSTRAINT [DF_Queue_MassTimeCardProcess_UserID_1] DEFAULT ((0)) NOT NULL,
    [UserIDToProcess]       INT            CONSTRAINT [DF_Queue_MassTimeCardProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [UserIDs]               VARCHAR (MAX)  CONSTRAINT [DF_Queue_MassTimeCardProcess_UserID] DEFAULT ('') NOT NULL,
    [TransactionData]       NVARCHAR (MAX) NOT NULL,
    [ModifiedBy]            INT            CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME       CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifierIDs]           VARCHAR (MAX)  CONSTRAINT [DF_Queue_MassTimeCardProcess_ModifierIDs] DEFAULT ('') NOT NULL,
    [TransactionType]       INT            CONSTRAINT [DF_Queue_MassTimeCardProcess_TransactionType] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_MassTimeCardProcess1] PRIMARY KEY CLUSTERED ([MassTimeCardProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_MassTimeCardProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_MassTimeCardProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_MassTimeCardProcess] ([MassTimeCardProcessID], [LanguageID], [IncludeSaturday], [IncludeSunday], [DuplicateEntryDays], [UserID], [UserIDToProcess], [UserIDs], [TransactionData], [ModifiedBy], [ModifiedOn], [ModifierIDs], [TransactionType])
        SELECT   [MassTimeCardProcessID],
                 [LanguageID],
                 [IncludeSaturday],
                 [IncludeSunday],
                 [DuplicateEntryDays],
                 [UserID],
                 [UserIDToProcess],
                 [UserIDs],
                 [TransactionData],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ModifierIDs],
                 [TransactionType]
        FROM     [dbo].[Queue_MassTimeCardProcess]
        ORDER BY [MassTimeCardProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_MassTimeCardProcess] OFF;
    END

DROP TABLE [dbo].[Queue_MassTimeCardProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_MassTimeCardProcess]', N'Queue_MassTimeCardProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_MassTimeCardProcess1]', N'PK_Queue_MassTimeCardProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_PayAdjustmentProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess] (
    [PayAdjustmentProcessID]       INT          IDENTITY (1, 1) NOT NULL,
    [UserID]                       INT          CONSTRAINT [DF_Queue_PayAdjustmentProcess_UserID] DEFAULT ((0)) NOT NULL,
    [LanguageID]                   VARCHAR (50) CONSTRAINT [DF_Queue_PayAdjustmentProcess_LanguageID] DEFAULT ('') NOT NULL,
    [PayAdjustmentDataIDToProcess] INT          CONSTRAINT [DF_Queue_PayAdjustmentProcess_PayAdjustmentDataIDToProcess] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT          CONSTRAINT [DF_Queue_PayAdjustmentProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME     CONSTRAINT [DF_Queue_PayAdjustmentProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayAdjustmentIDToProcess]     INT          CONSTRAINT [DF_Queue_PayAdjustmentProcess_PayAdjustmentIDToProcess] DEFAULT ((0)) NOT NULL,
    [StartDate]                    DATETIME     CONSTRAINT [DF_Queue_PayAdjustmentProcess_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]                      DATETIME     CONSTRAINT [DF_Queue_PayAdjustmentProcess_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Queue_PayAdjustmentProcess1]
    ON [dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess]([PayAdjustmentProcessID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_PayAdjustmentProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess] ([PayAdjustmentProcessID], [UserID], [LanguageID], [PayAdjustmentDataIDToProcess], [ModifiedBy], [ModifiedOn], [PayAdjustmentIDToProcess], [StartDate], [EndDate])
        SELECT   [PayAdjustmentProcessID],
                 [UserID],
                 [LanguageID],
                 [PayAdjustmentDataIDToProcess],
                 [ModifiedBy],
                 [ModifiedOn],
                 [PayAdjustmentIDToProcess],
                 [StartDate],
                 [EndDate]
        FROM     [dbo].[Queue_PayAdjustmentProcess]
        ORDER BY [PayAdjustmentProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess] OFF;
    END

DROP TABLE [dbo].[Queue_PayAdjustmentProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_PayAdjustmentProcess]', N'Queue_PayAdjustmentProcess';

EXECUTE sp_rename N'[dbo].[Queue_PayAdjustmentProcess].[tmp_ms_xx_index_PK_Queue_PayAdjustmentProcess1]', N'PK_Queue_PayAdjustmentProcess', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_PointsTrackingProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_PointsTrackingProcess] (
    [PointsTrackingProcessID] INT           IDENTITY (1, 1) NOT NULL,
    [UserIDs]                 VARCHAR (MAX) CONSTRAINT [DF_Queue_PointsTrackingProcess_UserIDs] DEFAULT ('') NOT NULL,
    [LanguageID]              VARCHAR (50)  CONSTRAINT [DF_Queue_PointsTrackingProcess_LanguageID] DEFAULT ('') NOT NULL,
    [ModifiedOn]              DATETIME      CONSTRAINT [DF_Queue_PointsTrackingProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT           CONSTRAINT [DF_Queue_PointsTrackingProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [StartDate]               DATETIME      CONSTRAINT [DF_Queue_PointsTrackingProcess_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]                 DATETIME      CONSTRAINT [DF_Queue_PointsTrackingProcess_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_PointsTrackingProcess1] PRIMARY KEY CLUSTERED ([PointsTrackingProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_PointsTrackingProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_PointsTrackingProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_PointsTrackingProcess] ([PointsTrackingProcessID], [UserIDs], [LanguageID], [ModifiedOn], [ModifiedBy], [StartDate], [EndDate])
        SELECT   [PointsTrackingProcessID],
                 [UserIDs],
                 [LanguageID],
                 [ModifiedOn],
                 [ModifiedBy],
                 [StartDate],
                 [EndDate]
        FROM     [dbo].[Queue_PointsTrackingProcess]
        ORDER BY [PointsTrackingProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_PointsTrackingProcess] OFF;
    END

DROP TABLE [dbo].[Queue_PointsTrackingProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_PointsTrackingProcess]', N'Queue_PointsTrackingProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_PointsTrackingProcess1]', N'PK_Queue_PointsTrackingProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_ReopenTimeCardProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_ReopenTimeCardProcess] (
    [ReopenTimeCardProcessID] INT             IDENTITY (1, 1) NOT NULL,
    [UserID]                  INT             CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserID] DEFAULT ((0)) NOT NULL,
    [UserIDToProcess]         INT             CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [StartDate]               DATETIME        CONSTRAINT [DF_Queue_ReopenTimeCardProcess_StartDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [IsOpenTimeCard]          BIT             CONSTRAINT [DF_Queue_ReopenTimeCardProcess_IsOpenTimeCard] DEFAULT ((0)) NOT NULL,
    [UserIDs]                 VARCHAR (MAX)   CONSTRAINT [DF_Queue_ReopenTimeCardProcess_UserIDs] DEFAULT ('') NOT NULL,
    [ModifiedOn]              DATETIME        CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedBy]              INT             CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [EndDate]                 DATETIME        CONSTRAINT [DF_Queue_ReopenTimeCardProcess_EndDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ReopenDate]              DATETIME        CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ReopenDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [Email]                   NVARCHAR (1000) CONSTRAINT [DF_Queue_ReopenTimeCardProcess_Email] DEFAULT ('') NOT NULL,
    [ChildRequestIDList]      VARCHAR (MAX)   CONSTRAINT [DF_Queue_ReopenTimeCardProcess_ChildRequestIDList] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_ReopenTimeCardProcess1] PRIMARY KEY CLUSTERED ([ReopenTimeCardProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_ReopenTimeCardProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ReopenTimeCardProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_ReopenTimeCardProcess] ([ReopenTimeCardProcessID], [UserID], [UserIDToProcess], [StartDate], [IsOpenTimeCard], [UserIDs], [ModifiedOn], [ModifiedBy], [EndDate], [ReopenDate], [Email], [ChildRequestIDList])
        SELECT   [ReopenTimeCardProcessID],
                 [UserID],
                 [UserIDToProcess],
                 [StartDate],
                 [IsOpenTimeCard],
                 [UserIDs],
                 [ModifiedOn],
                 [ModifiedBy],
                 [EndDate],
                 [ReopenDate],
                 [Email],
                 [ChildRequestIDList]
        FROM     [dbo].[Queue_ReopenTimeCardProcess]
        ORDER BY [ReopenTimeCardProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ReopenTimeCardProcess] OFF;
    END

DROP TABLE [dbo].[Queue_ReopenTimeCardProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_ReopenTimeCardProcess]', N'Queue_ReopenTimeCardProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_ReopenTimeCardProcess1]', N'PK_Queue_ReopenTimeCardProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_ReportSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_ReportSetting] (
    [ReportSettingID]                INT             IDENTITY (1, 1) NOT NULL,
    [ReportID]                       INT             CONSTRAINT [DF_Queue_ReportSetting_ReportID] DEFAULT ((0)) NOT NULL,
    [IsAdhoc]                        BIT             CONSTRAINT [DF_Queue_ReportSetting_IsAdhoc] DEFAULT ((0)) NOT NULL,
    [UserID]                         INT             CONSTRAINT [DF_Queue_ReportSetting_UserID] DEFAULT ((0)) NOT NULL,
    [ReportName]                     NVARCHAR (250)  CONSTRAINT [DF_Queue_ReportSetting_ReportName] DEFAULT ('') NOT NULL,
    [DisplayReportNameEnabled]       BIT             CONSTRAINT [DF_Queue_ReportSetting_DisplayReportNameEnabled] DEFAULT ((0)) NOT NULL,
    [ReportSettingType]              INT             CONSTRAINT [DF_Queue_ReportSetting_ReportSettingType] DEFAULT ((0)) NOT NULL,
    [IsFavorite]                     BIT             CONSTRAINT [DF_Queue_ReportSetting_IsFavorite] DEFAULT ((0)) NOT NULL,
    [FilterID]                       INT             CONSTRAINT [DF_Queue_ReportSetting_FilterID] DEFAULT ((0)) NOT NULL,
    [OrderByType]                    INT             CONSTRAINT [DF_Queue_ReportSetting_OrderByType] DEFAULT ((0)) NOT NULL,
    [ReportFormatType]               INT             CONSTRAINT [DF_Queue_ReportSetting_ReportFormatType] DEFAULT ((0)) NOT NULL,
    [RefPayrollPolicyID]             INT             CONSTRAINT [DF_Queue_ReportSetting_RefPayrollPolicyID] DEFAULT ((0)) NOT NULL,
    [IsCurrentRange]                 BIT             CONSTRAINT [DF_Queue_ReportSetting_IsCurrentRange] DEFAULT ((0)) NOT NULL,
    [CurrentRangeType]               INT             CONSTRAINT [DF_Queue_ReportSetting_CurrentRangeType] DEFAULT ((0)) NOT NULL,
    [IsPreviousRange]                BIT             CONSTRAINT [DF_Queue_ReportSetting_IsPreviousRange] DEFAULT ((0)) NOT NULL,
    [PreviousRangeType]              INT             CONSTRAINT [DF_Queue_ReportSetting_PreviousRangeType] DEFAULT ((0)) NOT NULL,
    [IsPastRange]                    BIT             CONSTRAINT [DF_Queue_ReportSetting_IsPastRange] DEFAULT ((0)) NOT NULL,
    [PastRangeType]                  INT             CONSTRAINT [DF_Queue_ReportSetting_PastRangeType] DEFAULT ((0)) NOT NULL,
    [PastRangeCount]                 INT             CONSTRAINT [DF_Queue_ReportSetting_PastRangeCount] DEFAULT ((0)) NOT NULL,
    [IsUserDefinedRange]             BIT             CONSTRAINT [DF_Queue_ReportSetting_IsUserDefinedRange] DEFAULT ((0)) NOT NULL,
    [UserDefinedRangeFrom]           DATETIME        CONSTRAINT [DF_Queue_ReportSetting_UserDefinedRangeFrom] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserDefinedRangeTo]             DATETIME        CONSTRAINT [DF_Queue_ReportSetting_UserDefinedRangeTo] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EmailToUserEnabled]             BIT             CONSTRAINT [DF_Queue_ReportSetting_EmailToUserEnabled] DEFAULT ((0)) NOT NULL,
    [EmailToOthersEnabled]           BIT             CONSTRAINT [DF_Queue_ReportSetting_EmailToOthersEnabled] DEFAULT ((0)) NOT NULL,
    [OtherEmailAddresses]            NVARCHAR (1000) CONSTRAINT [DF_Queue_ReportSetting_OtherEmailAddresses] DEFAULT ('') NOT NULL,
    [IsGenerateAsap]                 BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAsap] DEFAULT ((0)) NOT NULL,
    [IsGenerateAt]                   BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAt] DEFAULT ((0)) NOT NULL,
    [GenerateAtTime]                 DATETIME        CONSTRAINT [DF_Queue_ReportSetting_GenerateAtTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [GenerateAtTimezoneKey]          VARCHAR (50)    CONSTRAINT [DF_Queue_ReportSetting_GenerateAtTimezoneKey] DEFAULT ('') NOT NULL,
    [IsGenerateAtOn]                 BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtOn] DEFAULT ((0)) NOT NULL,
    [GenerateAtOnDate]               DATETIME        CONSTRAINT [DF_Queue_ReportSetting_GenerateAtOnDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsGenerateAtDaily]              BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtDaily] DEFAULT ((0)) NOT NULL,
    [GenerateAtDailyIncludeWeekend]  BIT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtDailyIncludeWeekend] DEFAULT ((0)) NOT NULL,
    [IsGenerateAtWeekly]             BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtWeekly] DEFAULT ((0)) NOT NULL,
    [GenerateAtWeeklyDay]            INT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtWeeklyDay] DEFAULT ((0)) NOT NULL,
    [IsGenerateAtBiWeekly]           BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtBiWeekly] DEFAULT ((0)) NOT NULL,
    [GenerateAtBiWeeklyDay]          INT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtBiWeeklyDay] DEFAULT ((0)) NOT NULL,
    [GenerateAtBiWeeklyStartAftrNxt] BIT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtBiWeeklyStartAftrNxt] DEFAULT ((0)) NOT NULL,
    [IsGenerateAtSemiMonthly]        BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtSemiMonthly] DEFAULT ((0)) NOT NULL,
    [GenerateAtSemiMonthlyType]      INT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtSemiMonthlyType] DEFAULT ((0)) NOT NULL,
    [IsGenerateAtMonthly]            BIT             CONSTRAINT [DF_Queue_ReportSetting_IsGenerateAtMonthly] DEFAULT ((0)) NOT NULL,
    [GenerateAtMonthlyType]          INT             CONSTRAINT [DF_Queue_ReportSetting_GenerateAtMonthlyType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT             CONSTRAINT [DF_Queue_ReportSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME        CONSTRAINT [DF_Queue_ReportSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ReportSpecificSettings]         NVARCHAR (MAX)  CONSTRAINT [DF_Queue_ReportSetting_ReportSpecificSettings] DEFAULT ('') NOT NULL,
    [QueueID]                        INT             CONSTRAINT [DF_Queue_ReportSetting_QueueID] DEFAULT ((0)) NOT NULL,
    [NextScheduleUtcDateTime]        DATETIME        CONSTRAINT [DF_Queue_ReportSetting_NextScheduleUtcDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LanguageID]                     VARCHAR (50)    CONSTRAINT [DF_Queue_ReportSetting_LanguageID] DEFAULT ('') NOT NULL,
    [DataURL]                        NVARCHAR (1000) CONSTRAINT [DF_Queue_ReportSetting_DataURL] DEFAULT ('') NOT NULL,
    [IncludeFooter]                  BIT             CONSTRAINT [DF_Queue_ReportSetting_IncludeFooter] DEFAULT ((0)) NOT NULL,
    [UseCompanyLogo]                 BIT             CONSTRAINT [DF_Queue_ReportSetting_UseCompanyLogo] DEFAULT ((0)) NOT NULL,
    [FilterData]                     NVARCHAR (MAX)  CONSTRAINT [DF_Queue_ReportSetting_FilterData] DEFAULT ('') NOT NULL,
    [IsManExportMatrixSelection]     BIT             CONSTRAINT [DF_Queue_ReportSetting_IsManExportMatrixSelection] DEFAULT ((0)) NOT NULL,
    [AutoExportMatrixSelectionType]  INT             CONSTRAINT [DF_Queue_ReportSetting_AutoExportMatrixSelectionType] DEFAULT ((0)) NOT NULL,
    [ExportCodeID]                   INT             CONSTRAINT [DF_Queue_ReportSetting_ExportCodeID] DEFAULT ((0)) NOT NULL,
    [IsNextRange]                    BIT             CONSTRAINT [DF_Queue_ReportSetting_IsNextRange] DEFAULT ((0)) NOT NULL,
    [NextRangeType]                  INT             CONSTRAINT [DF_Queue_ReportSetting_NextRangeType] DEFAULT ((0)) NOT NULL,
    [StatusType]                     INT             CONSTRAINT [DF_Queue_ReportSetting_StatusType] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Queue_ReportSetting1]
    ON [dbo].[tmp_ms_xx_Queue_ReportSetting]([ReportSettingID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_ReportSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ReportSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_ReportSetting] ([ReportSettingID], [ReportID], [IsAdhoc], [UserID], [ReportName], [DisplayReportNameEnabled], [ReportSettingType], [IsFavorite], [FilterID], [OrderByType], [ReportFormatType], [RefPayrollPolicyID], [IsCurrentRange], [CurrentRangeType], [IsPreviousRange], [PreviousRangeType], [IsPastRange], [PastRangeType], [PastRangeCount], [IsUserDefinedRange], [UserDefinedRangeFrom], [UserDefinedRangeTo], [EmailToUserEnabled], [EmailToOthersEnabled], [OtherEmailAddresses], [IsGenerateAsap], [IsGenerateAt], [GenerateAtTime], [GenerateAtTimezoneKey], [IsGenerateAtOn], [GenerateAtOnDate], [IsGenerateAtDaily], [GenerateAtDailyIncludeWeekend], [IsGenerateAtWeekly], [GenerateAtWeeklyDay], [IsGenerateAtBiWeekly], [GenerateAtBiWeeklyDay], [GenerateAtBiWeeklyStartAftrNxt], [IsGenerateAtSemiMonthly], [GenerateAtSemiMonthlyType], [IsGenerateAtMonthly], [GenerateAtMonthlyType], [ModifiedBy], [ModifiedOn], [ReportSpecificSettings], [QueueID], [NextScheduleUtcDateTime], [LanguageID], [DataURL], [IncludeFooter], [UseCompanyLogo], [FilterData], [IsManExportMatrixSelection], [AutoExportMatrixSelectionType], [ExportCodeID], [IsNextRange], [NextRangeType], [StatusType])
        SELECT   [ReportSettingID],
                 [ReportID],
                 [IsAdhoc],
                 [UserID],
                 [ReportName],
                 [DisplayReportNameEnabled],
                 [ReportSettingType],
                 [IsFavorite],
                 [FilterID],
                 [OrderByType],
                 [ReportFormatType],
                 [RefPayrollPolicyID],
                 [IsCurrentRange],
                 [CurrentRangeType],
                 [IsPreviousRange],
                 [PreviousRangeType],
                 [IsPastRange],
                 [PastRangeType],
                 [PastRangeCount],
                 [IsUserDefinedRange],
                 [UserDefinedRangeFrom],
                 [UserDefinedRangeTo],
                 [EmailToUserEnabled],
                 [EmailToOthersEnabled],
                 [OtherEmailAddresses],
                 [IsGenerateAsap],
                 [IsGenerateAt],
                 [GenerateAtTime],
                 [GenerateAtTimezoneKey],
                 [IsGenerateAtOn],
                 [GenerateAtOnDate],
                 [IsGenerateAtDaily],
                 [GenerateAtDailyIncludeWeekend],
                 [IsGenerateAtWeekly],
                 [GenerateAtWeeklyDay],
                 [IsGenerateAtBiWeekly],
                 [GenerateAtBiWeeklyDay],
                 [GenerateAtBiWeeklyStartAftrNxt],
                 [IsGenerateAtSemiMonthly],
                 [GenerateAtSemiMonthlyType],
                 [IsGenerateAtMonthly],
                 [GenerateAtMonthlyType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ReportSpecificSettings],
                 [QueueID],
                 [NextScheduleUtcDateTime],
                 [LanguageID],
                 [DataURL],
                 [IncludeFooter],
                 [UseCompanyLogo],
                 [FilterData],
                 [IsManExportMatrixSelection],
                 [AutoExportMatrixSelectionType],
                 [ExportCodeID],
                 [IsNextRange],
                 [NextRangeType],
                 [StatusType]
        FROM     [dbo].[Queue_ReportSetting]
        ORDER BY [ReportSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ReportSetting] OFF;
    END

DROP TABLE [dbo].[Queue_ReportSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_ReportSetting]', N'Queue_ReportSetting';

EXECUTE sp_rename N'[dbo].[Queue_ReportSetting].[tmp_ms_xx_index_PK_Queue_ReportSetting1]', N'PK_Queue_ReportSetting', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Queue_ReportSetting]([NextScheduleUtcDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Queue_ScheduleGenerateProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_ScheduleGenerateProcess] (
    [ScheduleGenerateProcessID] INT      IDENTITY (1, 1) NOT NULL,
    [ScheduleTempID]            INT      CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ScheduleTempID] DEFAULT ((0)) NOT NULL,
    [UserID]                    INT      CONSTRAINT [DF_Queue_ScheduleGenerateProcess_UserID] DEFAULT ((-1)) NOT NULL,
    [UserIDToProcess]           INT      CONSTRAINT [DF_Queue_ScheduleGenerateProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [GenerateFrom]              DATETIME CONSTRAINT [DF_Queue_ScheduleGenerateProcess_GenerateUntil] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [GenerateTo]                DATETIME CONSTRAINT [DF_Queue_ScheduleGenerateProcess_GenerateTo] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                INT      CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                DATETIME CONSTRAINT [DF_Queue_ScheduleGenerateProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DeleteAfterFirstRun]       BIT      CONSTRAINT [DF_Queue_ScheduleGenerateProcess_DeleteAfterFirstRun] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_ScheduleGenerateProcess1] PRIMARY KEY CLUSTERED ([ScheduleGenerateProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_ScheduleGenerateProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ScheduleGenerateProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_ScheduleGenerateProcess] ([ScheduleGenerateProcessID], [ScheduleTempID], [UserID], [UserIDToProcess], [GenerateFrom], [GenerateTo], [ModifiedBy], [ModifiedOn], [DeleteAfterFirstRun])
        SELECT   [ScheduleGenerateProcessID],
                 [ScheduleTempID],
                 [UserID],
                 [UserIDToProcess],
                 [GenerateFrom],
                 [GenerateTo],
                 [ModifiedBy],
                 [ModifiedOn],
                 [DeleteAfterFirstRun]
        FROM     [dbo].[Queue_ScheduleGenerateProcess]
        ORDER BY [ScheduleGenerateProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_ScheduleGenerateProcess] OFF;
    END

DROP TABLE [dbo].[Queue_ScheduleGenerateProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_ScheduleGenerateProcess]', N'Queue_ScheduleGenerateProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_ScheduleGenerateProcess1]', N'PK_Queue_ScheduleGenerateProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_TimeCardProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_TimeCardProcess] (
    [TimeCardProcessID] INT           IDENTITY (1, 1) NOT NULL,
    [UserID]            INT           CONSTRAINT [DF_Queue_TimeCardProcess_UserID] DEFAULT ((0)) NOT NULL,
    [LanguageID]        VARCHAR (50)  CONSTRAINT [DF_Queue_TimeCardProcess_LanguageID] DEFAULT ('') NOT NULL,
    [UserIDToProcess]   INT           CONSTRAINT [DF_Queue_TimeCardProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [StartDate]         DATETIME      CONSTRAINT [DF_Queue_TimeCardProcess_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]           DATETIME      CONSTRAINT [DF_Queue_TimeCardProcess_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsScheduled]       BIT           CONSTRAINT [DF_Queue_TimeCardProcess_IsScheduled] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT           CONSTRAINT [DF_Queue_TimeCardProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME      CONSTRAINT [DF_Queue_TimeCardProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserIDs]           VARCHAR (MAX) CONSTRAINT [DF_Queue_TimeCardProcess_UserIDs] DEFAULT ('') NOT NULL,
    [TimeSlicePreIDs]   VARCHAR (MAX) CONSTRAINT [DF_Queue_TimeCardProcess_TimeSlicePreIDs] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_TimeCardProcess1] PRIMARY KEY CLUSTERED ([TimeCardProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_TimeCardProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_TimeCardProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_TimeCardProcess] ([TimeCardProcessID], [UserID], [LanguageID], [UserIDToProcess], [StartDate], [EndDate], [IsScheduled], [ModifiedBy], [ModifiedOn], [UserIDs], [TimeSlicePreIDs])
        SELECT   [TimeCardProcessID],
                 [UserID],
                 [LanguageID],
                 [UserIDToProcess],
                 [StartDate],
                 [EndDate],
                 [IsScheduled],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UserIDs],
                 [TimeSlicePreIDs]
        FROM     [dbo].[Queue_TimeCardProcess]
        ORDER BY [TimeCardProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_TimeCardProcess] OFF;
    END

DROP TABLE [dbo].[Queue_TimeCardProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_TimeCardProcess]', N'Queue_TimeCardProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_TimeCardProcess1]', N'PK_Queue_TimeCardProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_TimeOffProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_TimeOffProcess] (
    [TimeOffProcessID] INT           IDENTITY (1, 1) NOT NULL,
    [UserID]           INT           CONSTRAINT [DF_Queue_TimeOffProcess_UserID] DEFAULT ((0)) NOT NULL,
    [LanguageID]       VARCHAR (50)  CONSTRAINT [DF_Queue_TimeOffProcess_LanguageID] DEFAULT ('') NOT NULL,
    [UserIDToProcess]  INT           CONSTRAINT [DF_Queue_TimeOffProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [PayTypeID]        INT           CONSTRAINT [DF_Queue_TimeOffProcess_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDate]        DATETIME      CONSTRAINT [DF_Queue_TimeOffProcess_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]          DATETIME      CONSTRAINT [DF_Queue_TimeOffProcess_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsScheduled]      BIT           CONSTRAINT [DF_Queue_TimeOffProcess_IsScheduled] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT           CONSTRAINT [DF_Queue_TimeOffProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME      CONSTRAINT [DF_Queue_TimeOffProcess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserIDs]          VARCHAR (MAX) CONSTRAINT [DF_Queue_TimeOffProcess_UserIDs] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_TimeOffProcess1] PRIMARY KEY CLUSTERED ([TimeOffProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_TimeOffProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_TimeOffProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_TimeOffProcess] ([TimeOffProcessID], [UserID], [LanguageID], [UserIDToProcess], [PayTypeID], [StartDate], [EndDate], [IsScheduled], [ModifiedBy], [ModifiedOn], [UserIDs])
        SELECT   [TimeOffProcessID],
                 [UserID],
                 [LanguageID],
                 [UserIDToProcess],
                 [PayTypeID],
                 [StartDate],
                 [EndDate],
                 [IsScheduled],
                 [ModifiedBy],
                 [ModifiedOn],
                 [UserIDs]
        FROM     [dbo].[Queue_TimeOffProcess]
        ORDER BY [TimeOffProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_TimeOffProcess] OFF;
    END

DROP TABLE [dbo].[Queue_TimeOffProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_TimeOffProcess]', N'Queue_TimeOffProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_TimeOffProcess1]', N'PK_Queue_TimeOffProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Queue_UserImportProcess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Queue_UserImportProcess] (
    [UserImportProcessID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_Queue_UserImportProcess_UserID] DEFAULT ((0)) NOT NULL,
    [ImportIDToProcess]   INT      CONSTRAINT [DF_Queue_UserImportProcess_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_Queue_UserImportProcess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_Queue_UserImportProcess_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ImportID]            INT      CONSTRAINT [DF_Queue_UserImportProcess_ImportID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Queue_UserImportProcess1] PRIMARY KEY CLUSTERED ([UserImportProcessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Queue_UserImportProcess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_UserImportProcess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Queue_UserImportProcess] ([UserImportProcessID], [UserID], [ImportIDToProcess], [ModifiedBy], [ModifiedOn], [ImportID])
        SELECT   [UserImportProcessID],
                 [UserID],
                 [ImportIDToProcess],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ImportID]
        FROM     [dbo].[Queue_UserImportProcess]
        ORDER BY [UserImportProcessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Queue_UserImportProcess] OFF;
    END

DROP TABLE [dbo].[Queue_UserImportProcess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Queue_UserImportProcess]', N'Queue_UserImportProcess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Queue_UserImportProcess1]', N'PK_Queue_UserImportProcess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ReportAdhoc]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ReportAdhoc] (
    [ReportAdhocID]         INT            IDENTITY (1, 1) NOT NULL,
    [UserID]                INT            CONSTRAINT [DF_ReportAdhoc_UserID] DEFAULT ((0)) NOT NULL,
    [ReportName]            NVARCHAR (200) CONSTRAINT [DF_ReportAdhoc_ReportName] DEFAULT ('') NOT NULL,
    [IsSharedTemplate]      BIT            CONSTRAINT [DF_ReportAdhoc_IsSharedTemplate] DEFAULT ((0)) NOT NULL,
    [ReportFields]          VARCHAR (MAX)  CONSTRAINT [DF_ReportAdhoc_ReportFields] DEFAULT ('') NOT NULL,
    [ReportConditions]      VARCHAR (MAX)  CONSTRAINT [DF_ReportAdhoc_ReportConditions] DEFAULT ('') NOT NULL,
    [ModifiedBy]            INT            CONSTRAINT [DF_ReportAdhoc_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME       CONSTRAINT [DF_ReportAdhoc_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ShowDurationInDecimal] BIT            CONSTRAINT [DF_ReportAdhoc_ShowDurationInDecimal] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ReportAdhoc1] PRIMARY KEY CLUSTERED ([ReportAdhocID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ReportAdhoc])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportAdhoc] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ReportAdhoc] ([ReportAdhocID], [UserID], [ReportName], [IsSharedTemplate], [ReportFields], [ReportConditions], [ModifiedBy], [ModifiedOn], [ShowDurationInDecimal])
        SELECT   [ReportAdhocID],
                 [UserID],
                 [ReportName],
                 [IsSharedTemplate],
                 [ReportFields],
                 [ReportConditions],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ShowDurationInDecimal]
        FROM     [dbo].[ReportAdhoc]
        ORDER BY [ReportAdhocID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportAdhoc] OFF;
    END

DROP TABLE [dbo].[ReportAdhoc];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ReportAdhoc]', N'ReportAdhoc';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ReportAdhoc1]', N'PK_ReportAdhoc', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ReportAdhoc].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ReportAdhoc]([UserID] ASC, [ReportName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ReportAssignment]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ReportAssignment] (
    [ReportAssignmentID] INT      IDENTITY (1, 1) NOT NULL,
    [ReportID]           INT      CONSTRAINT [DF_ReportAssignment_ReportID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]         INT      CONSTRAINT [DF_ReportAssignment_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME CONSTRAINT [DF_ReportAssignment_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_ReportAssignment1] PRIMARY KEY CLUSTERED ([ReportAssignmentID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ReportAssignment])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportAssignment] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ReportAssignment] ([ReportAssignmentID], [ReportID], [ModifiedBy], [ModifiedOn])
        SELECT   [ReportAssignmentID],
                 [ReportID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ReportAssignment]
        ORDER BY [ReportAssignmentID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportAssignment] OFF;
    END

DROP TABLE [dbo].[ReportAssignment];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ReportAssignment]', N'ReportAssignment';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_ReportAssignment1]', N'PK_ReportAssignment', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ReportData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ReportData] (
    [ReportDataID]     INT             IDENTITY (1, 1) NOT NULL,
    [ReportSettingID]  INT             CONSTRAINT [DF_ReportData_ReportSettingID] DEFAULT ((0)) NOT NULL,
    [UserID]           INT             CONSTRAINT [DF_ReportData_UserID] DEFAULT ((0)) NOT NULL,
    [ReportFormatType] INT             CONSTRAINT [DF_ReportData_ReportFormatType] DEFAULT ((0)) NOT NULL,
    [Data]             VARBINARY (MAX) NULL,
    [GeneratedOn]      DATETIME        CONSTRAINT [DF_ReportData_GeneratedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]       INT             CONSTRAINT [DF_ReportData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME        CONSTRAINT [DF_ReportData_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ReportData1]
    ON [dbo].[tmp_ms_xx_ReportData]([ReportDataID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ReportData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ReportData] ([ReportDataID], [ReportSettingID], [UserID], [ReportFormatType], [Data], [GeneratedOn], [ModifiedBy], [ModifiedOn])
        SELECT   [ReportDataID],
                 [ReportSettingID],
                 [UserID],
                 [ReportFormatType],
                 [Data],
                 [GeneratedOn],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ReportData]
        ORDER BY [ReportDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ReportData] OFF;
    END

DROP TABLE [dbo].[ReportData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ReportData]', N'ReportData';

EXECUTE sp_rename N'[dbo].[ReportData].[tmp_ms_xx_index_PK_ReportData1]', N'PK_ReportData', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ReportData].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ReportData]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ReprocessLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ReprocessLog] (
    [UserIDToProcess] INT      CONSTRAINT [DF_ReprocessLog_UserIDToProcess] DEFAULT ((0)) NOT NULL,
    [ReprocessType]   INT      CONSTRAINT [DF_ReprocessLog_ReprocessType] DEFAULT ((0)) NOT NULL,
    [StartDate]       DATETIME CONSTRAINT [DF_ReprocessLog_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]         DATETIME CONSTRAINT [DF_ReprocessLog_EndDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_ReprocessLog_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_ReprocessLog_ModifiedBy] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ReprocessLog])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ReprocessLog] ([UserIDToProcess], [ReprocessType], [StartDate], [EndDate], [ModifiedOn], [ModifiedBy])
        SELECT [UserIDToProcess],
               [ReprocessType],
               [StartDate],
               [EndDate],
               [ModifiedOn],
               [ModifiedBy]
        FROM   [dbo].[ReprocessLog];
    END

DROP TABLE [dbo].[ReprocessLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ReprocessLog]', N'ReprocessLog';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Schedule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Schedule] (
    [ScheduleID]      INT      IDENTITY (1, 1) NOT NULL,
    [UserID]          INT      CONSTRAINT [DF_Schedule_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]       INT      CONSTRAINT [DF_Schedule_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]   DATETIME CONSTRAINT [DF_Schedule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]     DATETIME CONSTRAINT [DF_Schedule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LLDetailID1]     INT      CONSTRAINT [DF_Schedule_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]     INT      CONSTRAINT [DF_Schedule_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]     INT      CONSTRAINT [DF_Schedule_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]     INT      CONSTRAINT [DF_Schedule_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]     INT      CONSTRAINT [DF_Schedule_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]     INT      CONSTRAINT [DF_Schedule_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]     INT      CONSTRAINT [DF_Schedule_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]     INT      CONSTRAINT [DF_Schedule_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]     INT      CONSTRAINT [DF_Schedule_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]    INT      CONSTRAINT [DF_Schedule_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]    INT      CONSTRAINT [DF_Schedule_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]    INT      CONSTRAINT [DF_Schedule_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]    INT      CONSTRAINT [DF_Schedule_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]    INT      CONSTRAINT [DF_Schedule_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]    INT      CONSTRAINT [DF_Schedule_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [IsAutoGenerated] BIT      CONSTRAINT [DF_Schedule_IsAutoGenerated] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_Schedule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_Schedule_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Schedule1]
    ON [dbo].[tmp_ms_xx_Schedule]([ScheduleID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Schedule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Schedule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Schedule] ([ScheduleID], [UserID], [PayTypeID], [StartDateTime], [EndDateTime], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [IsAutoGenerated], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleID],
                 [UserID],
                 [PayTypeID],
                 [StartDateTime],
                 [EndDateTime],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [IsAutoGenerated],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[Schedule]
        ORDER BY [ScheduleID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Schedule] OFF;
    END

DROP TABLE [dbo].[Schedule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Schedule]', N'Schedule';

EXECUTE sp_rename N'[dbo].[Schedule].[tmp_ms_xx_index_PK_Schedule1]', N'PK_Schedule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Schedule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Schedule]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleDetail] (
    [ScheduleDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [ScheduleID]       INT      CONSTRAINT [DF_ScheduleDetail_ScheduleID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]        INT      CONSTRAINT [DF_ScheduleDetail_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]    DATETIME CONSTRAINT [DF_ScheduleDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]      DATETIME CONSTRAINT [DF_ScheduleDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LLDetailID1]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]      INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]     INT      CONSTRAINT [DF_ScheduleDetail_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [IsAutoGenerated]  BIT      CONSTRAINT [DF_ScheduleDetail_IsAutoGenerated] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]       INT      CONSTRAINT [DF_ScheduleDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]       DATETIME CONSTRAINT [DF_ScheduleDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ScheduleDetail1]
    ON [dbo].[tmp_ms_xx_ScheduleDetail]([ScheduleDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleDetail] ([ScheduleDetailID], [ScheduleID], [PayTypeID], [StartDateTime], [EndDateTime], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [IsAutoGenerated], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleDetailID],
                 [ScheduleID],
                 [PayTypeID],
                 [StartDateTime],
                 [EndDateTime],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [IsAutoGenerated],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ScheduleDetail]
        ORDER BY [ScheduleDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleDetail] OFF;
    END

DROP TABLE [dbo].[ScheduleDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleDetail]', N'ScheduleDetail';

EXECUTE sp_rename N'[dbo].[ScheduleDetail].[tmp_ms_xx_index_PK_ScheduleDetail1]', N'PK_ScheduleDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ScheduleDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ScheduleDetail]([ScheduleID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleTemp]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleTemp] (
    [ScheduleTempID]          INT            IDENTITY (1, 1) NOT NULL,
    [ScheduleTempName]        NVARCHAR (100) CONSTRAINT [DF_ScheduleTemp_ScheduleTempName] DEFAULT ('') NOT NULL,
    [ReferenceDate]           DATETIME       CONSTRAINT [DF_ScheduleTemp_StartDay] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [NoOfDays]                INT            CONSTRAINT [DF_ScheduleTemp_NoOfDays] DEFAULT ((0)) NOT NULL,
    [AutoGenerate]            BIT            CONSTRAINT [DF_ScheduleTemp_AutoGenerate] DEFAULT ((0)) NOT NULL,
    [AutoGenerateOn]          DATETIME       CONSTRAINT [DF_ScheduleTemp_AutoGenerateOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [OverrideAutoGenerated]   BIT            CONSTRAINT [DF_ScheduleTemp_OverrideAutoGenerated] DEFAULT ((0)) NOT NULL,
    [OverrideManuallyCreated] BIT            CONSTRAINT [DF_ScheduleTemp_OverrideManuallyCreated] DEFAULT ((0)) NOT NULL,
    [AutoGeneratedUntil]      DATETIME       CONSTRAINT [DF_ScheduleTemp_AutoGeneratedUntil] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT            CONSTRAINT [DF_ScheduleTemp_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME       CONSTRAINT [DF_ScheduleTemp_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ScheduleTemplate1]
    ON [dbo].[tmp_ms_xx_ScheduleTemp]([ScheduleTempID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleTemp])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTemp] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleTemp] ([ScheduleTempID], [ScheduleTempName], [ReferenceDate], [NoOfDays], [AutoGenerate], [AutoGenerateOn], [OverrideAutoGenerated], [OverrideManuallyCreated], [AutoGeneratedUntil], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleTempID],
                 [ScheduleTempName],
                 [ReferenceDate],
                 [NoOfDays],
                 [AutoGenerate],
                 [AutoGenerateOn],
                 [OverrideAutoGenerated],
                 [OverrideManuallyCreated],
                 [AutoGeneratedUntil],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ScheduleTemp]
        ORDER BY [ScheduleTempID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTemp] OFF;
    END

DROP TABLE [dbo].[ScheduleTemp];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleTemp]', N'ScheduleTemp';

EXECUTE sp_rename N'[dbo].[ScheduleTemp].[tmp_ms_xx_index_PK_ScheduleTemplate1]', N'PK_ScheduleTemplate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ScheduleTemp].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ScheduleTemp]([ScheduleTempName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleTempAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleTempAssign] (
    [ScheduleTempAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [ScheduleTempID]       INT      CONSTRAINT [DF_ScheduleTempAssign_ScheduleTempID] DEFAULT ((0)) NOT NULL,
    [UserID]               INT      CONSTRAINT [DF_ScheduleTempAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]        DATETIME CONSTRAINT [DF_ScheduleTempAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]          DATETIME CONSTRAINT [DF_ScheduleTempAssign_EndDateTime] DEFAULT (((1) / (1)) / (2100)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_ScheduleTempAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_ScheduleTempAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ScheduleTemplateUserAssignment1]
    ON [dbo].[tmp_ms_xx_ScheduleTempAssign]([ScheduleTempAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleTempAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleTempAssign] ([ScheduleTempAssignID], [ScheduleTempID], [UserID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleTempAssignID],
                 [ScheduleTempID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ScheduleTempAssign]
        ORDER BY [ScheduleTempAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempAssign] OFF;
    END

DROP TABLE [dbo].[ScheduleTempAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleTempAssign]', N'ScheduleTempAssign';

EXECUTE sp_rename N'[dbo].[ScheduleTempAssign].[tmp_ms_xx_index_PK_ScheduleTemplateUserAssignment1]', N'PK_ScheduleTemplateUserAssignment', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ScheduleTempAssign]([ScheduleTempID] ASC, [UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleTempSchedule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleTempSchedule] (
    [ScheduleTempScheduleID] INT      IDENTITY (1, 1) NOT NULL,
    [ScheduleTempID]         INT      CONSTRAINT [DF_ScheduleTempSchedule_ScheduleTempID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]              INT      CONSTRAINT [DF_ScheduleTempSchedule_PayTypeID] DEFAULT ((0)) NOT NULL,
    [DayIndexIn]             INT      CONSTRAINT [DF_ScheduleTempSchedule_DayIndexIn] DEFAULT ((0)) NOT NULL,
    [DayIndexOut]            INT      CONSTRAINT [DF_ScheduleTempSchedule_DayIndexOut] DEFAULT ((0)) NOT NULL,
    [StartDateTime]          DATETIME CONSTRAINT [DF_ScheduleTempSchedule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]            DATETIME CONSTRAINT [DF_ScheduleTempSchedule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LLDetailID1]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]            INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]           INT      CONSTRAINT [DF_ScheduleTempSchedule_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_ScheduleTempSchedule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_ScheduleTempSchedule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ScheduleTemplateSchedule1]
    ON [dbo].[tmp_ms_xx_ScheduleTempSchedule]([ScheduleTempScheduleID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleTempSchedule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempSchedule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleTempSchedule] ([ScheduleTempScheduleID], [ScheduleTempID], [PayTypeID], [DayIndexIn], [DayIndexOut], [StartDateTime], [EndDateTime], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleTempScheduleID],
                 [ScheduleTempID],
                 [PayTypeID],
                 [DayIndexIn],
                 [DayIndexOut],
                 [StartDateTime],
                 [EndDateTime],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ScheduleTempSchedule]
        ORDER BY [ScheduleTempScheduleID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempSchedule] OFF;
    END

DROP TABLE [dbo].[ScheduleTempSchedule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleTempSchedule]', N'ScheduleTempSchedule';

EXECUTE sp_rename N'[dbo].[ScheduleTempSchedule].[tmp_ms_xx_index_PK_ScheduleTemplateSchedule1]', N'PK_ScheduleTemplateSchedule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ScheduleTempSchedule]([ScheduleTempID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ScheduleTempScheduleDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ScheduleTempScheduleDetail] (
    [ScheduleTempScheduleDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [ScheduleTempScheduleID]       INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_ScheduleTempScheduleID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                    INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_PayTypeID] DEFAULT ((0)) NOT NULL,
    [DayIndexIn]                   INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_DayIndexIn] DEFAULT ((0)) NOT NULL,
    [DayIndexOut]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_DayIndexOut] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                DATETIME CONSTRAINT [DF_ScheduleTempScheduleDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                  DATETIME CONSTRAINT [DF_ScheduleTempScheduleDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [LLDetailID1]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]                  INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]                 INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_ScheduleTempScheduleDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_ScheduleTempScheduleDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ScheduleTemplateScheduleDetail1]
    ON [dbo].[tmp_ms_xx_ScheduleTempScheduleDetail]([ScheduleTempScheduleDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ScheduleTempScheduleDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempScheduleDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ScheduleTempScheduleDetail] ([ScheduleTempScheduleDetailID], [ScheduleTempScheduleID], [PayTypeID], [DayIndexIn], [DayIndexOut], [StartDateTime], [EndDateTime], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn])
        SELECT   [ScheduleTempScheduleDetailID],
                 [ScheduleTempScheduleID],
                 [PayTypeID],
                 [DayIndexIn],
                 [DayIndexOut],
                 [StartDateTime],
                 [EndDateTime],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ScheduleTempScheduleDetail]
        ORDER BY [ScheduleTempScheduleDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ScheduleTempScheduleDetail] OFF;
    END

DROP TABLE [dbo].[ScheduleTempScheduleDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ScheduleTempScheduleDetail]', N'ScheduleTempScheduleDetail';

EXECUTE sp_rename N'[dbo].[ScheduleTempScheduleDetail].[tmp_ms_xx_index_PK_ScheduleTemplateScheduleDetail1]', N'PK_ScheduleTemplateScheduleDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ScheduleTempScheduleDetail]([ScheduleTempScheduleID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SessionState]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SessionState] (
    [SessionStateID] INT            IDENTITY (1, 1) NOT NULL,
    [UserID]         INT            CONSTRAINT [DF_SessionState_UserID] DEFAULT ((0)) NOT NULL,
    [SessionValue]   NVARCHAR (MAX) CONSTRAINT [DF_SessionState_SessionValue] DEFAULT ('') NOT NULL,
    [ModifiedBy]     INT            CONSTRAINT [DF_SessionState_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME       CONSTRAINT [DF_SessionState_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SessionState])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SessionState] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SessionState] ([SessionStateID], [UserID], [SessionValue], [ModifiedBy], [ModifiedOn])
        SELECT [SessionStateID],
               [UserID],
               [SessionValue],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[SessionState];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SessionState] OFF;
    END

DROP TABLE [dbo].[SessionState];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SessionState]', N'SessionState';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[SharedTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SharedTemplate] (
    [SharedTemplateID]   INT            IDENTITY (1, 1) NOT NULL,
    [SharedTemplateType] INT            CONSTRAINT [DF_SharedTemplate_SharedTemplateType] DEFAULT ((0)) NOT NULL,
    [TemplateOptionType] INT            CONSTRAINT [DF_SharedTemplate_TemplateOptionType] DEFAULT ((0)) NOT NULL,
    [TemplateID]         INT            CONSTRAINT [DF_SharedTemplate_TemplateID] DEFAULT ((0)) NOT NULL,
    [FilterID]           INT            CONSTRAINT [DF_SharedTemplate_FilterID] DEFAULT ((0)) NOT NULL,
    [FilterData]         NVARCHAR (MAX) CONSTRAINT [DF_SharedTemplate_FilterData] DEFAULT ('') NOT NULL,
    [ModifiedBy]         INT            CONSTRAINT [DF_SharedTemplate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME       CONSTRAINT [DF_SharedTemplate_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SharedTemplate1] PRIMARY KEY CLUSTERED ([SharedTemplateID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SharedTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SharedTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SharedTemplate] ([SharedTemplateID], [SharedTemplateType], [TemplateOptionType], [TemplateID], [FilterID], [FilterData], [ModifiedBy], [ModifiedOn])
        SELECT   [SharedTemplateID],
                 [SharedTemplateType],
                 [TemplateOptionType],
                 [TemplateID],
                 [FilterID],
                 [FilterData],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[SharedTemplate]
        ORDER BY [SharedTemplateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SharedTemplate] OFF;
    END

DROP TABLE [dbo].[SharedTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SharedTemplate]', N'SharedTemplate';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SharedTemplate1]', N'PK_SharedTemplate', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[SharedTemplateUser]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SharedTemplateUser] (
    [SharedTemplateUserID] INT      IDENTITY (1, 1) NOT NULL,
    [SharedTemplateID]     INT      CONSTRAINT [DF_SharedTemplateUser_SharedTemplateID] DEFAULT ((0)) NOT NULL,
    [UserID]               INT      CONSTRAINT [DF_SharedTemplateUser_UserID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_SharedTemplateUser_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_SharedTemplateUser_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SharedTemplateUser1] PRIMARY KEY CLUSTERED ([SharedTemplateUserID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SharedTemplateUser])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SharedTemplateUser] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SharedTemplateUser] ([SharedTemplateUserID], [SharedTemplateID], [UserID], [ModifiedBy], [ModifiedOn])
        SELECT   [SharedTemplateUserID],
                 [SharedTemplateID],
                 [UserID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[SharedTemplateUser]
        ORDER BY [SharedTemplateUserID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SharedTemplateUser] OFF;
    END

DROP TABLE [dbo].[SharedTemplateUser];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SharedTemplateUser]', N'SharedTemplateUser';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SharedTemplateUser1]', N'PK_SharedTemplateUser', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[ShiftDiffPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ShiftDiffPolicy] (
    [ID]                            INT            IDENTITY (1, 1) NOT NULL,
    [ShiftDiffPolicyID]             INT            CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffPolicyID] DEFAULT ((0)) NOT NULL,
    [ShiftDiffPolicyName]           NVARCHAR (200) CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffPolicyName] DEFAULT ('') NOT NULL,
    [UsePayTypeQualifier]           BIT            CONSTRAINT [DF_ShiftDiffPolicy_OverridePayTypeQualifier] DEFAULT ((0)) NOT NULL,
    [AllowOverlapping]              BIT            CONSTRAINT [DF_ShiftDiffPolicy_AllowOverlapping] DEFAULT ((0)) NOT NULL,
    [OverlappingType]               INT            CONSTRAINT [DF_ShiftDiffPolicy_OverlappingType] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                     BIT            CONSTRAINT [DF_ShiftDiffPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME       CONSTRAINT [DF_ShiftDiffPolicy_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME       CONSTRAINT [DF_ShiftDiffPolicy_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                    INT            CONSTRAINT [DF_ShiftDiffPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME       CONSTRAINT [DF_ShiftDiffPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ShiftDiffAfterOvertimeEnabled] BIT            CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffAfterOvertimeEnabled] DEFAULT ((0)) NOT NULL,
    [NoShiftDiffOnOvertime]         BIT            CONSTRAINT [DF_ShiftDiffPolicy_NoShiftDiffOnOvertime] DEFAULT ((0)) NOT NULL,
    [ShiftDiffPayrollID]            INT            CONSTRAINT [DF_ShiftDiffPolicy_ShiftDiffPayrollID] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ShiftDiffPolicy1]
    ON [dbo].[tmp_ms_xx_ShiftDiffPolicy]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ShiftDiffPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ShiftDiffPolicy] ([ID], [ShiftDiffPolicyID], [ShiftDiffPolicyName], [UsePayTypeQualifier], [AllowOverlapping], [OverlappingType], [IsDeleted], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [ShiftDiffAfterOvertimeEnabled], [NoShiftDiffOnOvertime])
        SELECT   [ID],
                 [ShiftDiffPolicyID],
                 [ShiftDiffPolicyName],
                 [UsePayTypeQualifier],
                 [AllowOverlapping],
                 [OverlappingType],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ShiftDiffAfterOvertimeEnabled],
                 [NoShiftDiffOnOvertime]
        FROM     [dbo].[ShiftDiffPolicy]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicy] OFF;
    END

DROP TABLE [dbo].[ShiftDiffPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ShiftDiffPolicy]', N'ShiftDiffPolicy';

EXECUTE sp_rename N'[dbo].[ShiftDiffPolicy].[tmp_ms_xx_index_PK_ShiftDiffPolicy1]', N'PK_ShiftDiffPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ShiftDiffPolicy]([ShiftDiffPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ShiftDiffPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ShiftDiffPolicyAssign] (
    [ShiftDiffPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                  INT      CONSTRAINT [DF_ShiftDiffPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [ShiftDiffPolicyID]       INT      CONSTRAINT [DF_ShiftDiffPolicyAssign_ShiftDiffPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME CONSTRAINT [DF_ShiftDiffPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]             DATETIME CONSTRAINT [DF_ShiftDiffPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_ShiftDiffPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_ShiftDiffPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ShiftDiffPolicyAssign1]
    ON [dbo].[tmp_ms_xx_ShiftDiffPolicyAssign]([ShiftDiffPolicyAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ShiftDiffPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ShiftDiffPolicyAssign] ([ShiftDiffPolicyAssignID], [UserID], [ShiftDiffPolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ShiftDiffPolicyAssignID],
                 [UserID],
                 [ShiftDiffPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ShiftDiffPolicyAssign]
        ORDER BY [ShiftDiffPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicyAssign] OFF;
    END

DROP TABLE [dbo].[ShiftDiffPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ShiftDiffPolicyAssign]', N'ShiftDiffPolicyAssign';

EXECUTE sp_rename N'[dbo].[ShiftDiffPolicyAssign].[tmp_ms_xx_index_PK_ShiftDiffPolicyAssign1]', N'PK_ShiftDiffPolicyAssign', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ShiftDiffPolicyAssign]([UserID] ASC, [ShiftDiffPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[ShiftDiffPolicyDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ShiftDiffPolicyDetail] (
    [ID]                            INT             IDENTITY (1, 1) NOT NULL,
    [ShiftDiffPolicyDetailID]       INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffPolicyDetailID] DEFAULT ((0)) NOT NULL,
    [ShiftDiffPolicyID]             INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]                     BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ShiftDiffCode]                 NVARCHAR (100)  CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffCode] DEFAULT ('') NOT NULL,
    [ShiftDiffDisabled]             BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_ShiftDiffDisabled] DEFAULT ((0)) NOT NULL,
    [DayOfWeek]                     INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_DayOfWeek] DEFAULT ((0)) NOT NULL,
    [StartTime]                     DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_StartTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Duration]                      INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_Duration] DEFAULT ((0)) NOT NULL,
    [PayFactor]                     DECIMAL (20, 4) CONSTRAINT [DF_ShiftDiffPolicyDetail_PayFactor] DEFAULT ((0)) NULL,
    [AdditionalWage]                MONEY           CONSTRAINT [DF_ShiftDiffPolicyDetail_AdditionalWage] DEFAULT ((0)) NOT NULL,
    [WorkShiftDiffEnabled]          BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [WorkMinInShiftDiff]            BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMinInShiftDiff] DEFAULT ((0)) NOT NULL,
    [WorkMinInShiftDiffSecs]        INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMinInShiftDiffSecs] DEFAULT ((0)) NOT NULL,
    [WorkMustTimeBtw]               BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtw] DEFAULT ((0)) NOT NULL,
    [WorkMustTimeBtwStartTime]      DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwStartTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [WorkMustTimeBtwEndTime]        DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_EmpMustWorkTimeBtwEndTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [WorkNoTimeGetShiftDiff]        BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_DoesNotWorkTimespanShouldGetSD] DEFAULT ((0)) NOT NULL,
    [WorkNoTimeGetShiftDiffCode]    NVARCHAR (100)  CONSTRAINT [DF_ShiftDiffPolicyDetail_DoesNotWorkTimeSpanShiftCodeID] DEFAULT ('') NOT NULL,
    [WorkAdvancedRulesEnabled]      BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkAdvancedRulesEnabled] DEFAULT ((0)) NOT NULL,
    [WorkFixShiftDiffEnabled]       BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkFixShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [WorkFixShiftDiffType]          INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkFixShiftDiffType] DEFAULT ((0)) NOT NULL,
    [WorkNonFixShiftDiffType]       INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNonFixShiftDiffType] DEFAULT ((0)) NOT NULL,
    [WorkApplyToEntireShift]        BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkApplyToEntireShift] DEFAULT ((0)) NOT NULL,
    [NonWorkShiftDiffEnabled]       BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [NonWorkMinInShiftDiff]         BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiff] DEFAULT ((0)) NOT NULL,
    [NonWorkMinInShiftDiffSecs]     INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkMinInShiftDiffSecs] DEFAULT ((0)) NOT NULL,
    [NonWorkMustTimeBtw]            BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtw1] DEFAULT ((0)) NOT NULL,
    [NonWorkMustTimeBtwStartTime]   DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtwStartTime1] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [NonWorkMustTimeBtwEndTime]     DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkMustTimeBtwEndTime1] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [NonWorkNoTimeGetShiftDiff]     BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiff1] DEFAULT ((0)) NOT NULL,
    [NonWorkNoTimeGetShiftDiffCode] NVARCHAR (100)  CONSTRAINT [DF_ShiftDiffPolicyDetail_WorkNoTimeGetShiftDiffCode1] DEFAULT ('') NOT NULL,
    [NonWorkAdvancedRulesEnabled]   BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkAdvancedRulesEnabled] DEFAULT ((0)) NOT NULL,
    [NonWorkFixShiftDiffEnabled]    BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffEnabled] DEFAULT ((0)) NOT NULL,
    [NonWorkFixShiftDiffType]       INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkFixShiftDiffType] DEFAULT ((0)) NOT NULL,
    [NonWorkNonFixShiftDiffType]    INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkNonFixShiftDiffType] DEFAULT ((0)) NOT NULL,
    [NonWorkApplyToEntireShift]     BIT             CONSTRAINT [DF_ShiftDiffPolicyDetail_NonWorkApplyToEntireShift] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT             CONSTRAINT [DF_ShiftDiffPolicyDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME        CONSTRAINT [DF_ShiftDiffPolicyDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_ShiftDiffPolicyDetail1]
    ON [dbo].[tmp_ms_xx_ShiftDiffPolicyDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ShiftDiffPolicyDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicyDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_ShiftDiffPolicyDetail] ([ID], [ShiftDiffPolicyDetailID], [ShiftDiffPolicyID], [StartDateTime], [EndDateTime], [IsDeleted], [ShiftDiffCode], [ShiftDiffDisabled], [DayOfWeek], [StartTime], [Duration], [PayFactor], [AdditionalWage], [WorkShiftDiffEnabled], [WorkMinInShiftDiff], [WorkMinInShiftDiffSecs], [WorkMustTimeBtw], [WorkMustTimeBtwStartTime], [WorkMustTimeBtwEndTime], [WorkNoTimeGetShiftDiff], [WorkNoTimeGetShiftDiffCode], [WorkAdvancedRulesEnabled], [WorkFixShiftDiffEnabled], [WorkFixShiftDiffType], [WorkNonFixShiftDiffType], [WorkApplyToEntireShift], [NonWorkShiftDiffEnabled], [NonWorkMinInShiftDiff], [NonWorkMinInShiftDiffSecs], [NonWorkMustTimeBtw], [NonWorkMustTimeBtwStartTime], [NonWorkMustTimeBtwEndTime], [NonWorkNoTimeGetShiftDiff], [NonWorkNoTimeGetShiftDiffCode], [NonWorkAdvancedRulesEnabled], [NonWorkFixShiftDiffEnabled], [NonWorkFixShiftDiffType], [NonWorkNonFixShiftDiffType], [NonWorkApplyToEntireShift], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [ShiftDiffPolicyDetailID],
                 [ShiftDiffPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [ShiftDiffCode],
                 [ShiftDiffDisabled],
                 [DayOfWeek],
                 [StartTime],
                 [Duration],
                 [PayFactor],
                 [AdditionalWage],
                 [WorkShiftDiffEnabled],
                 [WorkMinInShiftDiff],
                 [WorkMinInShiftDiffSecs],
                 [WorkMustTimeBtw],
                 [WorkMustTimeBtwStartTime],
                 [WorkMustTimeBtwEndTime],
                 [WorkNoTimeGetShiftDiff],
                 [WorkNoTimeGetShiftDiffCode],
                 [WorkAdvancedRulesEnabled],
                 [WorkFixShiftDiffEnabled],
                 [WorkFixShiftDiffType],
                 [WorkNonFixShiftDiffType],
                 [WorkApplyToEntireShift],
                 [NonWorkShiftDiffEnabled],
                 [NonWorkMinInShiftDiff],
                 [NonWorkMinInShiftDiffSecs],
                 [NonWorkMustTimeBtw],
                 [NonWorkMustTimeBtwStartTime],
                 [NonWorkMustTimeBtwEndTime],
                 [NonWorkNoTimeGetShiftDiff],
                 [NonWorkNoTimeGetShiftDiffCode],
                 [NonWorkAdvancedRulesEnabled],
                 [NonWorkFixShiftDiffEnabled],
                 [NonWorkFixShiftDiffType],
                 [NonWorkNonFixShiftDiffType],
                 [NonWorkApplyToEntireShift],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[ShiftDiffPolicyDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_ShiftDiffPolicyDetail] OFF;
    END

DROP TABLE [dbo].[ShiftDiffPolicyDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ShiftDiffPolicyDetail]', N'ShiftDiffPolicyDetail';

EXECUTE sp_rename N'[dbo].[ShiftDiffPolicyDetail].[tmp_ms_xx_index_PK_ShiftDiffPolicyDetail1]', N'PK_ShiftDiffPolicyDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[ShiftDiffPolicyDetail]([StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SSOLogin]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SSOLogin] (
    [ID]         INT          IDENTITY (1, 1) NOT NULL,
    [GUID]       VARCHAR (36) NOT NULL,
    [DateIssued] DATETIME     NOT NULL,
    [ModifiedBy] INT          CONSTRAINT [DF_SSOLogin_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn] DATETIME     CONSTRAINT [DF_SSOLogin_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SSOLogin1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SSOLogin])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SSOLogin] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SSOLogin] ([ID], [GUID], [DateIssued], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [GUID],
                 [DateIssued],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[SSOLogin]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SSOLogin] OFF;
    END

DROP TABLE [dbo].[SSOLogin];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SSOLogin]', N'SSOLogin';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SSOLogin1]', N'PK_SSOLogin', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[SSOLogin].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[SSOLogin]([DateIssued] DESC);


GO
PRINT N'Starting rebuilding table [dbo].[StatusBoard]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StatusBoard] (
    [StatusBoardID]          INT            IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT            CONSTRAINT [DF_StatusBoard_UserID] DEFAULT ((0)) NOT NULL,
    [StatusType]             INT            CONSTRAINT [DF_StatusBoard_StatusType] DEFAULT ((0)) NOT NULL,
    [TransactionType]        INT            CONSTRAINT [DF_StatusBoard_TransactionType] DEFAULT ((0)) NOT NULL,
    [EmpNote]                NVARCHAR (MAX) CONSTRAINT [DF_StatusBoard_EmpNote] DEFAULT ('') NOT NULL,
    [TransactionDateTime]    DATETIME       CONSTRAINT [DF_StatusBoard_TransactionDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [TransactionUTCDateTime] DATETIME       CONSTRAINT [DF_StatusBoard_TransactionUTCDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [LLDetailID1]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]            INT            CONSTRAINT [DF_StatusBoard_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]           INT            CONSTRAINT [DF_StatusBoard_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]             INT            CONSTRAINT [DF_StatusBoard_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME       CONSTRAINT [DF_StatusBoard_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_StatusBoard1]
    ON [dbo].[tmp_ms_xx_StatusBoard]([StatusBoardID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StatusBoard])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoard] ON;
        INSERT INTO [dbo].[tmp_ms_xx_StatusBoard] ([StatusBoardID], [UserID], [StatusType], [TransactionType], [EmpNote], [TransactionDateTime], [TransactionUTCDateTime], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn])
        SELECT   [StatusBoardID],
                 [UserID],
                 [StatusType],
                 [TransactionType],
                 [EmpNote],
                 [TransactionDateTime],
                 [TransactionUTCDateTime],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[StatusBoard]
        ORDER BY [StatusBoardID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoard] OFF;
    END

DROP TABLE [dbo].[StatusBoard];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StatusBoard]', N'StatusBoard';

EXECUTE sp_rename N'[dbo].[StatusBoard].[tmp_ms_xx_index_PK_StatusBoard1]', N'PK_StatusBoard', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[StatusBoard].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[StatusBoard]([UserID] ASC, [TransactionDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[StatusBoardSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StatusBoardSetting] (
    [StatusBoardSettingID]         INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                       INT      CONSTRAINT [DF_StatusBoardSetting_UserID] DEFAULT ((0)) NOT NULL,
    [ApproachingWeeklyOTLimitSecs] INT      CONSTRAINT [DF_StatusBoardSetting_ApproachingOTLimitSecs] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_StatusBoardSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_StatusBoardSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [HomeWidgetSettingType]        INT      CONSTRAINT [DF_StatusBoardSetting_HomeWidgetSettingType] DEFAULT ((0)) NOT NULL,
    [PreferenceID]                 INT      CONSTRAINT [DF_StatusBoardSetting_PreferenceID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_StatusBoardSetting1] PRIMARY KEY CLUSTERED ([StatusBoardSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StatusBoardSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoardSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_StatusBoardSetting] ([StatusBoardSettingID], [UserID], [ApproachingWeeklyOTLimitSecs], [ModifiedBy], [ModifiedOn], [HomeWidgetSettingType], [PreferenceID])
        SELECT   [StatusBoardSettingID],
                 [UserID],
                 [ApproachingWeeklyOTLimitSecs],
                 [ModifiedBy],
                 [ModifiedOn],
                 [HomeWidgetSettingType],
                 [PreferenceID]
        FROM     [dbo].[StatusBoardSetting]
        ORDER BY [StatusBoardSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoardSetting] OFF;
    END

DROP TABLE [dbo].[StatusBoardSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StatusBoardSetting]', N'StatusBoardSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_StatusBoardSetting1]', N'PK_StatusBoardSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[StatusBoardSetting]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[StatusBoardSettingDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_StatusBoardSettingDetail] (
    [StatusBoardSettingDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [StatusBoardSettingID]       INT      CONSTRAINT [DF_StatusBoardSettingDetail_StatusBoardSettingID] DEFAULT ((0)) NOT NULL,
    [StatusBoardColumnType]      INT      CONSTRAINT [DF_Table_1_UserID] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]            INT      CONSTRAINT [DF_StatusBoardSettingDetail_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                 INT      CONSTRAINT [DF_StatusBoardSettingDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME CONSTRAINT [DF_StatusBoardSettingDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_StatusBoardSettingDetail1] PRIMARY KEY CLUSTERED ([StatusBoardSettingDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[StatusBoardSettingDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoardSettingDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_StatusBoardSettingDetail] ([StatusBoardSettingDetailID], [StatusBoardSettingID], [StatusBoardColumnType], [OrdinalPosition], [ModifiedBy], [ModifiedOn])
        SELECT   [StatusBoardSettingDetailID],
                 [StatusBoardSettingID],
                 [StatusBoardColumnType],
                 [OrdinalPosition],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[StatusBoardSettingDetail]
        ORDER BY [StatusBoardSettingDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_StatusBoardSettingDetail] OFF;
    END

DROP TABLE [dbo].[StatusBoardSettingDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_StatusBoardSettingDetail]', N'StatusBoardSettingDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_StatusBoardSettingDetail1]', N'PK_StatusBoardSettingDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[StatusBoardSettingDetail]([StatusBoardSettingID] ASC, [OrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SummaryWidgetSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SummaryWidgetSetting] (
    [SummaryWidgetSettingID]   INT          IDENTITY (1, 1) NOT NULL,
    [SummaryWidgetSettingType] INT          CONSTRAINT [DF_SummaryWidgetSetting_SummaryWidgetSettingType] DEFAULT ((0)) NOT NULL,
    [UserID]                   INT          CONSTRAINT [DF_SummaryWidgetSetting_UserID] DEFAULT ((0)) NOT NULL,
    [DefaultToType]            INT          CONSTRAINT [DF_SummaryWidgetSetting_DefaultToType] DEFAULT ((0)) NOT NULL,
    [WeekBeginsOn]             INT          CONSTRAINT [DF_SummaryWidgetSetting_WeekBeginsOn] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT          CONSTRAINT [DF_SummaryWidgetSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME     CONSTRAINT [DF_SummaryWidgetSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ColorCode1]               VARCHAR (50) CONSTRAINT [DF_SummaryWidgetSetting_ColorCode1] DEFAULT ('') NOT NULL,
    [ColorCode2]               VARCHAR (50) CONSTRAINT [DF_SummaryWidgetSetting_ColorCode2] DEFAULT ('') NOT NULL,
    [HomeWidgetSettingType]    INT          CONSTRAINT [DF_SummaryWidgetSetting_HomeWidgetSettingType] DEFAULT ((0)) NOT NULL,
    [PreferenceID]             INT          CONSTRAINT [DF_SummaryWidgetSetting_PreferenceID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SummaryWidgetSetting1] PRIMARY KEY CLUSTERED ([SummaryWidgetSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SummaryWidgetSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SummaryWidgetSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SummaryWidgetSetting] ([SummaryWidgetSettingID], [SummaryWidgetSettingType], [UserID], [DefaultToType], [WeekBeginsOn], [ModifiedBy], [ModifiedOn], [ColorCode1], [ColorCode2], [HomeWidgetSettingType], [PreferenceID])
        SELECT   [SummaryWidgetSettingID],
                 [SummaryWidgetSettingType],
                 [UserID],
                 [DefaultToType],
                 [WeekBeginsOn],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ColorCode1],
                 [ColorCode2],
                 [HomeWidgetSettingType],
                 [PreferenceID]
        FROM     [dbo].[SummaryWidgetSetting]
        ORDER BY [SummaryWidgetSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SummaryWidgetSetting] OFF;
    END

DROP TABLE [dbo].[SummaryWidgetSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SummaryWidgetSetting]', N'SummaryWidgetSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SummaryWidgetSetting1]', N'PK_SummaryWidgetSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[SummaryWidgetSetting]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SummaryWidgetSettingDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SummaryWidgetSettingDetail] (
    [SummaryWidgetSettingDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [SummaryWidgetSettingID]       INT      CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryWidgetSettingID] DEFAULT ((0)) NOT NULL,
    [SummaryType]                  INT      CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryType] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT      CONSTRAINT [DF_SummaryWidgetSettingDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME CONSTRAINT [DF_SummaryWidgetSettingDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [OrdinalPosition]              INT      CONSTRAINT [DF_SummaryWidgetSettingDetail_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [SummaryTypeID]                INT      CONSTRAINT [DF_SummaryWidgetSettingDetail_SummaryTypeID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SummaryWidgetSettingDetail1] PRIMARY KEY CLUSTERED ([SummaryWidgetSettingDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SummaryWidgetSettingDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SummaryWidgetSettingDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SummaryWidgetSettingDetail] ([SummaryWidgetSettingDetailID], [SummaryWidgetSettingID], [SummaryType], [ModifiedBy], [ModifiedOn], [OrdinalPosition], [SummaryTypeID])
        SELECT   [SummaryWidgetSettingDetailID],
                 [SummaryWidgetSettingID],
                 [SummaryType],
                 [ModifiedBy],
                 [ModifiedOn],
                 [OrdinalPosition],
                 [SummaryTypeID]
        FROM     [dbo].[SummaryWidgetSettingDetail]
        ORDER BY [SummaryWidgetSettingDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SummaryWidgetSettingDetail] OFF;
    END

DROP TABLE [dbo].[SummaryWidgetSettingDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SummaryWidgetSettingDetail]', N'SummaryWidgetSettingDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SummaryWidgetSettingDetail1]', N'PK_SummaryWidgetSettingDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[SummaryWidgetSettingDetail]([SummaryWidgetSettingID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[SupportAccessGrant]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_SupportAccessGrant] (
    [SupportAccessGrantID]    INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                  INT      CONSTRAINT [DF_SupportAccessGrant_UserID] DEFAULT ((0)) NOT NULL,
    [SupportAccessPeriodType] INT      CONSTRAINT [DF_SupportAccessGrant_SupportAcessPeriodType] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME CONSTRAINT [DF_SupportAccessGrant_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]             DATETIME CONSTRAINT [DF_SupportAccessGrant_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_SupportAccessGrant_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_SupportAccessGrant_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_SupportAccessGrant1] PRIMARY KEY CLUSTERED ([SupportAccessGrantID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[SupportAccessGrant])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SupportAccessGrant] ON;
        INSERT INTO [dbo].[tmp_ms_xx_SupportAccessGrant] ([SupportAccessGrantID], [UserID], [SupportAccessPeriodType], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [SupportAccessGrantID],
                 [UserID],
                 [SupportAccessPeriodType],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[SupportAccessGrant]
        ORDER BY [SupportAccessGrantID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_SupportAccessGrant] OFF;
    END

DROP TABLE [dbo].[SupportAccessGrant];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_SupportAccessGrant]', N'SupportAccessGrant';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_SupportAccessGrant1]', N'PK_SupportAccessGrant', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Tag]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Tag] (
    [TagID]      INT           IDENTITY (1, 1) NOT NULL,
    [TagName]    NVARCHAR (50) CONSTRAINT [DF_Tag_TagName] DEFAULT ('') NOT NULL,
    [Feature]    NVARCHAR (50) CONSTRAINT [DF_Tag_Feature] DEFAULT ('') NOT NULL,
    [LanguageID] VARCHAR (50)  CONSTRAINT [DF_Tag_LanguageID] DEFAULT ('') NOT NULL,
    [ModifiedBy] INT           CONSTRAINT [DF_Tag_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn] DATETIME      CONSTRAINT [DF_Tag_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_Tag1]
    ON [dbo].[tmp_ms_xx_Tag]([TagID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Tag])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Tag] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Tag] ([TagID], [TagName], [Feature], [LanguageID], [ModifiedBy], [ModifiedOn])
        SELECT   [TagID],
                 [TagName],
                 [Feature],
                 [LanguageID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[Tag]
        ORDER BY [TagID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Tag] OFF;
    END

DROP TABLE [dbo].[Tag];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Tag]', N'Tag';

EXECUTE sp_rename N'[dbo].[Tag].[tmp_ms_xx_index_PK_Tag1]', N'PK_Tag', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[Tag].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[Tag]([TagName] ASC, [LanguageID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Telephones]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Telephones] (
    [TelephoneID]     INT           IDENTITY (1, 1) NOT NULL,
    [TelePhoneNumber] NVARCHAR (50) NOT NULL,
    [Description]     VARCHAR (50)  NOT NULL,
    [ModifiedBy]      INT           CONSTRAINT [DF_Telephones_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME      CONSTRAINT [DF_Telephones_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Telephones])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Telephones] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Telephones] ([TelephoneID], [TelePhoneNumber], [Description], [ModifiedBy], [ModifiedOn])
        SELECT [TelephoneID],
               [TelePhoneNumber],
               [Description],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[Telephones];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Telephones] OFF;
    END

DROP TABLE [dbo].[Telephones];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Telephones]', N'Telephones';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchCall]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchCall] (
    [TelePunchCallID] INT      IDENTITY (1, 1) NOT NULL,
    [SessionID]       INT      NOT NULL,
    [UserID]          INT      NOT NULL,
    [StartTime]       DATETIME NOT NULL,
    [Duration]        INT      NOT NULL,
    [ModifiedBy]      INT      CONSTRAINT [DF_TelePunchCall_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME CONSTRAINT [DF_TelePunchCall_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchCall])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchCall] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchCall] ([TelePunchCallID], [SessionID], [UserID], [StartTime], [Duration], [ModifiedBy], [ModifiedOn])
        SELECT [TelePunchCallID],
               [SessionID],
               [UserID],
               [StartTime],
               [Duration],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[TelePunchCall];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchCall] OFF;
    END

DROP TABLE [dbo].[TelePunchCall];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchCall]', N'TelePunchCall';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchConfig]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchConfig] (
    [TelePunchConfigID]        INT          IDENTITY (1, 1) NOT NULL,
    [TelePunchPolicyID]        INT          NOT NULL,
    [AllowTelePunch]           BIT          NOT NULL,
    [TelePunchCallBack]        BIT          NOT NULL,
    [TelePunchAccruals]        BIT          NOT NULL,
    [AccrualDigit1]            INT          NOT NULL,
    [AccrualDigit2]            INT          NOT NULL,
    [AccrualDigit3]            INT          NOT NULL,
    [AccrualDigit4]            INT          NOT NULL,
    [AccrualDigit5]            INT          NOT NULL,
    [AccrualDigit6]            INT          NOT NULL,
    [AccrualDigit7]            INT          NOT NULL,
    [AccrualDigit8]            INT          NOT NULL,
    [AccrualDigit9]            INT          NOT NULL,
    [FirstCheckMinutes]        INT          NOT NULL,
    [PeriodicCheckMinutes]     INT          NOT NULL,
    [LastCheckMinutes]         INT          NOT NULL,
    [OutsideLine]              VARCHAR (10) NOT NULL,
    [CallBackNumber]           VARCHAR (50) NOT NULL,
    [GenerateCallBackReport]   BIT          NOT NULL,
    [ModifiedBy]               INT          CONSTRAINT [DF_TelePunchConfig_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME     CONSTRAINT [DF_TelePunchConfig_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ApprovalsEnabled]         BIT          CONSTRAINT [DF_TelePunchConfig_ApprovalsEnabled] DEFAULT ((0)) NOT NULL,
    [ApproveToday]             BIT          CONSTRAINT [DF_TelePunchConfig_ApproveToday] DEFAULT ((0)) NOT NULL,
    [ApproveYesterday]         BIT          CONSTRAINT [DF_TelePunchConfig_ApproveYesterday] DEFAULT ((0)) NOT NULL,
    [ApproveCurrentWeek]       BIT          CONSTRAINT [DF_TelePunchConfig_ApproveCurrentWeek] DEFAULT ((0)) NOT NULL,
    [ApprovePreviousWeek]      BIT          CONSTRAINT [DF_TelePunchConfig_ApprovePreviousWeek] DEFAULT ((0)) NOT NULL,
    [ApproveCurrentPayPeriod]  BIT          CONSTRAINT [DF_TelePunchConfig_ApproveCurrentPayPeriod] DEFAULT ((0)) NOT NULL,
    [ApprovePreviousPayPeriod] BIT          CONSTRAINT [DF_TelePunchConfig_ApprovePreviousPayPeriod] DEFAULT ((0)) NOT NULL,
    [AllowPayAdjustmentEntry]  BIT          CONSTRAINT [DF_TelePunchConfig_AllowPayAdjustmentEntry] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchConfig])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchConfig] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchConfig] ([TelePunchConfigID], [TelePunchPolicyID], [AllowTelePunch], [TelePunchCallBack], [TelePunchAccruals], [AccrualDigit1], [AccrualDigit2], [AccrualDigit3], [AccrualDigit4], [AccrualDigit5], [AccrualDigit6], [AccrualDigit7], [AccrualDigit8], [AccrualDigit9], [FirstCheckMinutes], [PeriodicCheckMinutes], [LastCheckMinutes], [OutsideLine], [CallBackNumber], [GenerateCallBackReport], [ModifiedBy], [ModifiedOn], [ApprovalsEnabled], [ApproveToday], [ApproveYesterday], [ApproveCurrentWeek], [ApprovePreviousWeek], [ApproveCurrentPayPeriod], [ApprovePreviousPayPeriod], [AllowPayAdjustmentEntry])
        SELECT [TelePunchConfigID],
               [TelePunchPolicyID],
               [AllowTelePunch],
               [TelePunchCallBack],
               [TelePunchAccruals],
               [AccrualDigit1],
               [AccrualDigit2],
               [AccrualDigit3],
               [AccrualDigit4],
               [AccrualDigit5],
               [AccrualDigit6],
               [AccrualDigit7],
               [AccrualDigit8],
               [AccrualDigit9],
               [FirstCheckMinutes],
               [PeriodicCheckMinutes],
               [LastCheckMinutes],
               [OutsideLine],
               [CallBackNumber],
               [GenerateCallBackReport],
               [ModifiedBy],
               [ModifiedOn],
               [ApprovalsEnabled],
               [ApproveToday],
               [ApproveYesterday],
               [ApproveCurrentWeek],
               [ApprovePreviousWeek],
               [ApproveCurrentPayPeriod],
               [ApprovePreviousPayPeriod],
               [AllowPayAdjustmentEntry]
        FROM   [dbo].[TelePunchConfig];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchConfig] OFF;
    END

DROP TABLE [dbo].[TelePunchConfig];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchConfig]', N'TelePunchConfig';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchLLPrompt]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchLLPrompt] (
    [TelePunchLLPromptID]   INT           IDENTITY (1, 1) NOT NULL,
    [TelePunchLLPromptName] NVARCHAR (50) CONSTRAINT [DF_TelePunchLLPrompt_TelePunchLLPromptName] DEFAULT ('') NOT NULL,
    [ModifiedBy]            INT           CONSTRAINT [DF_TelePunchLLPrompt_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME      CONSTRAINT [DF_TelePunchLLPrompt_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TelePunchLLPrompt1] PRIMARY KEY CLUSTERED ([TelePunchLLPromptID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchLLPrompt])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchLLPrompt] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchLLPrompt] ([TelePunchLLPromptID], [TelePunchLLPromptName], [ModifiedBy], [ModifiedOn])
        SELECT   [TelePunchLLPromptID],
                 [TelePunchLLPromptName],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TelePunchLLPrompt]
        ORDER BY [TelePunchLLPromptID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchLLPrompt] OFF;
    END

DROP TABLE [dbo].[TelePunchLLPrompt];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchLLPrompt]', N'TelePunchLLPrompt';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TelePunchLLPrompt1]', N'PK_TelePunchLLPrompt', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchMessage]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchMessage] (
    [TelePunchMessageID]      INT           IDENTITY (1, 1) NOT NULL,
    [SystemTelePunchNumberID] INT           CONSTRAINT [DF_TelePunchMessage_SystemTelePunchNumberID] DEFAULT ((0)) NOT NULL,
    [LanguageID]              INT           CONSTRAINT [DF_TelePunchMessage_LanguageID] DEFAULT ((0)) NOT NULL,
    [TelePunchPrompt_ID]      INT           CONSTRAINT [DF_TelePunchMessage_TelePunchPrompt_ID] DEFAULT ((0)) NOT NULL,
    [Message]                 VARCHAR (MAX) CONSTRAINT [DF_TelePunchMessage_Message] DEFAULT ('') NOT NULL,
    [Version]                 INT           CONSTRAINT [DF_TelePunchMessage_Version] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT           CONSTRAINT [DF_TelePunchMessage_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME      CONSTRAINT [DF_TelePunchMessage_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchMessage])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchMessage] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchMessage] ([TelePunchMessageID], [SystemTelePunchNumberID], [LanguageID], [TelePunchPrompt_ID], [Message], [Version], [ModifiedBy], [ModifiedOn])
        SELECT [TelePunchMessageID],
               [SystemTelePunchNumberID],
               [LanguageID],
               [TelePunchPrompt_ID],
               [Message],
               [Version],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[TelePunchMessage];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchMessage] OFF;
    END

DROP TABLE [dbo].[TelePunchMessage];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchMessage]', N'TelePunchMessage';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchNumber]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchNumber] (
    [TelePunchNumberID] INT           IDENTITY (1, 1) NOT NULL,
    [TelePunchPolicyID] INT           CONSTRAINT [DF_TelePunchNumber_TelePunchPolicyID] DEFAULT ((0)) NOT NULL,
    [Phone]             VARCHAR (25)  CONSTRAINT [DF_TelePunchNumber_Phone] DEFAULT ('') NOT NULL,
    [Description]       VARCHAR (600) CONSTRAINT [DF_TelePunchNumber_Description] DEFAULT ('') NOT NULL,
    [ModifiedBy]        INT           CONSTRAINT [DF_TelePunchNumber_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME      CONSTRAINT [DF_TelePunchNumber_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchNumber])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchNumber] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchNumber] ([TelePunchNumberID], [TelePunchPolicyID], [Phone], [Description], [ModifiedBy], [ModifiedOn])
        SELECT [TelePunchNumberID],
               [TelePunchPolicyID],
               [Phone],
               [Description],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[TelePunchNumber];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchNumber] OFF;
    END

DROP TABLE [dbo].[TelePunchNumber];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchNumber]', N'TelePunchNumber';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchPolicy] (
    [TelePunchPolicyID]   INT           IDENTITY (1, 1) NOT NULL,
    [TelePunchPolicyName] NVARCHAR (50) CONSTRAINT [DF_TelePunchPolicy_TelePunchPolicyName] DEFAULT ('') NOT NULL,
    [TelePunchLLPromptID] INT           CONSTRAINT [DF_TelePunchPolicy_TelePunchLLPromptID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_TelePunchPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_TelePunchPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsDeleted]           BIT           CONSTRAINT [DF_TelePunchPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TelePunchPolicy1] PRIMARY KEY CLUSTERED ([TelePunchPolicyID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchPolicy] ([TelePunchPolicyID], [TelePunchPolicyName], [TelePunchLLPromptID], [ModifiedBy], [ModifiedOn], [IsDeleted])
        SELECT   [TelePunchPolicyID],
                 [TelePunchPolicyName],
                 [TelePunchLLPromptID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsDeleted]
        FROM     [dbo].[TelePunchPolicy]
        ORDER BY [TelePunchPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPolicy] OFF;
    END

DROP TABLE [dbo].[TelePunchPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchPolicy]', N'TelePunchPolicy';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TelePunchPolicy1]', N'PK_TelePunchPolicy', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchPolicyAssign] (
    [TelePunchPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [TelePunchPolicyID]       INT      CONSTRAINT [DF_TelePunchPolicyAssign_TelePunchPolicyID] DEFAULT ((0)) NOT NULL,
    [UserID]                  INT      CONSTRAINT [DF_TelePunchPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]           DATETIME CONSTRAINT [DF_TelePunchPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]             DATETIME CONSTRAINT [DF_TelePunchPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsActive]                BIT      CONSTRAINT [DF_TelePunchPolicyAssign_IsActive] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT      CONSTRAINT [DF_TelePunchPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME CONSTRAINT [DF_TelePunchPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TelePunchPolicyAssign1] PRIMARY KEY CLUSTERED ([TelePunchPolicyAssignID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchPolicyAssign] ([TelePunchPolicyAssignID], [TelePunchPolicyID], [UserID], [StartDateTime], [EndDateTime], [IsActive], [ModifiedBy], [ModifiedOn])
        SELECT   [TelePunchPolicyAssignID],
                 [TelePunchPolicyID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsActive],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TelePunchPolicyAssign]
        ORDER BY [TelePunchPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPolicyAssign] OFF;
    END

DROP TABLE [dbo].[TelePunchPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchPolicyAssign]', N'TelePunchPolicyAssign';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TelePunchPolicyAssign1]', N'PK_TelePunchPolicyAssign', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TelePunchPrompt]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TelePunchPrompt] (
    [TelePunchPromptID]   INT           IDENTITY (1, 1) NOT NULL,
    [TelePunchLLPromptID] INT           CONSTRAINT [DF_TelePunchPrompt_TelePunchLLPromptID] DEFAULT ((0)) NOT NULL,
    [LLID]                INT           CONSTRAINT [DF_TelePunchPrompt_LLID] DEFAULT ((0)) NOT NULL,
    [PromptText]          NVARCHAR (50) CONSTRAINT [DF_TelePunchPrompt_PromptText] DEFAULT ('') NOT NULL,
    [ManualEntryEnabled]  BIT           CONSTRAINT [DF_TelePunchPrompt_ManualEntryEnabled] DEFAULT ((0)) NOT NULL,
    [PromptOrder]         INT           CONSTRAINT [DF_TelePunchPrompt_PromptOrder] DEFAULT ((0)) NOT NULL,
    [PromptClockIn]       BIT           CONSTRAINT [DF_TelePunchPrompt_PromptClockIn] DEFAULT ((0)) NOT NULL,
    [PromptEndBreak]      BIT           CONSTRAINT [DF_TelePunchPrompt_PromptEndBreak] DEFAULT ((0)) NOT NULL,
    [PromptEndLunch]      BIT           CONSTRAINT [DF_TelePunchPrompt_PromptEndLunch] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT           CONSTRAINT [DF_TelePunchPrompt_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME      CONSTRAINT [DF_TelePunchPrompt_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TelePunchPrompt1] PRIMARY KEY CLUSTERED ([TelePunchPromptID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TelePunchPrompt])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPrompt] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TelePunchPrompt] ([TelePunchPromptID], [TelePunchLLPromptID], [LLID], [PromptText], [ManualEntryEnabled], [PromptOrder], [PromptClockIn], [PromptEndBreak], [PromptEndLunch], [ModifiedBy], [ModifiedOn])
        SELECT   [TelePunchPromptID],
                 [TelePunchLLPromptID],
                 [LLID],
                 [PromptText],
                 [ManualEntryEnabled],
                 [PromptOrder],
                 [PromptClockIn],
                 [PromptEndBreak],
                 [PromptEndLunch],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TelePunchPrompt]
        ORDER BY [TelePunchPromptID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TelePunchPrompt] OFF;
    END

DROP TABLE [dbo].[TelePunchPrompt];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TelePunchPrompt]', N'TelePunchPrompt';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TelePunchPrompt1]', N'PK_TelePunchPrompt', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TerminalStatusWidgetSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TerminalStatusWidgetSetting] (
    [TerminalStatusWidgetSettingID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                        INT      CONSTRAINT [DF_TerminalStatusWidgetSetting_UserID] DEFAULT ((0)) NOT NULL,
    [StartRangeSecs]                INT      CONSTRAINT [DF_TerminalStatusWidgetSetting_StartRangeSecs] DEFAULT ((0)) NOT NULL,
    [EndRangeSecs]                  INT      CONSTRAINT [DF_TerminalStatusWidgetSetting_EndRangeSecs] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_TerminalStatusWidgetSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_TerminalStatusWidgetSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TerminalStatusWidgetSetting1] PRIMARY KEY CLUSTERED ([TerminalStatusWidgetSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TerminalStatusWidgetSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TerminalStatusWidgetSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TerminalStatusWidgetSetting] ([TerminalStatusWidgetSettingID], [UserID], [StartRangeSecs], [EndRangeSecs], [ModifiedBy], [ModifiedOn])
        SELECT   [TerminalStatusWidgetSettingID],
                 [UserID],
                 [StartRangeSecs],
                 [EndRangeSecs],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TerminalStatusWidgetSetting]
        ORDER BY [TerminalStatusWidgetSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TerminalStatusWidgetSetting] OFF;
    END

DROP TABLE [dbo].[TerminalStatusWidgetSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TerminalStatusWidgetSetting]', N'TerminalStatusWidgetSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TerminalStatusWidgetSetting1]', N'PK_TerminalStatusWidgetSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TimeCardApprovalSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeCardApprovalSetting] (
    [TimeCardApprovalSettingID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                    INT      CONSTRAINT [DF_TimeCardApprovalSetting_UserID] DEFAULT ((0)) NOT NULL,
    [ColumnType]                INT      CONSTRAINT [DF_TimeCardApprovalSetting_ColumnType] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]           INT      CONSTRAINT [DF_TimeCardApprovalSetting_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                INT      CONSTRAINT [DF_TimeCardApprovalSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                DATETIME CONSTRAINT [DF_TimeCardApprovalSetting_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeCardApprovalSetting1] PRIMARY KEY CLUSTERED ([TimeCardApprovalSettingID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeCardApprovalSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeCardApprovalSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeCardApprovalSetting] ([TimeCardApprovalSettingID], [UserID], [ColumnType], [OrdinalPosition], [ModifiedBy], [ModifiedOn])
        SELECT   [TimeCardApprovalSettingID],
                 [UserID],
                 [ColumnType],
                 [OrdinalPosition],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeCardApprovalSetting]
        ORDER BY [TimeCardApprovalSettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeCardApprovalSetting] OFF;
    END

DROP TABLE [dbo].[TimeCardApprovalSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeCardApprovalSetting]', N'TimeCardApprovalSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeCardApprovalSetting1]', N'PK_TimeCardApprovalSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeCardApprovalSetting]([UserID] ASC, [OrdinalPosition] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeCardNote]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeCardNote] (
    [TimeCardNoteID] INT           IDENTITY (1, 1) NOT NULL,
    [Code]           NVARCHAR (50) CONSTRAINT [DF_TimeCardNote_Code] DEFAULT ('') NOT NULL,
    [Note]           NVARCHAR (50) NOT NULL,
    [ModifiedBy]     INT           CONSTRAINT [DF_TimeCardNote_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME      CONSTRAINT [DF_TimeCardNote_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeCardNote1]
    ON [dbo].[tmp_ms_xx_TimeCardNote]([TimeCardNoteID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeCardNote])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeCardNote] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeCardNote] ([TimeCardNoteID], [Code], [Note], [ModifiedBy], [ModifiedOn])
        SELECT   [TimeCardNoteID],
                 [Code],
                 [Note],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeCardNote]
        ORDER BY [TimeCardNoteID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeCardNote] OFF;
    END

DROP TABLE [dbo].[TimeCardNote];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeCardNote]', N'TimeCardNote';

EXECUTE sp_rename N'[dbo].[TimeCardNote].[tmp_ms_xx_index_PK_TimeCardNote1]', N'PK_TimeCardNote', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeCardNote].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeCardNote]([Code] ASC, [Note] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffCalendarSetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffCalendarSetting] (
    [ID]             INT           IDENTITY (1, 1) NOT NULL,
    [UserID]         INT           CONSTRAINT [DF_TimeOffCalendarSetting_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeIDs]     VARCHAR (MAX) CONSTRAINT [DF_TimeOffCalendarSetting_PayTypeIDs] DEFAULT ('') NOT NULL,
    [HolidayListIDs] VARCHAR (MAX) CONSTRAINT [DF_Table_1_HolidayListidS] DEFAULT ('') NOT NULL,
    [ModifiedBy]     INT           CONSTRAINT [DF_TimeOffCalendarSetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]     DATETIME      CONSTRAINT [DF_TimeOffCalendarSetting_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeOffCalendarSetting1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffCalendarSetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffCalendarSetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffCalendarSetting] ([ID], [UserID], [PayTypeIDs], [HolidayListIDs], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [UserID],
                 [PayTypeIDs],
                 [HolidayListIDs],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeOffCalendarSetting]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffCalendarSetting] OFF;
    END

DROP TABLE [dbo].[TimeOffCalendarSetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffCalendarSetting]', N'TimeOffCalendarSetting';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeOffCalendarSetting1]', N'PK_TimeOffCalendarSetting', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffData]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffData] (
    [TimeOffDataID]      INT            IDENTITY (1, 1) NOT NULL,
    [UserID]             INT            CONSTRAINT [DF_TimeOffData_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]          INT            CONSTRAINT [DF_TimeOffData_PayTypeID] DEFAULT ((0)) NOT NULL,
    [AccruedSecs]        INT            CONSTRAINT [DF_TimeOffData_AccruedSecs] DEFAULT ((0)) NOT NULL,
    [GrantedSecs]        INT            CONSTRAINT [DF_TimeOffData_GrantedSecs] DEFAULT ((0)) NOT NULL,
    [ManSecs]            INT            CONSTRAINT [DF_TimeOffData_ManSecs] DEFAULT ((0)) NOT NULL,
    [UsedSecs]           INT            CONSTRAINT [DF_TimeOffData_UsedSecs] DEFAULT ((0)) NOT NULL,
    [AvailableSecs]      INT            CONSTRAINT [DF_TimeOffData_AvailableSecs] DEFAULT ((0)) NOT NULL,
    [ApplyToDateTime]    DATETIME       CONSTRAINT [DF_TimeOffData_TimeOffEntryDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [AdjustmentUserID]   INT            CONSTRAINT [DF_TimeOffData_GrantorUserID] DEFAULT ((0)) NOT NULL,
    [IsSystemGenerated]  BIT            CONSTRAINT [DF_TimeOffData_IsSystemGenerated] DEFAULT ((0)) NOT NULL,
    [Notes]              NVARCHAR (MAX) CONSTRAINT [DF_TimeOffData_Notes] DEFAULT ('') NOT NULL,
    [TimeSlicePreID]     INT            CONSTRAINT [DF_TimeOffData_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [CreationDateTime]   DATETIME       CONSTRAINT [DF_TimeOffData_TimeOffProcessDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [ModifiedBy]         INT            CONSTRAINT [DF_TimeOffData_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME       CONSTRAINT [DF_TimeOffData_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [MakeUpSecs]         INT            CONSTRAINT [DF_TimeOffData_MakeUpSecs] DEFAULT ((0)) NOT NULL,
    [AnchorPoint]        BIT            CONSTRAINT [DF_TimeOffData_AnchorPoint] DEFAULT ((0)) NOT NULL,
    [RolloverSecs]       INT            CONSTRAINT [DF_TimeOffData_RolloverSecs] DEFAULT ((0)) NOT NULL,
    [ForfeitedSecs]      INT            CONSTRAINT [DF_TimeOffData_ForfeitedSecs] DEFAULT ((0)) NOT NULL,
    [TransferInID]       INT            CONSTRAINT [DF_TimeOffData_TransferInID] DEFAULT ((0)) NOT NULL,
    [TransferInSecs]     INT            CONSTRAINT [DF_TimeOffData_TransferInSecs] DEFAULT ((0)) NOT NULL,
    [TransferOutID]      INT            CONSTRAINT [DF_TimeOffData_TransferOutID] DEFAULT ((0)) NOT NULL,
    [TransferOutSecs]    INT            CONSTRAINT [DF_TimeOffData_TransferOutSecs] DEFAULT ((0)) NOT NULL,
    [TotalAccruedSecs]   INT            CONSTRAINT [DF_TimeOffData_TotalAccruedSecs] DEFAULT ((0)) NOT NULL,
    [ManType]            INT            CONSTRAINT [DF_TimeOffData_ManType] DEFAULT ((0)) NOT NULL,
    [IsRollover]         BIT            CONSTRAINT [DF_TimeOffData_IsRollover] DEFAULT ((0)) NOT NULL,
    [ProcessIndex]       INT            CONSTRAINT [DF_TimeOffData_ProcessIndex] DEFAULT ((0)) NOT NULL,
    [DelayedGrantSecs]   INT            CONSTRAINT [DF_TimeOffData_DelayedGrantSecs] DEFAULT ((0)) NOT NULL,
    [SecondsWorkedStore] INT            CONSTRAINT [DF_TimeOffData_SecondsWorkedStore] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeOffAccrualPolicyData1]
    ON [dbo].[tmp_ms_xx_TimeOffData]([TimeOffDataID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffData])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffData] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffData] ([TimeOffDataID], [UserID], [PayTypeID], [AccruedSecs], [GrantedSecs], [ManSecs], [UsedSecs], [AvailableSecs], [ApplyToDateTime], [AdjustmentUserID], [IsSystemGenerated], [Notes], [TimeSlicePreID], [CreationDateTime], [ModifiedBy], [ModifiedOn], [MakeUpSecs], [AnchorPoint], [RolloverSecs], [ForfeitedSecs], [TransferInID], [TransferInSecs], [TransferOutID], [TransferOutSecs], [TotalAccruedSecs], [ManType], [IsRollover], [ProcessIndex], [DelayedGrantSecs], [SecondsWorkedStore])
        SELECT   [TimeOffDataID],
                 [UserID],
                 [PayTypeID],
                 [AccruedSecs],
                 [GrantedSecs],
                 [ManSecs],
                 [UsedSecs],
                 [AvailableSecs],
                 [ApplyToDateTime],
                 [AdjustmentUserID],
                 [IsSystemGenerated],
                 [Notes],
                 [TimeSlicePreID],
                 [CreationDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [MakeUpSecs],
                 [AnchorPoint],
                 [RolloverSecs],
                 [ForfeitedSecs],
                 [TransferInID],
                 [TransferInSecs],
                 [TransferOutID],
                 [TransferOutSecs],
                 [TotalAccruedSecs],
                 [ManType],
                 [IsRollover],
                 [ProcessIndex],
                 [DelayedGrantSecs],
                 [SecondsWorkedStore]
        FROM     [dbo].[TimeOffData]
        ORDER BY [TimeOffDataID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffData] OFF;
    END

DROP TABLE [dbo].[TimeOffData];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffData]', N'TimeOffData';

EXECUTE sp_rename N'[dbo].[TimeOffData].[tmp_ms_xx_index_PK_TimeOffAccrualPolicyData1]', N'PK_TimeOffAccrualPolicyData', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffData].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffData]([UserID] ASC, [PayTypeID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffPausedUser]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffPausedUser] (
    [TimeOffPausedUserID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_TimeOffPausedUser_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]           INT      CONSTRAINT [DF_TimeOffPausedUser_PayTypeID] DEFAULT ((0)) NOT NULL,
    [PausedUntil]         DATETIME CONSTRAINT [DF_TimeOffPausedUser_PausedUntil] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PausedFrom]          DATETIME CONSTRAINT [DF_TimeOffPausedUser_PausedFrom] DEFAULT ('1900-01-01') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeOffPausedUser1] PRIMARY KEY CLUSTERED ([TimeOffPausedUserID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffPausedUser])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPausedUser] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffPausedUser] ([TimeOffPausedUserID], [UserID], [PayTypeID], [PausedUntil], [PausedFrom])
        SELECT   [TimeOffPausedUserID],
                 [UserID],
                 [PayTypeID],
                 [PausedUntil],
                 [PausedFrom]
        FROM     [dbo].[TimeOffPausedUser]
        ORDER BY [TimeOffPausedUserID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPausedUser] OFF;
    END

DROP TABLE [dbo].[TimeOffPausedUser];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffPausedUser]', N'TimeOffPausedUser';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeOffPausedUser1]', N'PK_TimeOffPausedUser', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffPausedUser]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffPolicy]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffPolicy] (
    [TimeOffPolicyID]              INT           IDENTITY (1, 1) NOT NULL,
    [TimeOffPolicyName]            NVARCHAR (50) CONSTRAINT [DF_TimeOffPolicy_TimeOffPolicyName] DEFAULT ('') NOT NULL,
    [HideIncludeWeekendsOnEmpDash] BIT           CONSTRAINT [DF_TimeOffPolicy_HideIncludeWeekendsOnEmpDash] DEFAULT ((0)) NOT NULL,
    [HideAccruedOnEmpDash]         BIT           CONSTRAINT [DF_TimeOffPolicy_HideAccruedOnEmpDash] DEFAULT ((0)) NOT NULL,
    [HideGrantedOnEmpDash]         BIT           CONSTRAINT [DF_TimeOffPolicy_HideGrantedOnEmpDash] DEFAULT ((0)) NOT NULL,
    [StartDate]                    DATETIME      CONSTRAINT [DF_TimeOffPolicy_StartDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDate]                      DATETIME      CONSTRAINT [DF_TimeOffPolicy_EndDate] DEFAULT (((1) / (1)) / (2100)) NOT NULL,
    [IsDeleted]                    BIT           CONSTRAINT [DF_TimeOffPolicy_IsDeleted] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                   INT           CONSTRAINT [DF_TimeOffPolicy_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                   DATETIME      CONSTRAINT [DF_TimeOffPolicy_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DefaultTORToSecs]             INT           CONSTRAINT [DF_TimeOffPolicy_DefaultTORTo] DEFAULT ((0)) NOT NULL,
    [MinTORRestrictionEnabled]     BIT           CONSTRAINT [DF_TimeOffPolicy_MinTORRestrictionEnabled] DEFAULT ((0)) NOT NULL,
    [MinTORSecs]                   INT           CONSTRAINT [DF_TimeOffPolicy_MinTORSecs] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeOffAccrualPolicy1]
    ON [dbo].[tmp_ms_xx_TimeOffPolicy]([TimeOffPolicyID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffPolicy])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicy] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffPolicy] ([TimeOffPolicyID], [TimeOffPolicyName], [HideIncludeWeekendsOnEmpDash], [HideAccruedOnEmpDash], [HideGrantedOnEmpDash], [StartDate], [EndDate], [IsDeleted], [ModifiedBy], [ModifiedOn], [DefaultTORToSecs], [MinTORRestrictionEnabled], [MinTORSecs])
        SELECT   [TimeOffPolicyID],
                 [TimeOffPolicyName],
                 [HideIncludeWeekendsOnEmpDash],
                 [HideAccruedOnEmpDash],
                 [HideGrantedOnEmpDash],
                 [StartDate],
                 [EndDate],
                 [IsDeleted],
                 [ModifiedBy],
                 [ModifiedOn],
                 [DefaultTORToSecs],
                 [MinTORRestrictionEnabled],
                 [MinTORSecs]
        FROM     [dbo].[TimeOffPolicy]
        ORDER BY [TimeOffPolicyID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicy] OFF;
    END

DROP TABLE [dbo].[TimeOffPolicy];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffPolicy]', N'TimeOffPolicy';

EXECUTE sp_rename N'[dbo].[TimeOffPolicy].[tmp_ms_xx_index_PK_TimeOffAccrualPolicy1]', N'PK_TimeOffAccrualPolicy', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffPolicy]([TimeOffPolicyName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffPolicyAssign]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffPolicyAssign] (
    [TimeOffPolicyAssignID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                INT      CONSTRAINT [DF_TimeOffPolicyAssign_UserID] DEFAULT ((0)) NOT NULL,
    [TimeOffPolicyID]       INT      CONSTRAINT [DF_TimeOffPolicyAssign_TimeOffPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]         DATETIME CONSTRAINT [DF_TimeOffPolicyAssign_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]           DATETIME CONSTRAINT [DF_TimeOffPolicyAssign_EndDateTime] DEFAULT (((1) / (1)) / (2100)) NOT NULL,
    [ModifiedBy]            INT      CONSTRAINT [DF_TimeOffPolicyAssign_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]            DATETIME CONSTRAINT [DF_TimeOffPolicyAssign_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeOffAccrualPolicyUsrAssgn1]
    ON [dbo].[tmp_ms_xx_TimeOffPolicyAssign]([TimeOffPolicyAssignID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffPolicyAssign])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyAssign] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffPolicyAssign] ([TimeOffPolicyAssignID], [UserID], [TimeOffPolicyID], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [TimeOffPolicyAssignID],
                 [UserID],
                 [TimeOffPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeOffPolicyAssign]
        ORDER BY [TimeOffPolicyAssignID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyAssign] OFF;
    END

DROP TABLE [dbo].[TimeOffPolicyAssign];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffPolicyAssign]', N'TimeOffPolicyAssign';

EXECUTE sp_rename N'[dbo].[TimeOffPolicyAssign].[tmp_ms_xx_index_PK_TimeOffAccrualPolicyUsrAssgn1]', N'PK_TimeOffAccrualPolicyUsrAssgn', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffPolicyAssign]([UserID] ASC, [TimeOffPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffPolicyDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffPolicyDetail] (
    [ID]                             INT      IDENTITY (1, 1) NOT NULL,
    [TimeOffPolicyDetailID]          INT      CONSTRAINT [DF_TimeOffPolicyDetail_TimeOffPolicyDetailID] DEFAULT ((0)) NOT NULL,
    [TimeOffPolicyID]                INT      CONSTRAINT [DF_TimeOffPolicyDetail_TimeOffPolicyID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                  DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_EndDateTime] DEFAULT (((1) / (1)) / (2100)) NOT NULL,
    [IsDeleted]                      BIT      CONSTRAINT [DF_TimeOffPolicyDetail_IsDeleted] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                      INT      CONSTRAINT [DF_TimeOffPolicyDetail_PayTypeID] DEFAULT ((0)) NOT NULL,
    [CalculationType]                INT      CONSTRAINT [DF_TimeOffPolicyDetail_CalculationType] DEFAULT ((0)) NOT NULL,
    [AccrualFreqType]                INT      CONSTRAINT [DF_TimeOffPolicyDetail_AccrualFreqType] DEFAULT ((0)) NOT NULL,
    [AccrualCustomFreqType]          INT      CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreqType] DEFAULT ((0)) NOT NULL,
    [AccrualCustomFreq]              INT      CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreq] DEFAULT ((0)) NOT NULL,
    [AccrualCustomFreqRefDate]       DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_AccrualCustomFreqRefDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [AccrualTimeAtType]              INT      CONSTRAINT [DF_TimeOffPolicyDetail_AccrualTimeAtType] DEFAULT ((0)) NOT NULL,
    [GrantFreqType]                  INT      CONSTRAINT [DF_TimeOffPolicyDetail_GrantFreqType] DEFAULT ((0)) NOT NULL,
    [GrantCustomFreqType]            INT      CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreqType] DEFAULT ((0)) NOT NULL,
    [GrantCustomFreq]                INT      CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreq] DEFAULT ((0)) NOT NULL,
    [GrantCustomFreqRefDate]         DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_GrantCustomFreqRefDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [GrantTimeAtType]                INT      CONSTRAINT [DF_TimeOffPolicyDetail_GrantTimeAtType] DEFAULT ((0)) NOT NULL,
    [QualifyMinWorkRequired]         BIT      CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkRequired] DEFAULT ((0)) NOT NULL,
    [QualifyMinWorkSecs]             INT      CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkSecs] DEFAULT ((0)) NOT NULL,
    [QualifyMinWorkFreqType]         INT      CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkFreqType] DEFAULT ((0)) NOT NULL,
    [QualifyMinWorkFreq]             INT      CONSTRAINT [DF_TimeOffPolicyDetail_QualifyMinWorkFreq] DEFAULT ((0)) NOT NULL,
    [RestrictMinWorkRequired]        BIT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictMinWorkRequired] DEFAULT ((0)) NOT NULL,
    [RestrictMinWorkSecs]            INT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictMinWorkSecs] DEFAULT ((0)) NOT NULL,
    [RestrictAccrualPeriodType]      INT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictAccrualPeriodType] DEFAULT ((0)) NOT NULL,
    [RestrictAccrualPeriod]          INT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictAccrualPeriod] DEFAULT ((0)) NOT NULL,
    [RestrictProbationPeriodType]    INT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictProbationPeriodType] DEFAULT ((0)) NOT NULL,
    [RestrictProbationPeriod]        INT      CONSTRAINT [DF_TimeOffPolicyDetail_RestrictProbationPeriod] DEFAULT ((0)) NOT NULL,
    [ResetDateType]                  INT      CONSTRAINT [DF_TimeOffPolicyDetail_ResetDateType] DEFAULT ((0)) NOT NULL,
    [ResetDateOther]                 DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_ResetDateOther] DEFAULT ((0)) NOT NULL,
    [SeniorityDateType]              INT      CONSTRAINT [DF_TimeOffPolicyDetail_SeniorityDateType] DEFAULT ((0)) NOT NULL,
    [AdjustmentExceedCapAllowed]     BIT      CONSTRAINT [DF_TimeOffPolicyDetail_AdjustmentExceedCapAllowed] DEFAULT ((0)) NOT NULL,
    [UsedTotalIncludesFutureTime]    BIT      CONSTRAINT [DF_TimeOffPolicyDetail_UsedTotalIncludesFutureTime] DEFAULT ((0)) NOT NULL,
    [EmailAlertsEnabled]             BIT      CONSTRAINT [DF_TimeOffPolicyDetail_EmailAlertsEnabled] DEFAULT ((0)) NOT NULL,
    [EmpDashDisplayEnabled]          BIT      CONSTRAINT [DF_TimeOffPolicyDetail_EmpDashDisplayEnabled] DEFAULT ((0)) NOT NULL,
    [IsDefaultOnEmpDash]             BIT      CONSTRAINT [DF_TimeOffPolicyDetail_IsDefaultOnEmpDash] DEFAULT ((0)) NOT NULL,
    [TORAllowed]                     BIT      CONSTRAINT [DF_TimeOffPolicyDetail_TORAllowed] DEFAULT ((0)) NOT NULL,
    [MaxNegativeOnRemainingEnabled]  BIT      CONSTRAINT [DF_TimeOffPolicyDetail_MaxNegativeOnRemainingEnabled] DEFAULT ((0)) NOT NULL,
    [DoNotAllowTORBelowMaxNegative]  BIT      CONSTRAINT [DF_TimeOffPolicyDetail_DoNotAllowTORBelowMaxNegative] DEFAULT ((0)) NOT NULL,
    [UseProjectedAvailableBalance]   BIT      CONSTRAINT [DF_TimeOffPolicyDetail_UseProjectedAvailableBalance] DEFAULT ((0)) NOT NULL,
    [GrantFirstThenRolloverEnabled]  BIT      CONSTRAINT [DF_TimeOffPolicyDetail_GrantFirstThenRolloverEnabled] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT      CONSTRAINT [DF_TimeOffPolicyDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME CONSTRAINT [DF_TimeOffPolicyDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [AutoResetQualifyByHoursWorked]  BIT      CONSTRAINT [DF_TimeOffPolicyDetail_AutoResetQualifyByHoursWorked] DEFAULT ((0)) NOT NULL,
    [LimitAnnualAccrual]             BIT      CONSTRAINT [DF_TimeOffPolicyDetail_LimitAnnualAccrual] DEFAULT ((0)) NOT NULL,
    [WorkYearHours]                  INT      CONSTRAINT [DF_TimeOffPolicyDetail_WorkYearHours] DEFAULT ((0)) NOT NULL,
    [ExcludeOvertimeFromHoursWorked] BIT      CONSTRAINT [DF_TimeOffPolicyDetail_ExcludeOvertimeFromHoursWorked] DEFAULT ((0)) NOT NULL,
    [IncludeInExports]               BIT      CONSTRAINT [DF_TimeOffPolicyDetail_IncludeInExports] DEFAULT ((0)) NOT NULL,
    [DeductUnpaidTimeFromBalance]    BIT      CONSTRAINT [DF_TimeOffPolicyDetail_DeductUnpaidTimeFromBalance] DEFAULT ((0)) NOT NULL,
    [AccrueBeforeEmployeeStart]      BIT      CONSTRAINT [DF_TimeOffPolicyDetail_AccrueBeforeEmployeeStart] DEFAULT ((0)) NOT NULL,
    [WorkHoursRequiredForAccrual]    INT      CONSTRAINT [DF_TimeOffPolicyDetail_WorkHoursRequiredForAccrual] DEFAULT ((0)) NOT NULL,
    [HideBalanceOnEmpTOR]            BIT      CONSTRAINT [DF_TimeOffPolicyDetail_HideBalanceOnEmpTOR] DEFAULT ((0)) NOT NULL,
    [TORBalanceAdjustmentType]       INT      CONSTRAINT [DF_TimeOffPolicyDetail_TORBalanceAdjustmentType] DEFAULT ((0)) NOT NULL,
    [MaxNegativeIncludeFutureTOR]    BIT      CONSTRAINT [DF_TimeOffPolicyDetail_MaxNegativeIncludeFutureTOR] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeOffAccrualPolicyDetail1]
    ON [dbo].[tmp_ms_xx_TimeOffPolicyDetail]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffPolicyDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffPolicyDetail] ([ID], [TimeOffPolicyDetailID], [TimeOffPolicyID], [StartDateTime], [EndDateTime], [IsDeleted], [PayTypeID], [CalculationType], [AccrualFreqType], [AccrualCustomFreqType], [AccrualCustomFreq], [AccrualCustomFreqRefDate], [AccrualTimeAtType], [GrantFreqType], [GrantCustomFreqType], [GrantCustomFreq], [GrantCustomFreqRefDate], [GrantTimeAtType], [QualifyMinWorkRequired], [QualifyMinWorkSecs], [QualifyMinWorkFreqType], [QualifyMinWorkFreq], [RestrictMinWorkRequired], [RestrictMinWorkSecs], [RestrictAccrualPeriodType], [RestrictAccrualPeriod], [RestrictProbationPeriodType], [RestrictProbationPeriod], [ResetDateType], [ResetDateOther], [SeniorityDateType], [AdjustmentExceedCapAllowed], [UsedTotalIncludesFutureTime], [EmailAlertsEnabled], [EmpDashDisplayEnabled], [IsDefaultOnEmpDash], [TORAllowed], [MaxNegativeOnRemainingEnabled], [DoNotAllowTORBelowMaxNegative], [UseProjectedAvailableBalance], [GrantFirstThenRolloverEnabled], [ModifiedBy], [ModifiedOn], [AutoResetQualifyByHoursWorked], [LimitAnnualAccrual], [WorkYearHours], [ExcludeOvertimeFromHoursWorked], [IncludeInExports], [DeductUnpaidTimeFromBalance], [AccrueBeforeEmployeeStart], [WorkHoursRequiredForAccrual], [HideBalanceOnEmpTOR], [TORBalanceAdjustmentType], [MaxNegativeIncludeFutureTOR])
        SELECT   [ID],
                 [TimeOffPolicyDetailID],
                 [TimeOffPolicyID],
                 [StartDateTime],
                 [EndDateTime],
                 [IsDeleted],
                 [PayTypeID],
                 [CalculationType],
                 [AccrualFreqType],
                 [AccrualCustomFreqType],
                 [AccrualCustomFreq],
                 [AccrualCustomFreqRefDate],
                 [AccrualTimeAtType],
                 [GrantFreqType],
                 [GrantCustomFreqType],
                 [GrantCustomFreq],
                 [GrantCustomFreqRefDate],
                 [GrantTimeAtType],
                 [QualifyMinWorkRequired],
                 [QualifyMinWorkSecs],
                 [QualifyMinWorkFreqType],
                 [QualifyMinWorkFreq],
                 [RestrictMinWorkRequired],
                 [RestrictMinWorkSecs],
                 [RestrictAccrualPeriodType],
                 [RestrictAccrualPeriod],
                 [RestrictProbationPeriodType],
                 [RestrictProbationPeriod],
                 [ResetDateType],
                 [ResetDateOther],
                 [SeniorityDateType],
                 [AdjustmentExceedCapAllowed],
                 [UsedTotalIncludesFutureTime],
                 [EmailAlertsEnabled],
                 [EmpDashDisplayEnabled],
                 [IsDefaultOnEmpDash],
                 [TORAllowed],
                 [MaxNegativeOnRemainingEnabled],
                 [DoNotAllowTORBelowMaxNegative],
                 [UseProjectedAvailableBalance],
                 [GrantFirstThenRolloverEnabled],
                 [ModifiedBy],
                 [ModifiedOn],
                 [AutoResetQualifyByHoursWorked],
                 [LimitAnnualAccrual],
                 [WorkYearHours],
                 [ExcludeOvertimeFromHoursWorked],
                 [IncludeInExports],
                 [DeductUnpaidTimeFromBalance],
                 [AccrueBeforeEmployeeStart],
                 [WorkHoursRequiredForAccrual],
                 [HideBalanceOnEmpTOR],
                 [TORBalanceAdjustmentType],
                 [MaxNegativeIncludeFutureTOR]
        FROM     [dbo].[TimeOffPolicyDetail]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyDetail] OFF;
    END

DROP TABLE [dbo].[TimeOffPolicyDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffPolicyDetail]', N'TimeOffPolicyDetail';

EXECUTE sp_rename N'[dbo].[TimeOffPolicyDetail].[tmp_ms_xx_index_PK_TimeOffAccrualPolicyDetail1]', N'PK_TimeOffAccrualPolicyDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffPolicyDetail]([TimeOffPolicyDetailID] ASC, [TimeOffPolicyID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffPolicyDetailRule]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffPolicyDetailRule] (
    [ID]                         INT             IDENTITY (1, 1) NOT NULL,
    [TimeOffPolicyDetailRuleID]  INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailRuleID] DEFAULT ((0)) NOT NULL,
    [TimeOffPolicyDetailID]      INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_TimeOffPolicyDetailID] DEFAULT ((0)) NOT NULL,
    [FromMonth]                  INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_FromMonth] DEFAULT ((0)) NOT NULL,
    [ToMonth]                    INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_ToMonth] DEFAULT ((0)) NOT NULL,
    [HoursToAccrueType]          INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_HoursToAccrueType] DEFAULT ((0)) NOT NULL,
    [HoursToAccrue]              DECIMAL (18, 6) CONSTRAINT [DF_TimeOffPolicyDetailRule_HoursToAccrue] DEFAULT ((0)) NOT NULL,
    [AccrualCap]                 DECIMAL (18, 6) CONSTRAINT [DF_TimeOffPolicyDetailRule_AccrualCap] DEFAULT ((0)) NOT NULL,
    [TransferOverageAllowed]     BIT             CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageAllowed] DEFAULT ((0)) NOT NULL,
    [TransferOverageToPayTypeID] INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageToPayTypeID] DEFAULT ((0)) NOT NULL,
    [TransferOverageFactor]      DECIMAL (18, 4) CONSTRAINT [DF_TimeOffPolicyDetailRule_TransferOverageFactor] DEFAULT ((0)) NOT NULL,
    [NegativeMaxSecs]            INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_NegativeMax] DEFAULT ((0)) NOT NULL,
    [MaxCarryOverSecs]           INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_MaxCarryOver] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                  BIT             CONSTRAINT [DF_TimeOffPolicyDetailRule_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StartDateTime]              DATETIME        CONSTRAINT [DF_TimeOffPolicyDetailRule_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME        CONSTRAINT [DF_TimeOffPolicyDetailRule_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                 INT             CONSTRAINT [DF_TimeOffPolicyDetailRule_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME        CONSTRAINT [DF_TimeOffPolicyDetailRule_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeOffAccrualPolicyDetailRule1]
    ON [dbo].[tmp_ms_xx_TimeOffPolicyDetailRule]([ID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffPolicyDetailRule])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyDetailRule] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffPolicyDetailRule] ([ID], [TimeOffPolicyDetailRuleID], [TimeOffPolicyDetailID], [FromMonth], [ToMonth], [HoursToAccrueType], [HoursToAccrue], [AccrualCap], [TransferOverageAllowed], [TransferOverageToPayTypeID], [TransferOverageFactor], [NegativeMaxSecs], [MaxCarryOverSecs], [IsDeleted], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [ID],
                 [TimeOffPolicyDetailRuleID],
                 [TimeOffPolicyDetailID],
                 [FromMonth],
                 [ToMonth],
                 [HoursToAccrueType],
                 [HoursToAccrue],
                 [AccrualCap],
                 [TransferOverageAllowed],
                 [TransferOverageToPayTypeID],
                 [TransferOverageFactor],
                 [NegativeMaxSecs],
                 [MaxCarryOverSecs],
                 [IsDeleted],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeOffPolicyDetailRule]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffPolicyDetailRule] OFF;
    END

DROP TABLE [dbo].[TimeOffPolicyDetailRule];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffPolicyDetailRule]', N'TimeOffPolicyDetailRule';

EXECUTE sp_rename N'[dbo].[TimeOffPolicyDetailRule].[tmp_ms_xx_index_PK_TimeOffAccrualPolicyDetailRule1]', N'PK_TimeOffAccrualPolicyDetailRule', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffPolicyDetailRule]([TimeOffPolicyDetailRuleID] ASC, [TimeOffPolicyDetailID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffRequest]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffRequest] (
    [TimeOffRequestID]      INT            IDENTITY (1, 1) NOT NULL,
    [UserID]                INT            CONSTRAINT [DF_TimeOffRequest_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]             INT            CONSTRAINT [DF_TimeOffRequest_PayTypeID] DEFAULT ((0)) NOT NULL,
    [TimeOffPolicyDetailID] INT            CONSTRAINT [DF_TimeOffRequest_TimeOffPolicyDetailID] DEFAULT ((0)) NOT NULL,
    [DateTimeSubmitted]     DATETIME       CONSTRAINT [DF_TimeOffRequest_DateTimeSubmitted] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDateTime]         DATETIME       CONSTRAINT [DF_TimeOffRequest_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]           DATETIME       CONSTRAINT [DF_TimeOffRequest_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IncludeWeekends]       BIT            CONSTRAINT [DF_TimeOffRequest_IncludeWeekends] DEFAULT ((0)) NOT NULL,
    [DurationPerDaySecs]    INT            CONSTRAINT [DF_TimeOffRequest_DurationPerDaySecs] DEFAULT ((0)) NOT NULL,
    [StatusType]            INT            CONSTRAINT [DF_TimeOffRequest_StatusType] DEFAULT ((0)) NOT NULL,
    [StatusChangedOn]       DATETIME       CONSTRAINT [DF_TimeOffRequest_StatusChangedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EmpNotes]              NVARCHAR (500) CONSTRAINT [DF_TimeOffRequest_EmpNotes] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeOffRequest1] PRIMARY KEY CLUSTERED ([TimeOffRequestID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffRequest])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequest] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffRequest] ([TimeOffRequestID], [UserID], [PayTypeID], [TimeOffPolicyDetailID], [DateTimeSubmitted], [StartDateTime], [EndDateTime], [IncludeWeekends], [DurationPerDaySecs], [StatusType], [StatusChangedOn], [EmpNotes])
        SELECT   [TimeOffRequestID],
                 [UserID],
                 [PayTypeID],
                 [TimeOffPolicyDetailID],
                 [DateTimeSubmitted],
                 [StartDateTime],
                 [EndDateTime],
                 [IncludeWeekends],
                 [DurationPerDaySecs],
                 [StatusType],
                 [StatusChangedOn],
                 [EmpNotes]
        FROM     [dbo].[TimeOffRequest]
        ORDER BY [TimeOffRequestID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequest] OFF;
    END

DROP TABLE [dbo].[TimeOffRequest];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffRequest]', N'TimeOffRequest';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeOffRequest1]', N'PK_TimeOffRequest', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffRequest].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffRequest]([UserID] ASC, [PayTypeID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffRequestDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffRequestDetail] (
    [TimeOffRequestDetailID]        INT            IDENTITY (1, 1) NOT NULL,
    [TimeOffRequestID]              INT            CONSTRAINT [DF_TimeOffRequestDetail_TimeOffRequestID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME       CONSTRAINT [DF_TimeOffRequestDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME       CONSTRAINT [DF_TimeOffRequestDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StatusType]                    INT            CONSTRAINT [DF_TimeOffRequestDetail_StatusType] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                     BIT            CONSTRAINT [DF_TimeOffRequestDetail_IsDeleted] DEFAULT ((0)) NOT NULL,
    [StatusChangedBy]               INT            CONSTRAINT [DF_TimeOffRequestDetail_StatusChangedBy] DEFAULT ((0)) NOT NULL,
    [StatusChangedOn]               DATETIME       CONSTRAINT [DF_TimeOffRequestDetail_StatusChangedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [MgrNotes]                      NVARCHAR (500) CONSTRAINT [DF_TimeOffRequestDetail_MgrNotes] DEFAULT ('') NOT NULL,
    [TimeSlicePreID]                INT            CONSTRAINT [DF_TimeOffRequestDetail_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [AutoResetQualifyByHoursWorked] BIT            CONSTRAINT [DF_TimeOffRequestDetail_AutoResetQualifyByHoursWorked] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeOffRequestDetail1] PRIMARY KEY CLUSTERED ([TimeOffRequestDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffRequestDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequestDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffRequestDetail] ([TimeOffRequestDetailID], [TimeOffRequestID], [StartDateTime], [EndDateTime], [StatusType], [IsDeleted], [StatusChangedBy], [StatusChangedOn], [MgrNotes], [TimeSlicePreID], [AutoResetQualifyByHoursWorked])
        SELECT   [TimeOffRequestDetailID],
                 [TimeOffRequestID],
                 [StartDateTime],
                 [EndDateTime],
                 [StatusType],
                 [IsDeleted],
                 [StatusChangedBy],
                 [StatusChangedOn],
                 [MgrNotes],
                 [TimeSlicePreID],
                 [AutoResetQualifyByHoursWorked]
        FROM     [dbo].[TimeOffRequestDetail]
        ORDER BY [TimeOffRequestDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequestDetail] OFF;
    END

DROP TABLE [dbo].[TimeOffRequestDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffRequestDetail]', N'TimeOffRequestDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeOffRequestDetail1]', N'PK_TimeOffRequestDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffRequestDetail]([TimeOffRequestID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeOffRequestHistory]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeOffRequestHistory] (
    [TimeOffRequestHistoryID] INT            IDENTITY (1, 1) NOT NULL,
    [TimeOffRequestDetailID]  INT            CONSTRAINT [DF_TimeOffRequestHistory_TimeOffRequestDetailID] DEFAULT ((0)) NOT NULL,
    [StatusType]              INT            CONSTRAINT [DF_TimeOffRequestHistory_StatusType] DEFAULT ((0)) NOT NULL,
    [StatusChangedOn]         DATETIME       CONSTRAINT [DF_TimeOffRequestHistory_StatusChangedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StatusChangedBy]         INT            CONSTRAINT [DF_TimeOffRequestHistory_StatusChangedBy] DEFAULT ((0)) NOT NULL,
    [Notes]                   NVARCHAR (500) CONSTRAINT [DF_TimeOffRequestHistory_Notes] DEFAULT (' ') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeOffRequestHistory1] PRIMARY KEY CLUSTERED ([TimeOffRequestHistoryID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeOffRequestHistory])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequestHistory] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeOffRequestHistory] ([TimeOffRequestHistoryID], [TimeOffRequestDetailID], [StatusType], [StatusChangedOn], [StatusChangedBy], [Notes])
        SELECT   [TimeOffRequestHistoryID],
                 [TimeOffRequestDetailID],
                 [StatusType],
                 [StatusChangedOn],
                 [StatusChangedBy],
                 [Notes]
        FROM     [dbo].[TimeOffRequestHistory]
        ORDER BY [TimeOffRequestHistoryID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeOffRequestHistory] OFF;
    END

DROP TABLE [dbo].[TimeOffRequestHistory];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeOffRequestHistory]', N'TimeOffRequestHistory';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeOffRequestHistory1]', N'PK_TimeOffRequestHistory', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeOffRequestHistory]([TimeOffRequestDetailID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSheetEntrySetting]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSheetEntrySetting] (
    [TimeSheetEntrySettingID]  INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                   INT      CONSTRAINT [DF_TimeSheetEntrySetting_UserID] DEFAULT ((0)) NOT NULL,
    [Column1Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column1Type] DEFAULT ((0)) NOT NULL,
    [Column1Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column1Value] DEFAULT ((0)) NOT NULL,
    [Column2Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column2Type] DEFAULT ((0)) NOT NULL,
    [Column2Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column2Value] DEFAULT ((0)) NOT NULL,
    [Column3Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column3Type] DEFAULT ((0)) NOT NULL,
    [Column3Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column3Value] DEFAULT ((0)) NOT NULL,
    [Column4Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column4Type] DEFAULT ((0)) NOT NULL,
    [Column4Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column4Value] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_TimeSheetEntrySetting_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_TimeSheetEntrySetting_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [ExpressEntryShiftsPerDay] INT      CONSTRAINT [DF_TimeSheetEntrySetting_ExpressEntryShiftsPerDay] DEFAULT ((0)) NOT NULL,
    [ShowAllLLs]               BIT      CONSTRAINT [DF_TimeSheetEntrySetting_ShowAllLLs] DEFAULT ((0)) NOT NULL,
    [Column5Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column5Type] DEFAULT ((0)) NOT NULL,
    [Column5Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column5Value] DEFAULT ((0)) NOT NULL,
    [Column6Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column6Type] DEFAULT ((0)) NOT NULL,
    [Column6Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column6Value] DEFAULT ((0)) NOT NULL,
    [Column7Type]              INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column7Type] DEFAULT ((0)) NOT NULL,
    [Column7Value]             INT      CONSTRAINT [DF_TimeSheetEntrySetting_Column7Value] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSheetEntrySetting1]
    ON [dbo].[tmp_ms_xx_TimeSheetEntrySetting]([TimeSheetEntrySettingID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSheetEntrySetting])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSheetEntrySetting] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSheetEntrySetting] ([TimeSheetEntrySettingID], [UserID], [Column1Type], [Column1Value], [Column2Type], [Column2Value], [Column3Type], [Column3Value], [Column4Type], [Column4Value], [ModifiedBy], [ModifiedOn], [ExpressEntryShiftsPerDay], [ShowAllLLs], [Column5Type], [Column5Value], [Column6Type], [Column6Value], [Column7Type], [Column7Value])
        SELECT   [TimeSheetEntrySettingID],
                 [UserID],
                 [Column1Type],
                 [Column1Value],
                 [Column2Type],
                 [Column2Value],
                 [Column3Type],
                 [Column3Value],
                 [Column4Type],
                 [Column4Value],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ExpressEntryShiftsPerDay],
                 [ShowAllLLs],
                 [Column5Type],
                 [Column5Value],
                 [Column6Type],
                 [Column6Value],
                 [Column7Type],
                 [Column7Value]
        FROM     [dbo].[TimeSheetEntrySetting]
        ORDER BY [TimeSheetEntrySettingID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSheetEntrySetting] OFF;
    END

DROP TABLE [dbo].[TimeSheetEntrySetting];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSheetEntrySetting]', N'TimeSheetEntrySetting';

EXECUTE sp_rename N'[dbo].[TimeSheetEntrySetting].[tmp_ms_xx_index_PK_TimeSheetEntrySetting1]', N'PK_TimeSheetEntrySetting', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSheetEntrySetting]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSheetTemplate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSheetTemplate] (
    [TimeSheetTemplateID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]              INT      CONSTRAINT [DF_TimeSheetTemplate_UserID] DEFAULT ((0)) NOT NULL,
    [OrdinalPosition]     INT      CONSTRAINT [DF_TimeSheetTemplate_OrdinalPosition] DEFAULT ((0)) NOT NULL,
    [PayTypeID]           INT      CONSTRAINT [DF_TimeSheetTemplate_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartTime]           DATETIME CONSTRAINT [DF_TimeSheetTemplate_StartTime] DEFAULT ('1/1/1900') NOT NULL,
    [Duration]            INT      CONSTRAINT [DF_TimeSheetTemplate_Duration] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]         INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]        INT      CONSTRAINT [DF_TimeSheetTemplate_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]          INT      CONSTRAINT [DF_TimeSheetTemplate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME CONSTRAINT [DF_TimeSheetTemplate_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSheetTemplate1]
    ON [dbo].[tmp_ms_xx_TimeSheetTemplate]([TimeSheetTemplateID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSheetTemplate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSheetTemplate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSheetTemplate] ([TimeSheetTemplateID], [UserID], [OrdinalPosition], [PayTypeID], [StartTime], [Duration], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [ModifiedBy], [ModifiedOn])
        SELECT   [TimeSheetTemplateID],
                 [UserID],
                 [OrdinalPosition],
                 [PayTypeID],
                 [StartTime],
                 [Duration],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[TimeSheetTemplate]
        ORDER BY [TimeSheetTemplateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSheetTemplate] OFF;
    END

DROP TABLE [dbo].[TimeSheetTemplate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSheetTemplate]', N'TimeSheetTemplate';

EXECUTE sp_rename N'[dbo].[TimeSheetTemplate].[tmp_ms_xx_index_PK_TimeSheetTemplate1]', N'PK_TimeSheetTemplate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSheetTemplate]([UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePost]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePost] (
    [TimeSlicePostID]          INT             IDENTITY (1, 1) NOT NULL,
    [UserID]                   INT             CONSTRAINT [DF_TimeSlicePost_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                INT             CONSTRAINT [DF_TimeSlicePost_PayTypeID] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreIDIn]         INT             CONSTRAINT [DF_TimeSlicePost_TimeSlicePreIDIn] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreIDOut]        INT             CONSTRAINT [DF_TimeSlicePost_TimeSlicePreIDOut] DEFAULT ((0)) NOT NULL,
    [ActualDateTimeIn]         DATETIME        CONSTRAINT [DF_TimeSlicePost_ActualDateTimeIn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ActualDateTimeOut]        DATETIME        CONSTRAINT [DF_TimeSlicePost_ActualDateTimeOut] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [RoundedDateTimeIn]        DATETIME        CONSTRAINT [DF_TimeSlicePost_RoundedDateTimeIn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [RoundedDateTimeOut]       DATETIME        CONSTRAINT [DF_TimeSlicePost_RoundedDateTimeOut] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UTCDateTimeIn]            DATETIME        CONSTRAINT [DF_TimeSlicePost_UTCDateTimeIn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UTCDateTimeOut]           DATETIME        CONSTRAINT [DF_TimeSlicePost_UTCDateTimeOut] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [TotalPaidDurationSecs]    INT             CONSTRAINT [DF_TimeSlicePost_TotalPaidDurationSecs] DEFAULT ((0)) NOT NULL,
    [RegDurationSecs]          INT             CONSTRAINT [DF_TimeSlicePost_RegDurationSecs] DEFAULT ((0)) NOT NULL,
    [OTDurationSecs]           INT             CONSTRAINT [DF_TimeSlicePost_OTDurationSecs] DEFAULT ((0)) NOT NULL,
    [UnpaidDurationSecs]       INT             CONSTRAINT [DF_TimeSlicePost_UnpaidDurationSecs] DEFAULT ((0)) NOT NULL,
    [MgrApprovedIn]            BIT             CONSTRAINT [DF_TimeSlicePost_MgrApprovedIn] DEFAULT ((0)) NOT NULL,
    [MgrApprovedOut]           BIT             CONSTRAINT [DF_TimeSlicePost_MgrApprovedOut] DEFAULT ((0)) NOT NULL,
    [MgrNoteIn]                NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePost_MgrNoteIn] DEFAULT ('') NOT NULL,
    [MgrNoteOut]               NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePost_MgrNoteOut] DEFAULT ('') NOT NULL,
    [EmpApprovedIn]            BIT             CONSTRAINT [DF_TimeSlicePost_EmpApprovedIn] DEFAULT ((0)) NOT NULL,
    [EmpApprovedOut]           BIT             CONSTRAINT [DF_TimeSlicePost_EmpApprovedOut] DEFAULT ((0)) NOT NULL,
    [EmpNoteIn]                NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePost_EmpNoteIn] DEFAULT ('') NOT NULL,
    [EmpNoteOut]               NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePost_EmpNoteOut] DEFAULT ('') NOT NULL,
    [TimeSheetSubmissionIn]    BIT             CONSTRAINT [DF_TimeSlicePost_TimeSheetSubmissionIn] DEFAULT ((0)) NOT NULL,
    [TimeSheetSubmissionOut]   BIT             CONSTRAINT [DF_TimeSlicePost_TimeSheetSubmissionOut] DEFAULT ((0)) NOT NULL,
    [PayRate]                  MONEY           CONSTRAINT [DF_TimeSlicePost_PayRate] DEFAULT ((0)) NOT NULL,
    [ChargeRate]               MONEY           CONSTRAINT [DF_TimeSlicePost_ChargeRate] DEFAULT ((0)) NOT NULL,
    [TotalEarnings]            MONEY           CONSTRAINT [DF_TimeSlicePost_TotalEarnings] DEFAULT ((0)) NOT NULL,
    [MissingPunchTypeIn]       INT             CONSTRAINT [DF_TimeSlicePost_MissingPunchTypeIn] DEFAULT ((0)) NOT NULL,
    [MissingPunchTypeOut]      INT             CONSTRAINT [DF_TimeSlicePost_MissingPunchTypeOut] DEFAULT ((0)) NOT NULL,
    [IsModifiedIn]             BIT             CONSTRAINT [DF_TimeSlicePost_IsModifiedIn] DEFAULT ((0)) NOT NULL,
    [IsModifiedOut]            BIT             CONSTRAINT [DF_TimeSlicePost_IsModifiedOut] DEFAULT ((0)) NOT NULL,
    [ScheduleID]               INT             CONSTRAINT [DF_TimeSlicePost_ScheduleID] DEFAULT ((0)) NOT NULL,
    [ScheduleDetailID]         INT             CONSTRAINT [DF_TimeSlicePost_ScheduleDetailID] DEFAULT ((0)) NOT NULL,
    [ApplyToDate]              DATETIME        CONSTRAINT [DF_TimeSlicePost_ApplyToDate] DEFAULT ('1/1/1900') NOT NULL,
    [ClosedType]               INT             CONSTRAINT [DF_TimeSlicePost_IsClosed] DEFAULT ((0)) NOT NULL,
    [TimeSliceGroupID]         VARCHAR (50)    CONSTRAINT [DF_TimeSlicePost_TimeSliceGroupID] DEFAULT ('') NOT NULL,
    [LLDetailID1]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]              INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]             INT             CONSTRAINT [DF_TimeSlicePost_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [HashValue]                VARCHAR (MAX)   CONSTRAINT [DF_TimeSlicePost_HashValue] DEFAULT ('') NOT NULL,
    [TransactionTypeIn]        INT             CONSTRAINT [DF_TimeSlicePost_TransactionTypeIn] DEFAULT ((0)) NOT NULL,
    [TransactionTypeOut]       INT             CONSTRAINT [DF_TimeSlicePost_TransactionTypeOut] DEFAULT ((0)) NOT NULL,
    [TransactionSourceIn]      INT             CONSTRAINT [DF_TimeSlicePost_TransactionSourceIn] DEFAULT ((0)) NOT NULL,
    [TransactionSourceOut]     INT             CONSTRAINT [DF_TimeSlicePost_TransactionSourceOut] DEFAULT ((0)) NOT NULL,
    [ApplyToOvertime]          BIT             CONSTRAINT [DF_TimeSlicePost_ApplyToOvertime] DEFAULT ((0)) NOT NULL,
    [PayLevelRateType]         INT             CONSTRAINT [DF_TimeSlicePost_PayLevelRateType] DEFAULT ((0)) NOT NULL,
    [HasModifier]              BIT             CONSTRAINT [DF_TimeSlicePost_HasModifier] DEFAULT ((0)) NOT NULL,
    [IsCanceled]               BIT             CONSTRAINT [DF_TimeSlicePost_IsCanceled] DEFAULT ((0)) NOT NULL,
    [CountTowardsHolidayMin]   BIT             CONSTRAINT [DF_TimeSlicePost_CountTowardsHolidayMin] DEFAULT ((0)) NOT NULL,
    [HasShiftDiff]             BIT             CONSTRAINT [DF_TimeSlicePost_HasShiftDiff] DEFAULT ((0)) NOT NULL,
    [IsMealPremium]            BIT             CONSTRAINT [DF_TimeSlicePost_IsMealPremium] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]               INT             CONSTRAINT [DF_TimeSlicePost_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME        CONSTRAINT [DF_TimeSlicePost_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [AdminApprovedIn]          BIT             CONSTRAINT [DF_TimeSlicePost_AdminApprovedIn] DEFAULT ((0)) NOT NULL,
    [AdminApprovedOut]         BIT             CONSTRAINT [DF_TimeSlicePost_AdminApprovedOut] DEFAULT ((0)) NOT NULL,
    [Mgr2ApprovedIn]           BIT             CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedIn] DEFAULT ((0)) NOT NULL,
    [Mgr2ApprovedOut]          BIT             CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedOut] DEFAULT ((0)) NOT NULL,
    [LongitudeIn]              DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePost_LongitudeIn] DEFAULT ((0)) NOT NULL,
    [LongitudeOut]             DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePost_LongitudeOut] DEFAULT ((0)) NOT NULL,
    [LatitudeIn]               DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePost_LatitudeIn] DEFAULT ((0)) NOT NULL,
    [LatitudeOut]              DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePost_LatitudeOut] DEFAULT ((0)) NOT NULL,
    [IsCompTime]               BIT             CONSTRAINT [DF_TimeSlicePost_IsCompTime] DEFAULT ((0)) NOT NULL,
    [CompTimeRequestID]        INT             CONSTRAINT [DF_TimeSlicePost_CompTimeRequestID] DEFAULT ((0)) NOT NULL,
    [CompTimeOTConvertedSecs]  INT             CONSTRAINT [DF_TimeSlicePost_CompTimeOTConvertedSecs] DEFAULT ((0)) NOT NULL,
    [MgrApprovedByIn]          INT             CONSTRAINT [DF_TimeSlicePost_MgrApprovedByIn] DEFAULT ((0)) NOT NULL,
    [MgrApprovedByOut]         INT             CONSTRAINT [DF_TimeSlicePost_MgrApprovedByOut] DEFAULT ((0)) NOT NULL,
    [Mgr2ApprovedByIn]         INT             CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedByIn] DEFAULT ((0)) NOT NULL,
    [Mgr2ApprovedByOut]        INT             CONSTRAINT [DF_TimeSlicePost_Mgr2ApprovedByOut] DEFAULT ((0)) NOT NULL,
    [AdminApprovedByIn]        INT             CONSTRAINT [DF_TimeSlicePost_AdminApprovedByIn] DEFAULT ((0)) NOT NULL,
    [AdminApprovedByOut]       INT             CONSTRAINT [DF_TimeSlicePost_AdminApprovedByOut] DEFAULT ((0)) NOT NULL,
    [IsForecast]               BIT             CONSTRAINT [DF_TimeSlicePost_IsForecast] DEFAULT ((0)) NOT NULL,
    [IsReconcile]              BIT             CONSTRAINT [DF_TimeSlicePost_IsReconcile] DEFAULT ((0)) NOT NULL,
    [IsSwipeAndGoIn]           BIT             CONSTRAINT [DF_TimeSlicePost_IsSwipAndGoIn] DEFAULT ((0)) NOT NULL,
    [IsSwipeAndGoOut]          BIT             CONSTRAINT [DF_TimeSlicePost_IsSwipeAndGoOut] DEFAULT ((0)) NOT NULL,
    [PopulatedFromScheduleIn]  BIT             CONSTRAINT [DF_TimeSlicePost_PopulatedFromScheduleIn] DEFAULT ((0)) NOT NULL,
    [PopulatedFromScheduleOut] BIT             CONSTRAINT [DF_TimeSlicePost_PopulatedFromScheduleOut] DEFAULT ((0)) NOT NULL,
    [IsCallBack]               BIT             CONSTRAINT [DF_TimeSlicePost_IsCallBack] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSlicePost1]
    ON [dbo].[tmp_ms_xx_TimeSlicePost]([TimeSlicePostID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePost])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePost] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePost] ([TimeSlicePostID], [UserID], [PayTypeID], [TimeSlicePreIDIn], [TimeSlicePreIDOut], [ActualDateTimeIn], [ActualDateTimeOut], [RoundedDateTimeIn], [RoundedDateTimeOut], [UTCDateTimeIn], [UTCDateTimeOut], [TotalPaidDurationSecs], [RegDurationSecs], [OTDurationSecs], [UnpaidDurationSecs], [MgrApprovedIn], [MgrApprovedOut], [MgrNoteIn], [MgrNoteOut], [EmpApprovedIn], [EmpApprovedOut], [EmpNoteIn], [EmpNoteOut], [TimeSheetSubmissionIn], [TimeSheetSubmissionOut], [PayRate], [ChargeRate], [TotalEarnings], [MissingPunchTypeIn], [MissingPunchTypeOut], [IsModifiedIn], [IsModifiedOut], [ScheduleID], [ScheduleDetailID], [ApplyToDate], [ClosedType], [TimeSliceGroupID], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [HashValue], [TransactionTypeIn], [TransactionTypeOut], [TransactionSourceIn], [TransactionSourceOut], [ApplyToOvertime], [PayLevelRateType], [HasModifier], [IsCanceled], [CountTowardsHolidayMin], [HasShiftDiff], [IsMealPremium], [ModifiedBy], [ModifiedOn], [AdminApprovedIn], [AdminApprovedOut], [Mgr2ApprovedIn], [Mgr2ApprovedOut], [LongitudeIn], [LongitudeOut], [LatitudeIn], [LatitudeOut], [IsCompTime], [CompTimeRequestID], [CompTimeOTConvertedSecs], [MgrApprovedByIn], [MgrApprovedByOut], [Mgr2ApprovedByIn], [Mgr2ApprovedByOut], [AdminApprovedByIn], [AdminApprovedByOut], [IsForecast], [IsReconcile], [IsSwipeAndGoIn], [IsSwipeAndGoOut], [PopulatedFromScheduleIn], [PopulatedFromScheduleOut], [IsCallBack])
        SELECT   [TimeSlicePostID],
                 [UserID],
                 [PayTypeID],
                 [TimeSlicePreIDIn],
                 [TimeSlicePreIDOut],
                 [ActualDateTimeIn],
                 [ActualDateTimeOut],
                 [RoundedDateTimeIn],
                 [RoundedDateTimeOut],
                 [UTCDateTimeIn],
                 [UTCDateTimeOut],
                 [TotalPaidDurationSecs],
                 [RegDurationSecs],
                 [OTDurationSecs],
                 [UnpaidDurationSecs],
                 [MgrApprovedIn],
                 [MgrApprovedOut],
                 [MgrNoteIn],
                 [MgrNoteOut],
                 [EmpApprovedIn],
                 [EmpApprovedOut],
                 [EmpNoteIn],
                 [EmpNoteOut],
                 [TimeSheetSubmissionIn],
                 [TimeSheetSubmissionOut],
                 [PayRate],
                 [ChargeRate],
                 [TotalEarnings],
                 [MissingPunchTypeIn],
                 [MissingPunchTypeOut],
                 [IsModifiedIn],
                 [IsModifiedOut],
                 [ScheduleID],
                 [ScheduleDetailID],
                 [ApplyToDate],
                 [ClosedType],
                 [TimeSliceGroupID],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [HashValue],
                 [TransactionTypeIn],
                 [TransactionTypeOut],
                 [TransactionSourceIn],
                 [TransactionSourceOut],
                 [ApplyToOvertime],
                 [PayLevelRateType],
                 [HasModifier],
                 [IsCanceled],
                 [CountTowardsHolidayMin],
                 [HasShiftDiff],
                 [IsMealPremium],
                 [ModifiedBy],
                 [ModifiedOn],
                 [AdminApprovedIn],
                 [AdminApprovedOut],
                 [Mgr2ApprovedIn],
                 [Mgr2ApprovedOut],
                 [LongitudeIn],
                 [LongitudeOut],
                 [LatitudeIn],
                 [LatitudeOut],
                 [IsCompTime],
                 [CompTimeRequestID],
                 [CompTimeOTConvertedSecs],
                 [MgrApprovedByIn],
                 [MgrApprovedByOut],
                 [Mgr2ApprovedByIn],
                 [Mgr2ApprovedByOut],
                 [AdminApprovedByIn],
                 [AdminApprovedByOut],
                 [IsForecast],
                 [IsReconcile],
                 [IsSwipeAndGoIn],
                 [IsSwipeAndGoOut],
                 [PopulatedFromScheduleIn],
                 [PopulatedFromScheduleOut],
                 [IsCallBack]
        FROM     [dbo].[TimeSlicePost]
        ORDER BY [TimeSlicePostID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePost] OFF;
    END

DROP TABLE [dbo].[TimeSlicePost];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePost]', N'TimeSlicePost';

EXECUTE sp_rename N'[dbo].[TimeSlicePost].[tmp_ms_xx_index_PK_TimeSlicePost1]', N'PK_TimeSlicePost', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePost].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePost]([UserID] ASC, [ActualDateTimeIn] ASC, [ActualDateTimeOut] ASC, [ApplyToDate] ASC, [TimeSliceGroupID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePostExceptionDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail] (
    [TimeSlicePostExceptionDetailID] INT            IDENTITY (1, 1) NOT NULL,
    [UserID]                         INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_UserID] DEFAULT ((0)) NOT NULL,
    [TimeSlicePostID]                INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_TimeSlicePostID] DEFAULT ((0)) NOT NULL,
    [TimeSlicePreID]                 INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [ScheduleID]                     INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_ScheduleID] DEFAULT ((0)) NOT NULL,
    [DateTime]                       DATETIME       CONSTRAINT [DF_TimeSlicePostExceptionDetail_DateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ExceptionPolicyRuleID]          INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionPolicyRuleID] DEFAULT ((0)) NOT NULL,
    [ExceptionType]                  INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionType] DEFAULT ((0)) NOT NULL,
    [TransactionType]                INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_TransactionType] DEFAULT ((0)) NOT NULL,
    [ExceptionParameterSecs]         INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_ExceptionParameterSecs] DEFAULT ((-1)) NOT NULL,
    [HashValue]                      VARCHAR (1000) CONSTRAINT [DF_TimeSlicePostExceptionDetail_HashValue] DEFAULT ('') NOT NULL,
    [IsAcknowledged]                 BIT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_IsAcknowledged] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME       CONSTRAINT [DF_TimeSlicePostExceptionDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [MgrNote]                        VARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePostExceptionDetail_MgrNotes] DEFAULT ('') NOT NULL,
    [AcknowledgedBy]                 INT            CONSTRAINT [DF_TimeSlicePostExceptionDetail_AcknowledgedBy] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSlicePostExceptionDetail1]
    ON [dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail]([TimeSlicePostExceptionDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePostExceptionDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail] ([TimeSlicePostExceptionDetailID], [UserID], [TimeSlicePostID], [TimeSlicePreID], [ScheduleID], [DateTime], [ExceptionPolicyRuleID], [ExceptionType], [TransactionType], [ExceptionParameterSecs], [HashValue], [IsAcknowledged], [ModifiedBy], [ModifiedOn], [MgrNote], [AcknowledgedBy])
        SELECT   [TimeSlicePostExceptionDetailID],
                 [UserID],
                 [TimeSlicePostID],
                 [TimeSlicePreID],
                 [ScheduleID],
                 [DateTime],
                 [ExceptionPolicyRuleID],
                 [ExceptionType],
                 [TransactionType],
                 [ExceptionParameterSecs],
                 [HashValue],
                 [IsAcknowledged],
                 [ModifiedBy],
                 [ModifiedOn],
                 [MgrNote],
                 [AcknowledgedBy]
        FROM     [dbo].[TimeSlicePostExceptionDetail]
        ORDER BY [TimeSlicePostExceptionDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail] OFF;
    END

DROP TABLE [dbo].[TimeSlicePostExceptionDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePostExceptionDetail]', N'TimeSlicePostExceptionDetail';

EXECUTE sp_rename N'[dbo].[TimeSlicePostExceptionDetail].[tmp_ms_xx_index_PK_TimeSlicePostExceptionDetail1]', N'PK_TimeSlicePostExceptionDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePostExceptionDetail]([UserID] ASC, [TimeSlicePostID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePostOvertimeDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail] (
    [TimeSlicePostOvertimeDetailID] INT             IDENTITY (1, 1) NOT NULL,
    [TimeSlicePostID]               INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_TimeSlicePostID] DEFAULT ((0)) NOT NULL,
    [OvertimeRuleID]                INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimeRuleID] DEFAULT ((0)) NOT NULL,
    [RulePriority]                  INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_RulePriority] DEFAULT ((0)) NOT NULL,
    [RuleDurationDays]              INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_RuleDurationDays] DEFAULT ((0)) NOT NULL,
    [OvertimePayTypeID]             INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimePayTypeID] DEFAULT ((0)) NOT NULL,
    [OvertimePayTypeFactor]         NUMERIC (18, 4) CONSTRAINT [DF_TimeSlicePostOvertimeDetail_OvertimePayTypeFactor] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME        CONSTRAINT [DF_TimeSlicePostOvertimeDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Duration]                      INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_Duration] DEFAULT ((0)) NOT NULL,
    [PayRate]                       NUMERIC (18, 4) CONSTRAINT [DF_TimeSlicePostOvertimeDetail_PayRate] DEFAULT ((0)) NOT NULL,
    [HashValue]                     VARCHAR (1000)  CONSTRAINT [DF_TimeSlicePostOvertimeDetail_HashValue] DEFAULT ('') NOT NULL,
    [ModifiedBy]                    INT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME        CONSTRAINT [DF_TimeSlicePostOvertimeDetail_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [BlendedRate]                   BIT             CONSTRAINT [DF_TimeSlicePostOvertimeDetail_BlendedRate] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSlicePostOvertimeDetail1]
    ON [dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail]([TimeSlicePostOvertimeDetailID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePostOvertimeDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail] ([TimeSlicePostOvertimeDetailID], [TimeSlicePostID], [OvertimeRuleID], [RulePriority], [RuleDurationDays], [OvertimePayTypeID], [OvertimePayTypeFactor], [StartDateTime], [Duration], [PayRate], [HashValue], [ModifiedBy], [ModifiedOn], [BlendedRate])
        SELECT   [TimeSlicePostOvertimeDetailID],
                 [TimeSlicePostID],
                 [OvertimeRuleID],
                 [RulePriority],
                 [RuleDurationDays],
                 [OvertimePayTypeID],
                 [OvertimePayTypeFactor],
                 [StartDateTime],
                 [Duration],
                 [PayRate],
                 [HashValue],
                 [ModifiedBy],
                 [ModifiedOn],
                 [BlendedRate]
        FROM     [dbo].[TimeSlicePostOvertimeDetail]
        ORDER BY [TimeSlicePostOvertimeDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail] OFF;
    END

DROP TABLE [dbo].[TimeSlicePostOvertimeDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePostOvertimeDetail]', N'TimeSlicePostOvertimeDetail';

EXECUTE sp_rename N'[dbo].[TimeSlicePostOvertimeDetail].[tmp_ms_xx_index_PK_TimeSlicePostOvertimeDetail1]', N'PK_TimeSlicePostOvertimeDetail', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePostOvertimeDetail]([TimeSlicePostID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePostShiftDiffDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePostShiftDiffDetail] (
    [TimeSlicePostShiftDiffDetailID] INT             IDENTITY (1, 1) NOT NULL,
    [TimeSlicePostID]                INT             CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_TimeSlicePostID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                  DATETIME        CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                    DATETIME        CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDateTimeUTC]               DATETIME        CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_StartDateTimeUTC] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTimeUTC]                 DATETIME        CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_EndDateTimeUTC] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [Duration]                       INT             NOT NULL,
    [ShiftDiffDetailID]              INT             CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffDetailID] DEFAULT ((0)) NOT NULL,
    [ShiftDiffCode]                  NVARCHAR (200)  CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffCode] DEFAULT ('') NOT NULL,
    [ShiftDiffFactor]                DECIMAL (18, 2) CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffFactor] DEFAULT ((0)) NOT NULL,
    [ShiftDiffAdditional]            MONEY           CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffAdditional] DEFAULT ((0)) NOT NULL,
    [FinalPayRate]                   MONEY           CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_FinalPayRate] DEFAULT ((0)) NOT NULL,
    [HashValue]                      VARCHAR (MAX)   CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_HashValue] DEFAULT ('') NOT NULL,
    [ModifiedBy]                     INT             CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME        CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ShiftDiffAfterOvertime]         BIT             CONSTRAINT [DF_TimeSlicePostShiftDiffDetail_ShiftDiffAfterOvertime] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeSlicePostShiftDiffDetail1] PRIMARY KEY CLUSTERED ([TimeSlicePostShiftDiffDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePostShiftDiffDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostShiftDiffDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePostShiftDiffDetail] ([TimeSlicePostShiftDiffDetailID], [TimeSlicePostID], [StartDateTime], [EndDateTime], [StartDateTimeUTC], [EndDateTimeUTC], [Duration], [ShiftDiffDetailID], [ShiftDiffCode], [ShiftDiffFactor], [ShiftDiffAdditional], [FinalPayRate], [HashValue], [ModifiedBy], [ModifiedOn], [ShiftDiffAfterOvertime])
        SELECT   [TimeSlicePostShiftDiffDetailID],
                 [TimeSlicePostID],
                 [StartDateTime],
                 [EndDateTime],
                 [StartDateTimeUTC],
                 [EndDateTimeUTC],
                 [Duration],
                 [ShiftDiffDetailID],
                 [ShiftDiffCode],
                 [ShiftDiffFactor],
                 [ShiftDiffAdditional],
                 [FinalPayRate],
                 [HashValue],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ShiftDiffAfterOvertime]
        FROM     [dbo].[TimeSlicePostShiftDiffDetail]
        ORDER BY [TimeSlicePostShiftDiffDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePostShiftDiffDetail] OFF;
    END

DROP TABLE [dbo].[TimeSlicePostShiftDiffDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePostShiftDiffDetail]', N'TimeSlicePostShiftDiffDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeSlicePostShiftDiffDetail1]', N'PK_TimeSlicePostShiftDiffDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePostShiftDiffDetail]([TimeSlicePostID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePre]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePre] (
    [TimeSlicePreID]         INT             IDENTITY (1, 1) NOT NULL,
    [UserID]                 INT             CONSTRAINT [DF_TimeSlicePre_UserID] DEFAULT ((0)) NOT NULL,
    [PayTypeID]              INT             CONSTRAINT [DF_TimeSlicePre_PayTypeID] DEFAULT ((0)) NOT NULL,
    [TransactionDateTime]    DATETIME        CONSTRAINT [DF_TimeSlicePre_TransactionDateTime] DEFAULT ('1/1/1900') NOT NULL,
    [TransactionUTCDateTime] DATETIME        CONSTRAINT [DF_TimeSlicePre_TransactionUTCDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IsModified]             BIT             CONSTRAINT [DF_TimeSlicePre_IsModified] DEFAULT ((0)) NOT NULL,
    [ClosedType]             INT             CONSTRAINT [DF_TimeSlicePre_IsClosed] DEFAULT ((0)) NOT NULL,
    [TransactionType]        INT             CONSTRAINT [DF_TimeSlicePre_TransactionType] DEFAULT ((0)) NOT NULL,
    [TransactionSource]      INT             CONSTRAINT [DF_TimeSlicePre_TransactionSource] DEFAULT ((0)) NOT NULL,
    [HardwareTerminalID]     INT             CONSTRAINT [DF_TimeSlicePre_HardwareTerminalID] DEFAULT ((0)) NOT NULL,
    [IsTimeSheetSubmission]  BIT             CONSTRAINT [DF_TimeSlicePre_IsTimeSheetSubmission] DEFAULT ((0)) NOT NULL,
    [MgrApproved]            BIT             CONSTRAINT [DF_TimeSlicePre_MgrApproved] DEFAULT ((0)) NOT NULL,
    [MgrNote]                NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePre_MgrNote] DEFAULT ('') NOT NULL,
    [EmpApproved]            BIT             CONSTRAINT [DF_TimeSlicePre_EmpApproved] DEFAULT ((0)) NOT NULL,
    [EmpNote]                NVARCHAR (MAX)  CONSTRAINT [DF_TimeSlicePre_EmpNote] DEFAULT ('') NOT NULL,
    [ApplyToOvertimeType]    INT             CONSTRAINT [DF_TimeSlicePre_ApplyToOvertime] DEFAULT ((0)) NOT NULL,
    [TimeSliceGroupID]       VARCHAR (50)    CONSTRAINT [DF_TimeSlicePre_TimeSliceGroupID] DEFAULT ('') NOT NULL,
    [LLDetailID1]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]            INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]           INT             CONSTRAINT [DF_TimeSlicePre_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [HashValue]              VARCHAR (MAX)   CONSTRAINT [DF_TimeSlicePre_HashValue] DEFAULT ('') NOT NULL,
    [ApplyToDate]            DATETIME        CONSTRAINT [DF_TimeSlicePre_ApplyToDate] DEFAULT ('1/1/1900') NOT NULL,
    [PayLevelRateType]       INT             CONSTRAINT [DF_TimeSlicePre_PayLevelRateType] DEFAULT ((0)) NOT NULL,
    [IsMealPremium]          BIT             CONSTRAINT [DF_TimeSlicePre_IsMealPremium] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]             INT             CONSTRAINT [DF_TimeSlicePre_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME        CONSTRAINT [DF_TimeSlicePre_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [Mgr2Approved]           BIT             CONSTRAINT [DF_TimeSlicePre_Mgr2Approved] DEFAULT ((0)) NOT NULL,
    [AdminApproved]          BIT             CONSTRAINT [DF_TimeSlicePre_AdminApproved] DEFAULT ((0)) NOT NULL,
    [Latitude]               DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePre_Latitude] DEFAULT ((0)) NOT NULL,
    [Longitude]              DECIMAL (18, 4) CONSTRAINT [DF_TimeSlicePre_Longitude] DEFAULT ((0)) NOT NULL,
    [MgrApprovedBy]          INT             CONSTRAINT [DF_TimeSlicePre_MgrApprovedBy] DEFAULT ((0)) NOT NULL,
    [Mgr2ApprovedBy]         INT             CONSTRAINT [DF_TimeSlicePre_Mgr2ApprovedBy] DEFAULT ((0)) NOT NULL,
    [AdminApprovedBy]        INT             CONSTRAINT [DF_TimeSlicePre_AdminApprovedBy] DEFAULT ((0)) NOT NULL,
    [IsSwipeAndGo]           BIT             CONSTRAINT [DF_TimeSlicePre_SwipeGoInEnabled] DEFAULT ((0)) NOT NULL,
    [IsCallBack]             BIT             CONSTRAINT [DF_TimeSlicePre_IsCallBack] DEFAULT ((0)) NOT NULL,
    [CreatedBy]              INT             CONSTRAINT [DF_TimeSlicePre_CreatedBy] DEFAULT ((0)) NOT NULL,
    [CreatedOn]              DATETIME        CONSTRAINT [DF_TimeSlicePre_CreatedOn] DEFAULT ('1/1/1900') NOT NULL,
    [CreatedGUID]            NVARCHAR (50)   CONSTRAINT [DF_TimeSlicePre_CreatedGUID] DEFAULT ('') NOT NULL,
    [ModifiedGUID]           NVARCHAR (50)   CONSTRAINT [DF_TimeSlicePre_ModifiedGUID] DEFAULT ('') NOT NULL,
    [WebKioskTerminalID]     INT             CONSTRAINT [DF_TimeSlicePre_WebKioskTerminalID] DEFAULT ((0)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_TimeSlicePre1]
    ON [dbo].[tmp_ms_xx_TimeSlicePre]([TimeSlicePreID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePre])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePre] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePre] ([TimeSlicePreID], [UserID], [PayTypeID], [TransactionDateTime], [TransactionUTCDateTime], [IsModified], [ClosedType], [TransactionType], [TransactionSource], [HardwareTerminalID], [IsTimeSheetSubmission], [MgrApproved], [MgrNote], [EmpApproved], [EmpNote], [ApplyToOvertimeType], [TimeSliceGroupID], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [HashValue], [ApplyToDate], [PayLevelRateType], [IsMealPremium], [ModifiedBy], [ModifiedOn], [Mgr2Approved], [AdminApproved], [Latitude], [Longitude], [MgrApprovedBy], [Mgr2ApprovedBy], [AdminApprovedBy], [IsSwipeAndGo], [IsCallBack], [CreatedBy], [CreatedOn], [CreatedGUID], [ModifiedGUID], [WebKioskTerminalID])
        SELECT   [TimeSlicePreID],
                 [UserID],
                 [PayTypeID],
                 [TransactionDateTime],
                 [TransactionUTCDateTime],
                 [IsModified],
                 [ClosedType],
                 [TransactionType],
                 [TransactionSource],
                 [HardwareTerminalID],
                 [IsTimeSheetSubmission],
                 [MgrApproved],
                 [MgrNote],
                 [EmpApproved],
                 [EmpNote],
                 [ApplyToOvertimeType],
                 [TimeSliceGroupID],
                 [LLDetailID1],
                 [LLDetailID2],
                 [LLDetailID3],
                 [LLDetailID4],
                 [LLDetailID5],
                 [LLDetailID6],
                 [LLDetailID7],
                 [LLDetailID8],
                 [LLDetailID9],
                 [LLDetailID10],
                 [LLDetailID11],
                 [LLDetailID12],
                 [LLDetailID13],
                 [LLDetailID14],
                 [LLDetailID15],
                 [HashValue],
                 [ApplyToDate],
                 [PayLevelRateType],
                 [IsMealPremium],
                 [ModifiedBy],
                 [ModifiedOn],
                 [Mgr2Approved],
                 [AdminApproved],
                 [Latitude],
                 [Longitude],
                 [MgrApprovedBy],
                 [Mgr2ApprovedBy],
                 [AdminApprovedBy],
                 [IsSwipeAndGo],
                 [IsCallBack],
                 [CreatedBy],
                 [CreatedOn],
                 [CreatedGUID],
                 [ModifiedGUID],
                 [WebKioskTerminalID]
        FROM     [dbo].[TimeSlicePre]
        ORDER BY [TimeSlicePreID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePre] OFF;
    END

DROP TABLE [dbo].[TimeSlicePre];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePre]', N'TimeSlicePre';

EXECUTE sp_rename N'[dbo].[TimeSlicePre].[tmp_ms_xx_index_PK_TimeSlicePre1]', N'PK_TimeSlicePre', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePre].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePre]([UserID] ASC, [TransactionDateTime] ASC, [TimeSliceGroupID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[TimeSlicePreModifier]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_TimeSlicePreModifier] (
    [TimeSlicePreModifierID] INT             IDENTITY (1, 1) NOT NULL,
    [TimeSlicePreID]         INT             CONSTRAINT [DF_TimeSlicePreModifier_TimeSlicePreID] DEFAULT ((0)) NOT NULL,
    [ModifierID]             INT             CONSTRAINT [DF_TimeSlicePreModifier_ModifierType] DEFAULT ((0)) NOT NULL,
    [UserID]                 INT             CONSTRAINT [DF_TimeSlicePreModifier_UserID] DEFAULT ((0)) NOT NULL,
    [ApplyToDate]            DATETIME        CONSTRAINT [DF_TimeSlicePreModifier_ApplyToDate] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT             CONSTRAINT [DF_TimeSlicePreModifier_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME        CONSTRAINT [DF_TimeSlicePreModifier_ModifierOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [TimeSlicePostID]        INT             CONSTRAINT [DF_TimeSlicePreModifier_TimeSlicePostID] DEFAULT ((0)) NOT NULL,
    [HashValue]              VARCHAR (MAX)   CONSTRAINT [DF_TimeSlicePreModifier_HashValue] DEFAULT ('') NOT NULL,
    [ModifierParam1]         INT             CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam1] DEFAULT ((0)) NOT NULL,
    [ModifierParam2]         INT             CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam2] DEFAULT ((0)) NOT NULL,
    [ModifierDateTime1]      DATETIME        CONSTRAINT [DF_TimeSlicePreModifier_ModifierDateTime1] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifierDateTime2]      DATETIME        CONSTRAINT [DF_TimeSlicePreModifier_ModifierDateTime2] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifierParam3]         DECIMAL (18, 2) CONSTRAINT [DF_TimeSlicePreModifier_ModifierParam3] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_TimeSlicePreModifier1] PRIMARY KEY CLUSTERED ([TimeSlicePreModifierID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[TimeSlicePreModifier])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePreModifier] ON;
        INSERT INTO [dbo].[tmp_ms_xx_TimeSlicePreModifier] ([TimeSlicePreModifierID], [TimeSlicePreID], [ModifierID], [UserID], [ApplyToDate], [ModifiedBy], [ModifiedOn], [TimeSlicePostID], [HashValue], [ModifierParam1], [ModifierParam2], [ModifierDateTime1], [ModifierDateTime2], [ModifierParam3])
        SELECT   [TimeSlicePreModifierID],
                 [TimeSlicePreID],
                 [ModifierID],
                 [UserID],
                 [ApplyToDate],
                 [ModifiedBy],
                 [ModifiedOn],
                 [TimeSlicePostID],
                 [HashValue],
                 [ModifierParam1],
                 [ModifierParam2],
                 [ModifierDateTime1],
                 [ModifierDateTime2],
                 [ModifierParam3]
        FROM     [dbo].[TimeSlicePreModifier]
        ORDER BY [TimeSlicePreModifierID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_TimeSlicePreModifier] OFF;
    END

DROP TABLE [dbo].[TimeSlicePreModifier];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_TimeSlicePreModifier]', N'TimeSlicePreModifier';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_TimeSlicePreModifier1]', N'PK_TimeSlicePreModifier', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[TimeSlicePreModifier]([TimeSlicePostID] ASC, [TimeSlicePreID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserGroup]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserGroup] (
    [UserGroupID]     INT           IDENTITY (1, 1) NOT NULL,
    [UserGroupName]   NVARCHAR (50) NOT NULL,
    [UserGroupNumber] NVARCHAR (50) CONSTRAINT [DF_UserGroup_UserGroupNumber] DEFAULT ('') NOT NULL,
    [ModifiedBy]      INT           CONSTRAINT [DF_UserGroup_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]      DATETIME      CONSTRAINT [DF_UserGroup_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserGroup1]
    ON [dbo].[tmp_ms_xx_UserGroup]([UserGroupID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserGroup])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroup] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserGroup] ([UserGroupID], [UserGroupName], [UserGroupNumber], [ModifiedBy], [ModifiedOn])
        SELECT   [UserGroupID],
                 [UserGroupName],
                 [UserGroupNumber],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserGroup]
        ORDER BY [UserGroupID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroup] OFF;
    END

DROP TABLE [dbo].[UserGroup];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserGroup]', N'UserGroup';

EXECUTE sp_rename N'[dbo].[UserGroup].[tmp_ms_xx_index_PK_UserGroup1]', N'PK_UserGroup', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserGroup].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserGroup]([UserGroupName] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserGroupAccess]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserGroupAccess] (
    [UserGroupAccessID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]            INT      CONSTRAINT [DF_UserGroupAccess_UserID] DEFAULT ((0)) NOT NULL,
    [UserGroupID]       INT      NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_UserGroupAccess_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_UserGroupAccess_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserGroupAccess1] PRIMARY KEY CLUSTERED ([UserGroupAccessID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserGroupAccess])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupAccess] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserGroupAccess] ([UserGroupAccessID], [UserID], [UserGroupID], [ModifiedBy], [ModifiedOn])
        SELECT   [UserGroupAccessID],
                 [UserID],
                 [UserGroupID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserGroupAccess]
        ORDER BY [UserGroupAccessID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupAccess] OFF;
    END

DROP TABLE [dbo].[UserGroupAccess];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserGroupAccess]', N'UserGroupAccess';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserGroupAccess1]', N'PK_UserGroupAccess', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserGroupMember]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserGroupMember] (
    [UserGroupMemberID] INT      IDENTITY (1, 1) NOT NULL,
    [UserGroupID]       INT      CONSTRAINT [DF_UserGroupMember_UserGroupID] DEFAULT ((0)) NOT NULL,
    [UserID]            INT      CONSTRAINT [DF_UserGroupMember_UserID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_UserGroupMember_ModifiedBy] DEFAULT ((0)) NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_UserGroupMember_ModifiedOn] DEFAULT ('1/1/1900') NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserGroupMember1]
    ON [dbo].[tmp_ms_xx_UserGroupMember]([UserGroupMemberID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserGroupMember])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupMember] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserGroupMember] ([UserGroupMemberID], [UserGroupID], [UserID], [ModifiedBy], [ModifiedOn])
        SELECT   [UserGroupMemberID],
                 [UserGroupID],
                 [UserID],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserGroupMember]
        ORDER BY [UserGroupMemberID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupMember] OFF;
    END

DROP TABLE [dbo].[UserGroupMember];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserGroupMember]', N'UserGroupMember';

EXECUTE sp_rename N'[dbo].[UserGroupMember].[tmp_ms_xx_index_PK_UserGroupMember1]', N'PK_UserGroupMember', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserGroupMember].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserGroupMember]([UserGroupID] ASC, [UserID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserGroupMgr]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserGroupMgr] (
    [UserGroupMgrID]            INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                    INT      CONSTRAINT [DF_UserGroupMgr_UserID] DEFAULT ((0)) NOT NULL,
    [UserGroupID]               INT      CONSTRAINT [DF_UserGroupMgr_UserGroupID] DEFAULT ((0)) NOT NULL,
    [StartDateManagement]       DATETIME CONSTRAINT [DF_UserGroupMgr_StartDateManagement] DEFAULT ('1/1/1900') NOT NULL,
    [EndDateManagement]         DATETIME CONSTRAINT [DF_UserGroupMgr_EndDateManagement] DEFAULT ('1/1/1900') NOT NULL,
    [MgrType]                   INT      CONSTRAINT [DF_UserGroupMgr_MgrType] DEFAULT ((0)) NOT NULL,
    [ReceiveTORNotification]    BIT      CONSTRAINT [DF_UserGroupMgr_ReceiveTORNotification] DEFAULT ((0)) NOT NULL,
    [CanAccessSubordinateGroup] BIT      CONSTRAINT [DF_UserGroupMgr_CanAccessSubordinateGroup] DEFAULT ((0)) NOT NULL,
    [CanAssignSubordinateMgr]   BIT      CONSTRAINT [DF_UserGroupMgr_CanAssignSubordinateMgr] DEFAULT ((0)) NOT NULL,
    [CanAssignProxyMgr]         BIT      CONSTRAINT [DF_UserGroupMgr_CanAssignProxyMgr] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                INT      CONSTRAINT [DF_UserGroupMgr_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                DATETIME CONSTRAINT [DF_UserGroupMgr_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserGroupMgr1] PRIMARY KEY CLUSTERED ([UserGroupMgrID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserGroupMgr])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupMgr] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserGroupMgr] ([UserGroupMgrID], [UserID], [UserGroupID], [StartDateManagement], [EndDateManagement], [MgrType], [ReceiveTORNotification], [CanAccessSubordinateGroup], [CanAssignSubordinateMgr], [CanAssignProxyMgr], [ModifiedBy], [ModifiedOn])
        SELECT   [UserGroupMgrID],
                 [UserID],
                 [UserGroupID],
                 [StartDateManagement],
                 [EndDateManagement],
                 [MgrType],
                 [ReceiveTORNotification],
                 [CanAccessSubordinateGroup],
                 [CanAssignSubordinateMgr],
                 [CanAssignProxyMgr],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserGroupMgr]
        ORDER BY [UserGroupMgrID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserGroupMgr] OFF;
    END

DROP TABLE [dbo].[UserGroupMgr];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserGroupMgr]', N'UserGroupMgr';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserGroupMgr1]', N'PK_UserGroupMgr', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserGroupMgr].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserGroupMgr]([UserID] ASC, [StartDateManagement] ASC, [EndDateManagement] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfo] (
    [UserID]                         INT             IDENTITY (1, 1) NOT NULL,
    [EmpIdentifier]                  NVARCHAR (50)   CONSTRAINT [DF_UserInfo_EmpIdentifier] DEFAULT ('') NOT NULL,
    [FirstName]                      NVARCHAR (50)   CONSTRAINT [DF_UserInfo_FirstName] DEFAULT ('') NOT NULL,
    [MiddleName]                     NVARCHAR (50)   CONSTRAINT [DF_UserInfo_MiddleName] DEFAULT ('') NOT NULL,
    [LastName]                       NVARCHAR (50)   CONSTRAINT [DF_UserInfo_LastName] DEFAULT ('') NOT NULL,
    [Title]                          NVARCHAR (100)  CONSTRAINT [DF_UserInfo_Title] DEFAULT ('') NOT NULL,
    [Address1]                       NVARCHAR (150)  CONSTRAINT [DF_UserInfo_Address1] DEFAULT ('') NOT NULL,
    [Address2]                       NVARCHAR (150)  CONSTRAINT [DF_UserInfo_Address2] DEFAULT ('') NOT NULL,
    [City]                           NVARCHAR (150)  CONSTRAINT [DF_UserInfo_City] DEFAULT ('') NOT NULL,
    [State]                          NVARCHAR (150)  CONSTRAINT [DF_UserInfo_State] DEFAULT ('') NOT NULL,
    [PostalCode]                     NVARCHAR (150)  CONSTRAINT [DF_UserInfo_PostalCode] DEFAULT ('') NOT NULL,
    [Phone1]                         NVARCHAR (50)   CONSTRAINT [DF_UserInfo_Phone1] DEFAULT ('') NOT NULL,
    [Phone2]                         NVARCHAR (50)   CONSTRAINT [DF_UserInfo_Phone2] DEFAULT ('') NOT NULL,
    [Phone3]                         NVARCHAR (50)   CONSTRAINT [DF_UserInfo_Phone3] DEFAULT ('') NOT NULL,
    [Email]                          NVARCHAR (100)  CONSTRAINT [DF_UserInfo_Email] DEFAULT ('') NOT NULL,
    [Badge]                          NVARCHAR (50)   CONSTRAINT [DF_UserInfo_Badge] DEFAULT ('') NOT NULL,
    [WebLogin]                       NVARCHAR (50)   CONSTRAINT [DF_UserInfo_WebLogin] DEFAULT ('') NOT NULL,
    [WebPassword]                    NVARCHAR (MAX)  CONSTRAINT [DF_UserInfo_WebPassword] DEFAULT ('') NOT NULL,
    [PasswordPolicyID]               INT             CONSTRAINT [DF_UserInfo_PasswordPolicyID] DEFAULT ((0)) NOT NULL,
    [PasswordExpires]                DATETIME        CONSTRAINT [DF_UserInfo_PasswordExpires] DEFAULT ('1/1/1900') NOT NULL,
    [GovernmentID]                   NVARCHAR (100)  CONSTRAINT [DF_UserInfo_GovernmentID] DEFAULT ('') NOT NULL,
    [RestrictToScheduleEnabled]      BIT             CONSTRAINT [DF_UserInfo_RestrictToScheduleEnabled] DEFAULT ((0)) NOT NULL,
    [RestrictShortLunchEnabled]      BIT             CONSTRAINT [DF_UserInfo_RestrictShortLunchEnabled] DEFAULT ((0)) NOT NULL,
    [WebAccessEnabled]               BIT             CONSTRAINT [DF_UserInfo_WebAccessEnabled] DEFAULT ((0)) NOT NULL,
    [WebPunchingEnabled]             BIT             CONSTRAINT [DF_UserInfo_WebPunchingEnabled] DEFAULT ((0)) NOT NULL,
    [TimeSheetSubmitEnabled]         BIT             CONSTRAINT [DF_UserInfo_TimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [WorkTimeSheetSubmitEnabled]     BIT             CONSTRAINT [DF_UserInfo_WorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [NonWorkTimeSheetSubmitEnabled]  BIT             CONSTRAINT [DF_UserInfo_NonWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [DefaultClockIn]                 DATETIME        CONSTRAINT [DF_UserInfo_TimeSheetDefaultClockIn] DEFAULT ('1/1/1900') NOT NULL,
    [TimeSheetDefaultPaid]           BIT             CONSTRAINT [DF_UserInfo_TimeSheetDefaultPaid] DEFAULT ((0)) NOT NULL,
    [TimeZoneKey]                    VARCHAR (100)   CONSTRAINT [DF_UserInfo_TimeZoneKey] DEFAULT ('') NOT NULL,
    [TrackAttendanceOnlyEnabled]     BIT             CONSTRAINT [DF_UserInfo_TrackAttendanceOnlyEnabled] DEFAULT ((0)) NOT NULL,
    [AttendanceShiftLength]          INT             CONSTRAINT [DF_UserInfo_AttendanceShiftLength] DEFAULT ((0)) NOT NULL,
    [PasswordAttempts]               INT             CONSTRAINT [DF_UserInfo_PasswordAttempts] DEFAULT ((0)) NOT NULL,
    [LastLockedOut]                  DATETIME        CONSTRAINT [DF_UserInfo_LastLockedOut] DEFAULT ('1/1/1900') NOT NULL,
    [IPAccessPolicyID]               INT             CONSTRAINT [DF_UserInfo_IPAccessPolicyID] DEFAULT ((0)) NOT NULL,
    [TimeOffStartDate]               DATETIME        CONSTRAINT [DF_UserInfo_TimeOffStartDate] DEFAULT ('1/1/1900') NOT NULL,
    [PreferenceID]                   INT             CONSTRAINT [DF_UserInfo_PreferenceID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                     INT             CONSTRAINT [DF_UserInfo_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                     DATETIME        CONSTRAINT [DF_UserInfo_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [IsTopMostMgr]                   BIT             CONSTRAINT [DF_UserInfo_IsTopMostMgr] DEFAULT ((0)) NOT NULL,
    [AdditionalMonthsOfService]      INT             CONSTRAINT [DF_UserInfo_AdditionalMonthsOfService] DEFAULT ((0)) NOT NULL,
    [ResetPasswordLink]              NVARCHAR (MAX)  CONSTRAINT [DF_UserInfo_ResetPasswordLink] DEFAULT ('') NOT NULL,
    [ResetPasswordLinkGeneratedOn]   DATETIME        CONSTRAINT [DF_UserInfo_ResetPasswordLinkGeneratedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [SessionState]                   NVARCHAR (MAX)  CONSTRAINT [DF_UserInfo_SessionState] DEFAULT ('') NOT NULL,
    [TimeCardLockedThru]             DATETIME        CONSTRAINT [DF_UserInfo_TimeCardLockedThru] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [TimeCardClosedThru]             DATETIME        CONSTRAINT [DF_UserInfo_TimeCardClosedThru] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [StartDate]                      DATETIME        CONSTRAINT [DF_UserInfo_EndDate] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [AlertEmail]                     NVARCHAR (100)  CONSTRAINT [DF_UserInfo_AlertEmail] DEFAULT ('') NOT NULL,
    [QualForAccrualsByHrsWorked]     BIT             CONSTRAINT [DF_UserInfo_QualifiedForAccrualsByHoursWorked] DEFAULT ((0)) NOT NULL,
    [Minutiae1]                      VARBINARY (MAX) CONSTRAINT [DF_UserInfo_Minutiae1] DEFAULT ((1)) NOT NULL,
    [Minutiae2]                      VARBINARY (MAX) CONSTRAINT [DF_UserInfo_Minutiae2] DEFAULT ((1)) NOT NULL,
    [SpecialMinutiae]                BIT             CONSTRAINT [DF_UserInfo_SpecialMinutiae] DEFAULT ((0)) NOT NULL,
    [HandTemplate]                   VARBINARY (100) CONSTRAINT [DF_UserInfo_HandTemplate] DEFAULT ((0)) NOT NULL,
    [MobileWebPunchEnabled]          BIT             CONSTRAINT [DF_UserInfo_MobileWebPunchEnabled] DEFAULT ((0)) NOT NULL,
    [EnforceIPAccessOnMobileWeb]     BIT             CONSTRAINT [DF_UserInfo_EnforceIPAccessOnMobileWeb] DEFAULT ((0)) NOT NULL,
    [TrackGeolocation]               BIT             CONSTRAINT [DF_UserInfo_TrackGeolocation] DEFAULT ((0)) NOT NULL,
    [DisablePunchWithoutGeolocation] BIT             CONSTRAINT [DF_UserInfo_DisablePunchWithoutGeolocation] DEFAULT ((0)) NOT NULL,
    [SSOLoginOnly]                   BIT             CONSTRAINT [DF_UserInfo_SSOLoginOnly] DEFAULT ((0)) NOT NULL,
    [TelepunchPin]                   VARCHAR (50)    CONSTRAINT [DF_UserInfo_TelepunchPin] DEFAULT ('') NOT NULL,
    [WebKioskPunchEnabled]           BIT             CONSTRAINT [DF_UserInfo_WebKioskPunchEnabled] DEFAULT ((0)) NOT NULL,
    [CreatedOn]                      DATETIME        CONSTRAINT [DF_UserInfo_CreatedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [CreatedBy]                      INT             CONSTRAINT [DF_UserInfo_CreatedBy] DEFAULT ((0)) NOT NULL,
    [ClientID]                       VARCHAR (50)    CONSTRAINT [DF_UserInfo_ClientID] DEFAULT ('') NOT NULL,
    [Phone1Ext]                      NVARCHAR (10)   DEFAULT ('') NOT NULL,
    [PayrollEmployeeID]              BIGINT          DEFAULT ((-9999)) NOT NULL,
    [EmployeeType]                   INT             DEFAULT ((-9999)) NOT NULL,
    [Phone2Ext]                      NVARCHAR (10)   DEFAULT ('') NOT NULL,
    [HomeEmail]                      NVARCHAR (100)  CONSTRAINT [DF_UserInfo_HomeEmail] DEFAULT ('') NOT NULL,
    [AutoDistribution]               BIT             DEFAULT ((0)) NOT NULL,
    [PayrollStandardHours]           DECIMAL (9, 3)  CONSTRAINT [DF_UserInfo_ScheduledHours] DEFAULT ((0)) NOT NULL,
    [EmployeeClassification]         INT             CONSTRAINT [DF_UserInfo_EmployeeClassification] DEFAULT ((0)) NOT NULL,
    [AllowMobTimeSheetSubmit]        BIT             CONSTRAINT [DF_UserInfo_MobileTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [AllowMobWorkTimeSheetSubmit]    BIT             CONSTRAINT [DF_UserInfo_MobileWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [AllowMobNonWorkTimeSheetSubmit] BIT             CONSTRAINT [DF_UserInfo_MobileNonWorkTimeSheetSubmitEnabled] DEFAULT ((0)) NOT NULL,
    [MobTimeSheetDefaultPaid]        BIT             CONSTRAINT [DF_UserInfo_MobileTimeSheetDefaultPaid] DEFAULT ((0)) NOT NULL,
    [WEID]                           VARCHAR (20)    CONSTRAINT [DF_UserInfo_WEID] DEFAULT ('') NOT NULL,
    [PEID]                           VARCHAR (20)    CONSTRAINT [DF_UserInfo_PEID] DEFAULT ('') NOT NULL,
    [PNGSSOUserGUID]                 VARCHAR (20)    CONSTRAINT [DF_UserInfo_PNGSSOUserGUID] DEFAULT ('') NOT NULL,
    [ScheduledHours]                 DECIMAL (9, 3)  CONSTRAINT [DF_UserInfo_ScheduledHours2] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserInfo_11] PRIMARY KEY NONCLUSTERED ([UserID] ASC)
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfo1]
    ON [dbo].[tmp_ms_xx_UserInfo]([UserID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfo])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfo] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfo] ([UserID], [EmpIdentifier], [FirstName], [MiddleName], [LastName], [Title], [Address1], [Address2], [City], [State], [PostalCode], [Phone1], [Phone2], [Phone3], [Email], [Badge], [WebLogin], [WebPassword], [PasswordPolicyID], [PasswordExpires], [GovernmentID], [RestrictToScheduleEnabled], [RestrictShortLunchEnabled], [WebAccessEnabled], [WebPunchingEnabled], [TimeSheetSubmitEnabled], [WorkTimeSheetSubmitEnabled], [NonWorkTimeSheetSubmitEnabled], [DefaultClockIn], [TimeSheetDefaultPaid], [TimeZoneKey], [TrackAttendanceOnlyEnabled], [AttendanceShiftLength], [PasswordAttempts], [LastLockedOut], [IPAccessPolicyID], [TimeOffStartDate], [PreferenceID], [ModifiedBy], [ModifiedOn], [IsTopMostMgr], [AdditionalMonthsOfService], [ResetPasswordLink], [ResetPasswordLinkGeneratedOn], [SessionState], [TimeCardLockedThru], [TimeCardClosedThru], [StartDate], [AlertEmail], [QualForAccrualsByHrsWorked], [Minutiae1], [Minutiae2], [SpecialMinutiae], [HandTemplate], [MobileWebPunchEnabled], [EnforceIPAccessOnMobileWeb], [TrackGeolocation], [DisablePunchWithoutGeolocation], [SSOLoginOnly], [TelepunchPin], [WebKioskPunchEnabled], [CreatedOn], [CreatedBy], [ClientID], [Phone1Ext], [PayrollEmployeeID], [EmployeeType], [Phone2Ext], [HomeEmail], [AutoDistribution], [PayrollStandardHours], [EmployeeClassification], [AllowMobTimeSheetSubmit], [AllowMobWorkTimeSheetSubmit], [AllowMobNonWorkTimeSheetSubmit], [MobTimeSheetDefaultPaid])
        SELECT   [UserID],
                 [EmpIdentifier],
                 [FirstName],
                 [MiddleName],
                 [LastName],
                 [Title],
                 [Address1],
                 [Address2],
                 [City],
                 [State],
                 [PostalCode],
                 [Phone1],
                 [Phone2],
                 [Phone3],
                 [Email],
                 [Badge],
                 [WebLogin],
                 [WebPassword],
                 [PasswordPolicyID],
                 [PasswordExpires],
                 [GovernmentID],
                 [RestrictToScheduleEnabled],
                 [RestrictShortLunchEnabled],
                 [WebAccessEnabled],
                 [WebPunchingEnabled],
                 [TimeSheetSubmitEnabled],
                 [WorkTimeSheetSubmitEnabled],
                 [NonWorkTimeSheetSubmitEnabled],
                 [DefaultClockIn],
                 [TimeSheetDefaultPaid],
                 [TimeZoneKey],
                 [TrackAttendanceOnlyEnabled],
                 [AttendanceShiftLength],
                 [PasswordAttempts],
                 [LastLockedOut],
                 [IPAccessPolicyID],
                 [TimeOffStartDate],
                 [PreferenceID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IsTopMostMgr],
                 [AdditionalMonthsOfService],
                 [ResetPasswordLink],
                 [ResetPasswordLinkGeneratedOn],
                 [SessionState],
                 [TimeCardLockedThru],
                 [TimeCardClosedThru],
                 [StartDate],
                 [AlertEmail],
                 [QualForAccrualsByHrsWorked],
                 [Minutiae1],
                 [Minutiae2],
                 [SpecialMinutiae],
                 [HandTemplate],
                 [MobileWebPunchEnabled],
                 [EnforceIPAccessOnMobileWeb],
                 [TrackGeolocation],
                 [DisablePunchWithoutGeolocation],
                 [SSOLoginOnly],
                 [TelepunchPin],
                 [WebKioskPunchEnabled],
                 [CreatedOn],
                 [CreatedBy],
                 [ClientID],
                 [Phone1Ext],
                 [PayrollEmployeeID],
                 [EmployeeType],
                 [Phone2Ext],
                 [HomeEmail],
                 [AutoDistribution],
                 [PayrollStandardHours],
                 [EmployeeClassification],
                 [AllowMobTimeSheetSubmit],
                 [AllowMobWorkTimeSheetSubmit],
                 [AllowMobNonWorkTimeSheetSubmit],
                 [MobTimeSheetDefaultPaid]
        FROM     [dbo].[UserInfo]
        ORDER BY [UserID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfo] OFF;
    END

DROP TABLE [dbo].[UserInfo];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfo]', N'UserInfo';

EXECUTE sp_rename N'[dbo].[UserInfo].[tmp_ms_xx_index_PK_UserInfo1]', N'PK_UserInfo', N'INDEX';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserInfo_11]', N'PK_UserInfo_1', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfo].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfo]([EmpIdentifier] ASC, [FirstName] ASC, [MiddleName] ASC, [LastName] ASC, [Badge] ASC, [WebLogin] ASC, [PasswordPolicyID] ASC, [GovernmentID] ASC, [IPAccessPolicyID] ASC, [PreferenceID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoChargeRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoChargeRate] (
    [UserInfoChargeRateID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]               INT      CONSTRAINT [DF_UserInfoChargeRate_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]        DATETIME CONSTRAINT [DF_UserInfoChargeRate_StartDateTime] DEFAULT (((1) / (1)) / (900)) NOT NULL,
    [EndDateTime]          DATETIME CONSTRAINT [DF_UserInfoChargeRate_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ChargeRate]           MONEY    CONSTRAINT [DF_UserInfoChargeRate_ChargeRate] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]           INT      CONSTRAINT [DF_UserInfoChargeRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]           DATETIME CONSTRAINT [DF_UserInfoChargeRate_ModifiedOn] DEFAULT (((1) / (1)) / (900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoChargeRate1]
    ON [dbo].[tmp_ms_xx_UserInfoChargeRate]([UserInfoChargeRateID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoChargeRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoChargeRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoChargeRate] ([UserInfoChargeRateID], [UserID], [StartDateTime], [EndDateTime], [ChargeRate], [ModifiedBy], [ModifiedOn])
        SELECT   [UserInfoChargeRateID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [ChargeRate],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserInfoChargeRate]
        ORDER BY [UserInfoChargeRateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoChargeRate] OFF;
    END

DROP TABLE [dbo].[UserInfoChargeRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoChargeRate]', N'UserInfoChargeRate';

EXECUTE sp_rename N'[dbo].[UserInfoChargeRate].[tmp_ms_xx_index_PK_UserInfoChargeRate1]', N'PK_UserInfoChargeRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoChargeRate]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoEmpStatus]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoEmpStatus] (
    [UserInfoEmpStatusID] INT          IDENTITY (1, 1) NOT NULL,
    [UserID]              INT          CONSTRAINT [DF_UserInfoEmpStatus_UserID] DEFAULT ((0)) NOT NULL,
    [EmpStatus]           INT          CONSTRAINT [DF_UserInfoEmpStatus_EmpStatus] DEFAULT ((0)) NOT NULL,
    [StartDateTime]       DATETIME     CONSTRAINT [DF_UserInfoEmpStatus_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]         DATETIME     CONSTRAINT [DF_UserInfoEmpStatus_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]          INT          CONSTRAINT [DF_UserInfoEmpStatus_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]          DATETIME     CONSTRAINT [DF_UserInfoEmpStatus_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL,
    [Description]         VARCHAR (80) DEFAULT ('') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoEmployeeStatus1]
    ON [dbo].[tmp_ms_xx_UserInfoEmpStatus]([UserInfoEmpStatusID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoEmpStatus])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoEmpStatus] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoEmpStatus] ([UserInfoEmpStatusID], [UserID], [EmpStatus], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [Description])
        SELECT   [UserInfoEmpStatusID],
                 [UserID],
                 [EmpStatus],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [Description]
        FROM     [dbo].[UserInfoEmpStatus]
        ORDER BY [UserInfoEmpStatusID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoEmpStatus] OFF;
    END

DROP TABLE [dbo].[UserInfoEmpStatus];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoEmpStatus]', N'UserInfoEmpStatus';

EXECUTE sp_rename N'[dbo].[UserInfoEmpStatus].[tmp_ms_xx_index_PK_UserInfoEmployeeStatus1]', N'PK_UserInfoEmployeeStatus', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoEmpStatus]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoHolDurationOverride]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoHolDurationOverride] (
    [UserInfoHolDurationOverrideID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                        INT      CONSTRAINT [DF_UserInfoHolDurationOverride_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]                 DATETIME CONSTRAINT [DF_UserInfoHolDurationOverride_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                   DATETIME CONSTRAINT [DF_UserInfoHolDurationOverride_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [WorkedHolDuration]             INT      CONSTRAINT [DF_UserInfoHolDurationOverride_WorkedHolDuration] DEFAULT ((0)) NOT NULL,
    [NonWorkedHolDuration]          INT      CONSTRAINT [DF_UserInfoHolDurationOverride_NonWorkedHolDuration] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]                    INT      CONSTRAINT [DF_UserInfoHolDurationOverride_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                    DATETIME CONSTRAINT [DF_UserInfoHolDurationOverride_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoHolidayDurOverride1]
    ON [dbo].[tmp_ms_xx_UserInfoHolDurationOverride]([UserInfoHolDurationOverrideID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoHolDurationOverride])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoHolDurationOverride] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoHolDurationOverride] ([UserInfoHolDurationOverrideID], [UserID], [StartDateTime], [EndDateTime], [WorkedHolDuration], [NonWorkedHolDuration], [ModifiedBy], [ModifiedOn])
        SELECT   [UserInfoHolDurationOverrideID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [WorkedHolDuration],
                 [NonWorkedHolDuration],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserInfoHolDurationOverride]
        ORDER BY [UserInfoHolDurationOverrideID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoHolDurationOverride] OFF;
    END

DROP TABLE [dbo].[UserInfoHolDurationOverride];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoHolDurationOverride]', N'UserInfoHolDurationOverride';

EXECUTE sp_rename N'[dbo].[UserInfoHolDurationOverride].[tmp_ms_xx_index_PK_UserInfoHolidayDurOverride1]', N'PK_UserInfoHolidayDurOverride', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoHolDurationOverride]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoIsExempt]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoIsExempt] (
    [UserInfoIsExemptID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]             INT      CONSTRAINT [DF_UserInfoIsExempt_UserID] DEFAULT ((0)) NOT NULL,
    [IsExempt]           BIT      CONSTRAINT [DF_UserInfoIsExempt_IsExempt] DEFAULT ((0)) NOT NULL,
    [StartDateTime]      DATETIME CONSTRAINT [DF_UserInfoIsExempt_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]        DATETIME CONSTRAINT [DF_UserInfoIsExempt_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]         INT      CONSTRAINT [DF_UserInfoIsExempt_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME CONSTRAINT [DF_UserInfoIsExempt_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoIsExempt1]
    ON [dbo].[tmp_ms_xx_UserInfoIsExempt]([UserInfoIsExemptID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoIsExempt])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoIsExempt] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoIsExempt] ([UserInfoIsExemptID], [UserID], [IsExempt], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [UserInfoIsExemptID],
                 [UserID],
                 [IsExempt],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserInfoIsExempt]
        ORDER BY [UserInfoIsExemptID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoIsExempt] OFF;
    END

DROP TABLE [dbo].[UserInfoIsExempt];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoIsExempt]', N'UserInfoIsExempt';

EXECUTE sp_rename N'[dbo].[UserInfoIsExempt].[tmp_ms_xx_index_PK_UserInfoIsExempt1]', N'PK_UserInfoIsExempt', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoIsExempt]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoIsSalary]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoIsSalary] (
    [UserInfoIsSalaryID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]             INT      CONSTRAINT [DF_UserInfoIsSalary_UserID] DEFAULT ((0)) NOT NULL,
    [IsSalary]           BIT      CONSTRAINT [DF_UserInfoIsSalary_IsSalary] DEFAULT ((0)) NOT NULL,
    [StartDateTime]      DATETIME CONSTRAINT [DF_UserInfoIsSalary_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]        DATETIME CONSTRAINT [DF_UserInfoIsSalary_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]         INT      CONSTRAINT [DF_UserInfoIsSalary_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]         DATETIME CONSTRAINT [DF_UserInfoIsSalary_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoIsSalary1]
    ON [dbo].[tmp_ms_xx_UserInfoIsSalary]([UserInfoIsSalaryID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoIsSalary])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoIsSalary] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoIsSalary] ([UserInfoIsSalaryID], [UserID], [IsSalary], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT   [UserInfoIsSalaryID],
                 [UserID],
                 [IsSalary],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserInfoIsSalary]
        ORDER BY [UserInfoIsSalaryID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoIsSalary] OFF;
    END

DROP TABLE [dbo].[UserInfoIsSalary];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoIsSalary]', N'UserInfoIsSalary';

EXECUTE sp_rename N'[dbo].[UserInfoIsSalary].[tmp_ms_xx_index_PK_UserInfoIsSalary1]', N'PK_UserInfoIsSalary', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoIsSalary]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoLoginDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoLoginDetail] (
    [UserInfoLoginDetailID]   INT            IDENTITY (1, 1) NOT NULL,
    [UserID]                  INT            CONSTRAINT [DF_UserInfoLoginDetail_UserID] DEFAULT ((0)) NOT NULL,
    [FirstName]               NVARCHAR (500) CONSTRAINT [DF_Table_1_FirstNname] DEFAULT ('') NOT NULL,
    [MiddleName]              NVARCHAR (500) CONSTRAINT [DF_UserInfoLoginDetail_MiddleName] DEFAULT ('') NOT NULL,
    [LastName]                NVARCHAR (500) CONSTRAINT [DF_UserInfoLoginDetail_LastName] DEFAULT ('') NOT NULL,
    [TokenSourceType]         INT            CONSTRAINT [DF_UserInfoLoginDetail_TokenSource] DEFAULT ((0)) NOT NULL,
    [UserType]                INT            CONSTRAINT [DF_UserInfoLoginDetail_UserType] DEFAULT ((0)) NOT NULL,
    [Culture]                 VARCHAR (50)   CONSTRAINT [DF_UserInfoLoginDetail_Culture] DEFAULT ('') NOT NULL,
    [DateTimeUTC]             DATETIME       CONSTRAINT [DF_UserInfoLoginDetail_DateTimeUTC] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DateTimeServer]          DATETIME       CONSTRAINT [DF_UserInfoLoginDetail_DateTimeServer] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [DateTimeUser]            DATETIME       CONSTRAINT [DF_UserInfoLoginDetail_DateTimeUser] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [UserTimeZone]            VARCHAR (500)  CONSTRAINT [DF_Table_1_UserTimezone] DEFAULT ('') NOT NULL,
    [LoginServer]             NVARCHAR (500) CONSTRAINT [DF_UserInfoLoginDetail_LoginMachine] DEFAULT ('') NOT NULL,
    [UserIP]                  VARCHAR (500)  CONSTRAINT [DF_UserInfoLoginDetail_UserIP] DEFAULT ('') NOT NULL,
    [CustomerSiteAccessLogID] INT            CONSTRAINT [DF_UserInfoLoginDetail_CustomerSiteAccessLogID] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]              INT            CONSTRAINT [DF_UserInfoLoginDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]              DATETIME       CONSTRAINT [DF_UserInfoLoginDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [GUID]                    NVARCHAR (50)  CONSTRAINT [DF_UserInfoLoginDetail_GUID] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserInfoLoginDetail1] PRIMARY KEY CLUSTERED ([UserInfoLoginDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoLoginDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoLoginDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoLoginDetail] ([UserInfoLoginDetailID], [UserID], [FirstName], [MiddleName], [LastName], [TokenSourceType], [UserType], [Culture], [DateTimeUTC], [DateTimeServer], [DateTimeUser], [UserTimeZone], [LoginServer], [UserIP], [CustomerSiteAccessLogID], [ModifiedBy], [ModifiedOn], [GUID])
        SELECT   [UserInfoLoginDetailID],
                 [UserID],
                 [FirstName],
                 [MiddleName],
                 [LastName],
                 [TokenSourceType],
                 [UserType],
                 [Culture],
                 [DateTimeUTC],
                 [DateTimeServer],
                 [DateTimeUser],
                 [UserTimeZone],
                 [LoginServer],
                 [UserIP],
                 [CustomerSiteAccessLogID],
                 [ModifiedBy],
                 [ModifiedOn],
                 [GUID]
        FROM     [dbo].[UserInfoLoginDetail]
        ORDER BY [UserInfoLoginDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoLoginDetail] OFF;
    END

DROP TABLE [dbo].[UserInfoLoginDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoLoginDetail]', N'UserInfoLoginDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserInfoLoginDetail1]', N'PK_UserInfoLoginDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoLoginDetail]([DateTimeUTC] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoNonWorkPayRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoNonWorkPayRate] (
    [UserInfoNonWorkPayRateID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]                   INT      CONSTRAINT [DF_UserInfoNonWorkPayRate_UserID] DEFAULT ((0)) NOT NULL,
    [PayRate]                  MONEY    CONSTRAINT [DF_UserInfoNonWorkPayRate_PayRate] DEFAULT ((0)) NOT NULL,
    [PayTypeID]                INT      CONSTRAINT [DF_UserInfoNonWorkPayRate_PayTypeID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]            DATETIME CONSTRAINT [DF_UserInfoNonWorkPayRate_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]              DATETIME CONSTRAINT [DF_UserInfoNonWorkPayRate_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedOn]               DATETIME CONSTRAINT [DF_UserInfoNonWorkPayRate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]               INT      CONSTRAINT [DF_UserInfoNonWorkPayRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_UserInfoNonWorkPayRate1] PRIMARY KEY CLUSTERED ([UserInfoNonWorkPayRateID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoNonWorkPayRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoNonWorkPayRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoNonWorkPayRate] ([UserInfoNonWorkPayRateID], [UserID], [PayRate], [PayTypeID], [StartDateTime], [EndDateTime], [ModifiedOn], [ModifiedBy])
        SELECT   [UserInfoNonWorkPayRateID],
                 [UserID],
                 [PayRate],
                 [PayTypeID],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedOn],
                 [ModifiedBy]
        FROM     [dbo].[UserInfoNonWorkPayRate]
        ORDER BY [UserInfoNonWorkPayRateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoNonWorkPayRate] OFF;
    END

DROP TABLE [dbo].[UserInfoNonWorkPayRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoNonWorkPayRate]', N'UserInfoNonWorkPayRate';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_UserInfoNonWorkPayRate1]', N'PK_UserInfoNonWorkPayRate', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoNonWorkPayRate]([UserID] ASC, [PayTypeID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoPayFreq]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoPayFreq] (
    [UserInfoPayFreqID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]            INT      CONSTRAINT [DF_UserInfoPayFreq_UserID] DEFAULT ((0)) NOT NULL,
    [PayFrequency]      INT      CONSTRAINT [DF_UserInfoPayFreq_PayFrequency] DEFAULT ((0)) NOT NULL,
    [StartDateTime]     DATETIME CONSTRAINT [DF_UserInfoPayFreq_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]       DATETIME CONSTRAINT [DF_UserInfoPayFreq_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_UserInfoPayFreq_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_UserInfoPayFreq_ModifiedOn] DEFAULT ('1/1/1900') NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoPayFreq])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoPayFreq] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoPayFreq] ([UserInfoPayFreqID], [UserID], [PayFrequency], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn])
        SELECT [UserInfoPayFreqID],
               [UserID],
               [PayFrequency],
               [StartDateTime],
               [EndDateTime],
               [ModifiedBy],
               [ModifiedOn]
        FROM   [dbo].[UserInfoPayFreq];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoPayFreq] OFF;
    END

DROP TABLE [dbo].[UserInfoPayFreq];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoPayFreq]', N'UserInfoPayFreq';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[UserInfoPayRate]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_UserInfoPayRate] (
    [UserInfoPayRateID] INT      IDENTITY (1, 1) NOT NULL,
    [UserID]            INT      CONSTRAINT [DF_UserInfoPayRate_UserID] DEFAULT ((0)) NOT NULL,
    [StartDateTime]     DATETIME CONSTRAINT [DF_UserInfoPayRate_StartDateTime] DEFAULT (((1) / (1)) / (900)) NOT NULL,
    [EndDateTime]       DATETIME CONSTRAINT [DF_UserInfoPayRate_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [PayRate]           MONEY    CONSTRAINT [DF_UserInfoPayRate_PayRate] DEFAULT ((0)) NOT NULL,
    [ModifiedBy]        INT      CONSTRAINT [DF_UserInfoPayRate_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]        DATETIME CONSTRAINT [DF_UserInfoPayRate_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL
);

CREATE UNIQUE CLUSTERED INDEX [tmp_ms_xx_index_PK_UserInfoPayRate1]
    ON [dbo].[tmp_ms_xx_UserInfoPayRate]([UserInfoPayRateID] ASC);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[UserInfoPayRate])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoPayRate] ON;
        INSERT INTO [dbo].[tmp_ms_xx_UserInfoPayRate] ([UserInfoPayRateID], [UserID], [StartDateTime], [EndDateTime], [PayRate], [ModifiedBy], [ModifiedOn])
        SELECT   [UserInfoPayRateID],
                 [UserID],
                 [StartDateTime],
                 [EndDateTime],
                 [PayRate],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[UserInfoPayRate]
        ORDER BY [UserInfoPayRateID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_UserInfoPayRate] OFF;
    END

DROP TABLE [dbo].[UserInfoPayRate];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_UserInfoPayRate]', N'UserInfoPayRate';

EXECUTE sp_rename N'[dbo].[UserInfoPayRate].[tmp_ms_xx_index_PK_UserInfoPayRate1]', N'PK_UserInfoPayRate', N'INDEX';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[UserInfoPayRate]([UserID] ASC, [StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Versions]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Versions] (
    [VersionID]     INT           IDENTITY (1, 1) NOT NULL,
    [VersionNumber] VARCHAR (MAX) CONSTRAINT [DF_Versions_VersionNumber] DEFAULT ((0)) NOT NULL,
    [VersionDate]   DATETIME      CONSTRAINT [DF_Versions_VersionDate] DEFAULT (getdate()) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Versions1] PRIMARY KEY CLUSTERED ([VersionID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Versions])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Versions] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Versions] ([VersionID], [VersionNumber], [VersionDate])
        SELECT   [VersionID],
                 [VersionNumber],
                 [VersionDate]
        FROM     [dbo].[Versions]
        ORDER BY [VersionID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Versions] OFF;
    END

DROP TABLE [dbo].[Versions];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Versions]', N'Versions';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Versions1]', N'PK_Versions', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[WebKioskTerminal]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WebKioskTerminal] (
    [WebKioskTerminalID]             INT            IDENTITY (1, 1) NOT NULL,
    [WebKioskTerminalName]           NVARCHAR (50)  CONSTRAINT [DF_WebKioskTerminal_WebKioskTerminalName] DEFAULT ('') NOT NULL,
    [LastRefreshDateTime]            DATETIME       CONSTRAINT [DF_WebKioskTerminal_LastRefreshDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedOn]                     DATETIME       CONSTRAINT [DF_WebKioskTerminal_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [ModifiedBy]                     INT            CONSTRAINT [DF_WebKioskTerminal_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [IsDeleted]                      BIT            CONSTRAINT [DF_WebKioskTerminal_IsDeleted] DEFAULT ((0)) NOT NULL,
    [TimeZoneKey]                    NVARCHAR (100) CONSTRAINT [DF_WebKioskTerminal_TimeZoneKey] DEFAULT ('') NOT NULL,
    [VerificationIDType]             INT            CONSTRAINT [DF_WebKioskTerminal_VerificationIDType] DEFAULT ((0)) NOT NULL,
    [LLDetailID1]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID1] DEFAULT ((0)) NOT NULL,
    [LLDetailID2]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID2] DEFAULT ((0)) NOT NULL,
    [LLDetailID3]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID3] DEFAULT ((0)) NOT NULL,
    [LLDetailID4]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID4] DEFAULT ((0)) NOT NULL,
    [LLDetailID5]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID5] DEFAULT ((0)) NOT NULL,
    [LLDetailID6]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID6] DEFAULT ((0)) NOT NULL,
    [LLDetailID7]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID7] DEFAULT ((0)) NOT NULL,
    [LLDetailID8]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID8] DEFAULT ((0)) NOT NULL,
    [LLDetailID9]                    INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID9] DEFAULT ((0)) NOT NULL,
    [LLDetailID10]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID10] DEFAULT ((0)) NOT NULL,
    [LLDetailID11]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID11] DEFAULT ((0)) NOT NULL,
    [LLDetailID12]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID12] DEFAULT ((0)) NOT NULL,
    [LLDetailID13]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID13] DEFAULT ((0)) NOT NULL,
    [LLDetailID14]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID14] DEFAULT ((0)) NOT NULL,
    [LLDetailID15]                   INT            CONSTRAINT [DF_WebKioskTerminal_LLDetailID15] DEFAULT ((0)) NOT NULL,
    [PunchScreenType]                INT            CONSTRAINT [DF_WebKioskTerminal_PunchScreenType] DEFAULT ((0)) NOT NULL,
    [EmpPasswordRequiredEnabled]     BIT            CONSTRAINT [DF_WebKioskTerminal_EmpPasswordRequiredEnabled] DEFAULT ((0)) NOT NULL,
    [LunchEnabled]                   BIT            CONSTRAINT [DF_WebKioskTerminal_LunchEnabled] DEFAULT ((0)) NOT NULL,
    [BreakEnabled]                   BIT            CONSTRAINT [DF_WebKioskTerminal_BreakEnabled] DEFAULT ((0)) NOT NULL,
    [TransferEnabled]                BIT            CONSTRAINT [DF_WebKioskTerminal_TransferEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnClockInEnabled]       BIT            CONSTRAINT [DF_WebKioskTerminal_LLPromptOnClockInEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnEndBreakEnabled]      BIT            CONSTRAINT [DF_WebKioskTerminal_LLPromptOnEndBreakEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnEndLunchEnabled]      BIT            CONSTRAINT [DF_WebKioskTerminal_LLPromptOnEndLunchEnabled] DEFAULT ((0)) NOT NULL,
    [LLPromptOnTransferEnabled]      BIT            CONSTRAINT [DF_WebKioskTerminal_LLPromptOnTransferEnabled] DEFAULT ((0)) NOT NULL,
    [AllowPayAdjustmentEntry]        BIT            CONSTRAINT [DF_WebKioskTerminal_AllowPayAdjustmentEntry] DEFAULT ((0)) NOT NULL,
    [LLPromptOnPayAdjustmentEnabled] BIT            CONSTRAINT [DF_WebKioskTerminal_LLPromptOnPayAdjustmentEnabled] DEFAULT ((0)) NOT NULL,
    [AllowViewSchedule]              BIT            CONSTRAINT [DF_WebKioskTerminal_AllowViewSchedule] DEFAULT ((0)) NOT NULL,
    [AllowTimeOffRequestEntries]     BIT            CONSTRAINT [DF_WebKioskTerminal_AllowTimeOffRequestEntries] DEFAULT ((0)) NOT NULL,
    [AllowTimeTimeCardEntries]       BIT            CONSTRAINT [DF_WebKioskTerminal_AllowTimeTimeCardEntries] DEFAULT ((0)) NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WebKioskTerminal])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WebKioskTerminal] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WebKioskTerminal] ([WebKioskTerminalID], [WebKioskTerminalName], [LastRefreshDateTime], [ModifiedOn], [ModifiedBy], [IsDeleted], [TimeZoneKey], [VerificationIDType], [LLDetailID1], [LLDetailID2], [LLDetailID3], [LLDetailID4], [LLDetailID5], [LLDetailID6], [LLDetailID7], [LLDetailID8], [LLDetailID9], [LLDetailID10], [LLDetailID11], [LLDetailID12], [LLDetailID13], [LLDetailID14], [LLDetailID15], [PunchScreenType], [EmpPasswordRequiredEnabled], [LunchEnabled], [BreakEnabled], [TransferEnabled], [LLPromptOnClockInEnabled], [LLPromptOnEndBreakEnabled], [LLPromptOnEndLunchEnabled], [LLPromptOnTransferEnabled], [AllowPayAdjustmentEntry])
        SELECT [WebKioskTerminalID],
               [WebKioskTerminalName],
               [LastRefreshDateTime],
               [ModifiedOn],
               [ModifiedBy],
               [IsDeleted],
               [TimeZoneKey],
               [VerificationIDType],
               [LLDetailID1],
               [LLDetailID2],
               [LLDetailID3],
               [LLDetailID4],
               [LLDetailID5],
               [LLDetailID6],
               [LLDetailID7],
               [LLDetailID8],
               [LLDetailID9],
               [LLDetailID10],
               [LLDetailID11],
               [LLDetailID12],
               [LLDetailID13],
               [LLDetailID14],
               [LLDetailID15],
               [PunchScreenType],
               [EmpPasswordRequiredEnabled],
               [LunchEnabled],
               [BreakEnabled],
               [TransferEnabled],
               [LLPromptOnClockInEnabled],
               [LLPromptOnEndBreakEnabled],
               [LLPromptOnEndLunchEnabled],
               [LLPromptOnTransferEnabled],
               [AllowPayAdjustmentEntry]
        FROM   [dbo].[WebKioskTerminal];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WebKioskTerminal] OFF;
    END

DROP TABLE [dbo].[WebKioskTerminal];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WebKioskTerminal]', N'WebKioskTerminal';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[WebKioskTerminalPrompt]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WebKioskTerminalPrompt] (
    [WebKioskTerminalPromptID] INT           IDENTITY (1, 1) NOT NULL,
    [WebKioskTerminalID]       INT           CONSTRAINT [DF_WebKioskTerminalPrompt_WebKioskTerminalID] DEFAULT ((0)) NOT NULL,
    [LLID]                     INT           CONSTRAINT [DF_WebKioskTerminalPrompt_LLID] DEFAULT ((0)) NOT NULL,
    [PromptText]               NVARCHAR (50) CONSTRAINT [DF_WebKioskTerminalPrompt_PromptText] DEFAULT ('') NOT NULL,
    [ModifiedBy]               INT           CONSTRAINT [DF_WebKioskTerminalPrompt_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME      CONSTRAINT [DF_WebKioskTerminalPrompt_ModifiedOn] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WebKioskTerminalPrompt1] PRIMARY KEY CLUSTERED ([WebKioskTerminalPromptID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WebKioskTerminalPrompt])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WebKioskTerminalPrompt] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WebKioskTerminalPrompt] ([WebKioskTerminalPromptID], [WebKioskTerminalID], [LLID], [PromptText], [ModifiedBy], [ModifiedOn])
        SELECT   [WebKioskTerminalPromptID],
                 [WebKioskTerminalID],
                 [LLID],
                 [PromptText],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[WebKioskTerminalPrompt]
        ORDER BY [WebKioskTerminalPromptID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WebKioskTerminalPrompt] OFF;
    END

DROP TABLE [dbo].[WebKioskTerminalPrompt];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WebKioskTerminalPrompt]', N'WebKioskTerminalPrompt';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WebKioskTerminalPrompt1]', N'PK_WebKioskTerminalPrompt', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[WebKioskTerminalPrompt]([WebKioskTerminalID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[WelcomeMessage]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WelcomeMessage] (
    [WelcomeMessageID]           INT             IDENTITY (1, 1) NOT NULL,
    [MessageType]                INT             CONSTRAINT [DF_WelcomeMessage_MessageType] DEFAULT ((0)) NOT NULL,
    [WelcomeMessageTitle]        NVARCHAR (50)   CONSTRAINT [DF_WelcomeMessage_WelcomeMessageTitle] DEFAULT ('') NOT NULL,
    [WelcomeMessageBody]         NVARCHAR (4000) CONSTRAINT [DF_WelcomeMessage_WelcomeMessageBody] DEFAULT ('') NOT NULL,
    [StartDateTime]              DATETIME        CONSTRAINT [DF_WelcomeMessage_StartDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [EndDateTime]                DATETIME        CONSTRAINT [DF_WelcomeMessage_EndDateTime] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]                 INT             CONSTRAINT [DF_WelcomeMessage_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]                 DATETIME        CONSTRAINT [DF_WelcomeMessage_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [IncludeAllEmployeesEnabled] BIT             CONSTRAINT [DF_WelcomeMessage_IsCheckedForAllUsers] DEFAULT ((0)) NOT NULL,
    [AcknowledgeMessageEnabled]  BIT             CONSTRAINT [DF_WelcomeMessage_AcknowledgeMessageEnabled] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WelcomeMessage1] PRIMARY KEY CLUSTERED ([WelcomeMessageID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WelcomeMessage])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WelcomeMessage] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WelcomeMessage] ([WelcomeMessageID], [MessageType], [WelcomeMessageTitle], [WelcomeMessageBody], [StartDateTime], [EndDateTime], [ModifiedBy], [ModifiedOn], [IncludeAllEmployeesEnabled], [AcknowledgeMessageEnabled])
        SELECT   [WelcomeMessageID],
                 [MessageType],
                 [WelcomeMessageTitle],
                 [WelcomeMessageBody],
                 [StartDateTime],
                 [EndDateTime],
                 [ModifiedBy],
                 [ModifiedOn],
                 [IncludeAllEmployeesEnabled],
                 [AcknowledgeMessageEnabled]
        FROM     [dbo].[WelcomeMessage]
        ORDER BY [WelcomeMessageID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WelcomeMessage] OFF;
    END

DROP TABLE [dbo].[WelcomeMessage];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WelcomeMessage]', N'WelcomeMessage';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WelcomeMessage1]', N'PK_WelcomeMessage', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[WelcomeMessage].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[WelcomeMessage]([StartDateTime] ASC, [EndDateTime] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[WelcomeMessageDetail]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WelcomeMessageDetail] (
    [WelcomeMessageDetailID] INT      IDENTITY (1, 1) NOT NULL,
    [WelcomeMessageID]       INT      CONSTRAINT [DF_WelcomeMessageDetail_WelcomeMessageID] DEFAULT ((0)) NOT NULL,
    [UserID]                 INT      CONSTRAINT [DF_WelcomeMessageDetail_UserID] DEFAULT ((0)) NOT NULL,
    [DisplayMessageDisabled] BIT      CONSTRAINT [DF_WelcomeMessageDetail_DisplayMessageDisabled] DEFAULT ((0)) NOT NULL,
    [DateFirstViewed]        DATETIME CONSTRAINT [DF_WelcomeMessageDetail_DateFirstViewed] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ModifiedBy]             INT      CONSTRAINT [DF_WelcomeMessageDetail_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]             DATETIME CONSTRAINT [DF_WelcomeMessageDetail_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WelcomeMessageDetail1] PRIMARY KEY CLUSTERED ([WelcomeMessageDetailID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WelcomeMessageDetail])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WelcomeMessageDetail] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WelcomeMessageDetail] ([WelcomeMessageDetailID], [WelcomeMessageID], [UserID], [DisplayMessageDisabled], [DateFirstViewed], [ModifiedBy], [ModifiedOn])
        SELECT   [WelcomeMessageDetailID],
                 [WelcomeMessageID],
                 [UserID],
                 [DisplayMessageDisabled],
                 [DateFirstViewed],
                 [ModifiedBy],
                 [ModifiedOn]
        FROM     [dbo].[WelcomeMessageDetail]
        ORDER BY [WelcomeMessageDetailID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WelcomeMessageDetail] OFF;
    END

DROP TABLE [dbo].[WelcomeMessageDetail];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WelcomeMessageDetail]', N'WelcomeMessageDetail';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WelcomeMessageDetail1]', N'PK_WelcomeMessageDetail', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[WelcomeMessageDetail]([UserID] ASC, [WelcomeMessageID] ASC);


GO
PRINT N'Starting rebuilding table [dbo].[Workday_UserInfo]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Workday_UserInfo] (
    [UserID]    INT           IDENTITY (1, 1) NOT NULL,
    [WorkShift] VARCHAR (MAX) DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_Workday_UserInfo_UserID1] PRIMARY KEY CLUSTERED ([UserID] ASC) WITH (FILLFACTOR = 90)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Workday_UserInfo])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Workday_UserInfo] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Workday_UserInfo] ([UserID], [WorkShift])
        SELECT   [UserID],
                 [WorkShift]
        FROM     [dbo].[Workday_UserInfo]
        ORDER BY [UserID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Workday_UserInfo] OFF;
    END

DROP TABLE [dbo].[Workday_UserInfo];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Workday_UserInfo]', N'Workday_UserInfo';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_Workday_UserInfo_UserID1]', N'PK_Workday_UserInfo_UserID', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[WorkdayErrorLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WorkdayErrorLog] (
    [WorkdayErrorLogID] INT           IDENTITY (1, 1) NOT NULL,
    [ComponentName]     VARCHAR (100) NOT NULL,
    [LineNumber]        INT           NOT NULL,
    [ErrorMessage]      VARCHAR (MAX) NULL,
    [ErrorDateTime]     DATETIME      NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WorkdayErrorLog])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WorkdayErrorLog] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WorkdayErrorLog] ([WorkdayErrorLogID], [ComponentName], [LineNumber], [ErrorMessage], [ErrorDateTime])
        SELECT [WorkdayErrorLogID],
               [ComponentName],
               [LineNumber],
               [ErrorMessage],
               [ErrorDateTime]
        FROM   [dbo].[WorkdayErrorLog];
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WorkdayErrorLog] OFF;
    END

DROP TABLE [dbo].[WorkdayErrorLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WorkdayErrorLog]', N'WorkdayErrorLog';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[WorkdayIntegration]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WorkdayIntegration] (
    [ID]                       INT            IDENTITY (1, 1) NOT NULL,
    [HumanResourcesURL]        NVARCHAR (150) CONSTRAINT [DF_WorkdayIntegration_HumanResourcesURL] DEFAULT ('') NOT NULL,
    [PayrollURL]               NVARCHAR (150) CONSTRAINT [DF_WorkdayIntegration_PayrollURL] DEFAULT ('') NOT NULL,
    [AbsenceManagementURL]     NVARCHAR (150) CONSTRAINT [DF_WorkdayIntegration_AbsenceManagementURL] DEFAULT ('') NOT NULL,
    [Tenant]                   NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_Tenant] DEFAULT ('') NOT NULL,
    [UserName]                 NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_Username] DEFAULT ('') NOT NULL,
    [Password]                 NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_Password] DEFAULT ('') NOT NULL,
    [ModifiedBy]               INT            CONSTRAINT [DF_WorkdayIntegration_ModifiedBy] DEFAULT ((0)) NOT NULL,
    [ModifiedOn]               DATETIME       CONSTRAINT [DF_WorkdayIntegration_ModifiedOn] DEFAULT (((1) / (1)) / (1900)) NOT NULL,
    [ImportSalariedPayRate]    BIT            CONSTRAINT [DF_WorkdayIntegration_ImportPayRate] DEFAULT ((0)) NOT NULL,
    [ExcludeContingentWorkers] BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeContingentWorkers] DEFAULT ((0)) NOT NULL,
    [NotificationEmail]        NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_NotificationEmail] DEFAULT ('') NOT NULL,
    [BadgeNumberSelection]     NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_BadgeNumberSelection] DEFAULT ('') NOT NULL,
    [UserLoginSelection]       NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_UserLoginSelection] DEFAULT ('') NOT NULL,
    [PasswordSelection]        NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_PasswordSelection] DEFAULT ('') NOT NULL,
    [EmailSource]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_EmailSource] DEFAULT ('') NOT NULL,
    [PayrollPolicySelection]   NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_PayrollPolicySelection] DEFAULT ('') NOT NULL,
    [TimeOffPolicySelection]   NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_TimeOffPolicySelection] DEFAULT ('') NOT NULL,
    [FATSelection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_FATSelection] DEFAULT ('') NOT NULL,
    [MgrFATEnabled]            BIT            CONSTRAINT [DF_WorkdayIntegration_UseManagerForFAT] DEFAULT ((0)) NOT NULL,
    [EmpGroupSelection]        NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_EmployeeGroupSelection] DEFAULT ('') NOT NULL,
    [ShiftDiffPolicySelection] NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_ShiftDiffPolicySelection] DEFAULT ('') NOT NULL,
    [IPAccessPolicySelection]  NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_IPAccessPolicySelection] DEFAULT ('') NOT NULL,
    [BadgeNumberMapping]       NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_BadgeNumberMapping] DEFAULT ('') NOT NULL,
    [UserLoginMapping]         NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_UserLoginMapping] DEFAULT ('') NOT NULL,
    [PasswordMapping]          NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_PasswordMapping] DEFAULT ('') NOT NULL,
    [PayrollPolicyMapping]     NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_PayrollPolicyMapping] DEFAULT ('') NOT NULL,
    [TimeOffPolicyMapping]     NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_TimeOffPolicyMapping] DEFAULT ('') NOT NULL,
    [FATMapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_FATMapping] DEFAULT ('') NOT NULL,
    [EmpGroupMapping]          NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_EmpGroupMapping] DEFAULT ('') NOT NULL,
    [MgrFAT]                   NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_ManagerFATMapping] DEFAULT ('') NOT NULL,
    [ShiftDiffPolicyMapping]   NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_ShiftDiffPolicyMapping] DEFAULT ('') NOT NULL,
    [IPAccessPolicyMapping]    NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_IPAccessPolicyMapping] DEFAULT ('') NOT NULL,
    [LL1Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL1Selection] DEFAULT ('') NOT NULL,
    [LL2Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL2Selection] DEFAULT ('') NOT NULL,
    [LL3Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL3Selection] DEFAULT ('') NOT NULL,
    [LL4Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL4Selection] DEFAULT ('') NOT NULL,
    [LL5Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL5Selection] DEFAULT ('') NOT NULL,
    [LL6Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL6Selection] DEFAULT ('') NOT NULL,
    [LL7Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL7Selection] DEFAULT ('') NOT NULL,
    [LL8Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL8Selection] DEFAULT ('') NOT NULL,
    [LL9Selection]             NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL9Selection] DEFAULT ('') NOT NULL,
    [LL10Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL10Selection] DEFAULT ('') NOT NULL,
    [LL11Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL11Selection] DEFAULT ('') NOT NULL,
    [LL12Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL12Selection] DEFAULT ('') NOT NULL,
    [LL13Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL13Selection] DEFAULT ('') NOT NULL,
    [LL14Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL14Selection] DEFAULT ('') NOT NULL,
    [LL15Selection]            NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_LL15Selection] DEFAULT ('') NOT NULL,
    [LL1Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL1Mapping] DEFAULT ('') NOT NULL,
    [LL2Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL2Mapping] DEFAULT ('') NOT NULL,
    [LL3Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL3Mapping] DEFAULT ('') NOT NULL,
    [LL4Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL4Mapping] DEFAULT ('') NOT NULL,
    [LL5Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL5Mapping] DEFAULT ('') NOT NULL,
    [LL6Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL6Mapping] DEFAULT ('') NOT NULL,
    [LL7Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL7Mapping] DEFAULT ('') NOT NULL,
    [LL8Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL8Mapping] DEFAULT ('') NOT NULL,
    [LL9Mapping]               NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL9Mapping] DEFAULT ('') NOT NULL,
    [LL10Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL10Mapping] DEFAULT ('') NOT NULL,
    [LL11Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL11Mapping] DEFAULT ('') NOT NULL,
    [LL12Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL12Mapping] DEFAULT ('') NOT NULL,
    [LL13Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL13Mapping] DEFAULT ('') NOT NULL,
    [LL14Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL14Mapping] DEFAULT ('') NOT NULL,
    [LL15Mapping]              NVARCHAR (50)  CONSTRAINT [DF_WorkdayIntegration_LL15Mapping] DEFAULT ('') NOT NULL,
    [FilterOrganizationType01] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType01] DEFAULT ('') NOT NULL,
    [FilterOrganizationType02] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType02] DEFAULT ('') NOT NULL,
    [FilterOrganizationType03] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType03] DEFAULT ('') NOT NULL,
    [FilterOrganizationType04] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType04] DEFAULT ('') NOT NULL,
    [FilterOrganizationType05] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType05] DEFAULT ('') NOT NULL,
    [FilterOrganizationType06] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType06] DEFAULT ('') NOT NULL,
    [FilterOrganizationType07] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType07] DEFAULT ('') NOT NULL,
    [FilterOrganizationType08] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType08] DEFAULT ('') NOT NULL,
    [FilterOrganizationType09] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType09] DEFAULT ('') NOT NULL,
    [FilterOrganizationType10] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType10] DEFAULT ('') NOT NULL,
    [FilterOrganizationType11] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType11] DEFAULT ('') NOT NULL,
    [FilterOrganizationType12] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType12] DEFAULT ('') NOT NULL,
    [FilterOrganizationType13] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType13] DEFAULT ('') NOT NULL,
    [FilterOrganizationType14] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType14] DEFAULT ('') NOT NULL,
    [FilterOrganizationType15] NVARCHAR (255) CONSTRAINT [DF_WorkdayIntegration_FilterOrganizationType15] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID01]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID01] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID02]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID02] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID03]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID03] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID04]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID04] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID05]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID05] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID06]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID06] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID07]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID07] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID08]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID08] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID09]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID09] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID10]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID10] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID11]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID11] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID12]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID12] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID13]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID13] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID14]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID14] DEFAULT ('') NOT NULL,
    [FilterOrganization_ID15]  NVARCHAR (MAX) CONSTRAINT [DF_WorkdayIntegration_FilterOrganization_ID15] DEFAULT ('') NOT NULL,
    [employeeFilterSelection]  INT            CONSTRAINT [DF_WorkdayIntegration_IncludeUSEmpOnly] DEFAULT ((0)) NOT NULL,
    [ExcludeStreet]            BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeStreet] DEFAULT ((0)) NOT NULL,
    [ExcludeCity]              BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeCity] DEFAULT ((0)) NOT NULL,
    [ExcludeState]             BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeState] DEFAULT ((0)) NOT NULL,
    [ExcludeZip]               BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeZip] DEFAULT ((0)) NOT NULL,
    [ExcludePhone1]            BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludePhone1] DEFAULT ((0)) NOT NULL,
    [ExcludeTitle]             BIT            CONSTRAINT [DF_WorkdayIntegration_ExcludeTitle] DEFAULT ((0)) NOT NULL,
    [IncludeOrganizationIDs]   BIT            CONSTRAINT [DF_WorkdayIntegration_IncludeOrgaizationIDs] DEFAULT ((0)) NOT NULL,
    [ImportHourlyPayRate]      BIT            CONSTRAINT [DF_WorkdayIntegration_ImportHourlyPayRate] DEFAULT ((0)) NOT NULL,
    [AccrualStartDate]         NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_AccrualStartDate] DEFAULT ('') NOT NULL,
    [AutoEmpGroupEnabled]      BIT            CONSTRAINT [DF_WorkdayIntegration_AutoEmpGroupEnabled] DEFAULT ((0)) NOT NULL,
    [EmployeeStartDate]        NVARCHAR (100) CONSTRAINT [DF_WorkdayIntegration_EmployeeStartDate] DEFAULT ('') NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WorkdayIntegration1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WorkdayIntegration])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WorkdayIntegration] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WorkdayIntegration] ([ID], [HumanResourcesURL], [PayrollURL], [AbsenceManagementURL], [Tenant], [UserName], [Password], [ModifiedBy], [ModifiedOn], [ImportSalariedPayRate], [ExcludeContingentWorkers], [NotificationEmail], [BadgeNumberSelection], [UserLoginSelection], [PasswordSelection], [EmailSource], [PayrollPolicySelection], [TimeOffPolicySelection], [FATSelection], [MgrFATEnabled], [EmpGroupSelection], [ShiftDiffPolicySelection], [IPAccessPolicySelection], [BadgeNumberMapping], [UserLoginMapping], [PasswordMapping], [PayrollPolicyMapping], [TimeOffPolicyMapping], [FATMapping], [EmpGroupMapping], [MgrFAT], [ShiftDiffPolicyMapping], [IPAccessPolicyMapping], [LL1Selection], [LL2Selection], [LL3Selection], [LL4Selection], [LL5Selection], [LL6Selection], [LL7Selection], [LL8Selection], [LL9Selection], [LL10Selection], [LL11Selection], [LL12Selection], [LL13Selection], [LL14Selection], [LL15Selection], [LL1Mapping], [LL2Mapping], [LL3Mapping], [LL4Mapping], [LL5Mapping], [LL6Mapping], [LL7Mapping], [LL8Mapping], [LL9Mapping], [LL10Mapping], [LL11Mapping], [LL12Mapping], [LL13Mapping], [LL14Mapping], [LL15Mapping], [FilterOrganizationType01], [FilterOrganizationType02], [FilterOrganizationType03], [FilterOrganizationType04], [FilterOrganizationType05], [FilterOrganizationType06], [FilterOrganizationType07], [FilterOrganizationType08], [FilterOrganizationType09], [FilterOrganizationType10], [FilterOrganizationType11], [FilterOrganizationType12], [FilterOrganizationType13], [FilterOrganizationType14], [FilterOrganizationType15], [FilterOrganization_ID01], [FilterOrganization_ID02], [FilterOrganization_ID03], [FilterOrganization_ID04], [FilterOrganization_ID05], [FilterOrganization_ID06], [FilterOrganization_ID07], [FilterOrganization_ID08], [FilterOrganization_ID09], [FilterOrganization_ID10], [FilterOrganization_ID11], [FilterOrganization_ID12], [FilterOrganization_ID13], [FilterOrganization_ID14], [FilterOrganization_ID15], [employeeFilterSelection], [ExcludeStreet], [ExcludeCity], [ExcludeState], [ExcludeZip], [ExcludePhone1], [ExcludeTitle], [IncludeOrganizationIDs], [ImportHourlyPayRate], [AccrualStartDate], [AutoEmpGroupEnabled], [EmployeeStartDate])
        SELECT   [ID],
                 [HumanResourcesURL],
                 [PayrollURL],
                 [AbsenceManagementURL],
                 [Tenant],
                 [UserName],
                 [Password],
                 [ModifiedBy],
                 [ModifiedOn],
                 [ImportSalariedPayRate],
                 [ExcludeContingentWorkers],
                 [NotificationEmail],
                 [BadgeNumberSelection],
                 [UserLoginSelection],
                 [PasswordSelection],
                 [EmailSource],
                 [PayrollPolicySelection],
                 [TimeOffPolicySelection],
                 [FATSelection],
                 [MgrFATEnabled],
                 [EmpGroupSelection],
                 [ShiftDiffPolicySelection],
                 [IPAccessPolicySelection],
                 [BadgeNumberMapping],
                 [UserLoginMapping],
                 [PasswordMapping],
                 [PayrollPolicyMapping],
                 [TimeOffPolicyMapping],
                 [FATMapping],
                 [EmpGroupMapping],
                 [MgrFAT],
                 [ShiftDiffPolicyMapping],
                 [IPAccessPolicyMapping],
                 [LL1Selection],
                 [LL2Selection],
                 [LL3Selection],
                 [LL4Selection],
                 [LL5Selection],
                 [LL6Selection],
                 [LL7Selection],
                 [LL8Selection],
                 [LL9Selection],
                 [LL10Selection],
                 [LL11Selection],
                 [LL12Selection],
                 [LL13Selection],
                 [LL14Selection],
                 [LL15Selection],
                 [LL1Mapping],
                 [LL2Mapping],
                 [LL3Mapping],
                 [LL4Mapping],
                 [LL5Mapping],
                 [LL6Mapping],
                 [LL7Mapping],
                 [LL8Mapping],
                 [LL9Mapping],
                 [LL10Mapping],
                 [LL11Mapping],
                 [LL12Mapping],
                 [LL13Mapping],
                 [LL14Mapping],
                 [LL15Mapping],
                 [FilterOrganizationType01],
                 [FilterOrganizationType02],
                 [FilterOrganizationType03],
                 [FilterOrganizationType04],
                 [FilterOrganizationType05],
                 [FilterOrganizationType06],
                 [FilterOrganizationType07],
                 [FilterOrganizationType08],
                 [FilterOrganizationType09],
                 [FilterOrganizationType10],
                 [FilterOrganizationType11],
                 [FilterOrganizationType12],
                 [FilterOrganizationType13],
                 [FilterOrganizationType14],
                 [FilterOrganizationType15],
                 [FilterOrganization_ID01],
                 [FilterOrganization_ID02],
                 [FilterOrganization_ID03],
                 [FilterOrganization_ID04],
                 [FilterOrganization_ID05],
                 [FilterOrganization_ID06],
                 [FilterOrganization_ID07],
                 [FilterOrganization_ID08],
                 [FilterOrganization_ID09],
                 [FilterOrganization_ID10],
                 [FilterOrganization_ID11],
                 [FilterOrganization_ID12],
                 [FilterOrganization_ID13],
                 [FilterOrganization_ID14],
                 [FilterOrganization_ID15],
                 [employeeFilterSelection],
                 [ExcludeStreet],
                 [ExcludeCity],
                 [ExcludeState],
                 [ExcludeZip],
                 [ExcludePhone1],
                 [ExcludeTitle],
                 [IncludeOrganizationIDs],
                 [ImportHourlyPayRate],
                 [AccrualStartDate],
                 [AutoEmpGroupEnabled],
                 [EmployeeStartDate]
        FROM     [dbo].[WorkdayIntegration]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WorkdayIntegration] OFF;
    END

DROP TABLE [dbo].[WorkdayIntegration];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WorkdayIntegration]', N'WorkdayIntegration';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WorkdayIntegration1]', N'PK_WorkdayIntegration', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[WSLog]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_WSLog] (
    [ID]               INT           IDENTITY (1, 1) NOT NULL,
    [LogEntryDateTime] DATETIME      CONSTRAINT [DF_WSLog_LogEntryDateTime] DEFAULT (((1900) / (1)) / (1)) NOT NULL,
    [LogMessage]       VARCHAR (MAX) CONSTRAINT [DF_WSLog_LogMessage] DEFAULT (' ') NOT NULL,
    [LogType]          INT           CONSTRAINT [DF_WSLog_LogType] DEFAULT (' ') NOT NULL,
    [ErrorLogID]       INT           CONSTRAINT [DF_WSLog_ErrorLogID] DEFAULT ((0)) NOT NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_WSLog1] PRIMARY KEY CLUSTERED ([ID] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[WSLog])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WSLog] ON;
        INSERT INTO [dbo].[tmp_ms_xx_WSLog] ([ID], [LogEntryDateTime], [LogMessage], [LogType], [ErrorLogID])
        SELECT   [ID],
                 [LogEntryDateTime],
                 [LogMessage],
                 [LogType],
                 [ErrorLogID]
        FROM     [dbo].[WSLog]
        ORDER BY [ID] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_WSLog] OFF;
    END

DROP TABLE [dbo].[WSLog];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_WSLog]', N'WSLog';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_WSLog1]', N'PK_WSLog', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[WSLog].[IX_Main]...';


GO
CREATE NONCLUSTERED INDEX [IX_Main]
    ON [dbo].[WSLog]([LogEntryDateTime] DESC);


GO
PRINT N'Starting rebuilding table [dbo].[ZipCode]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_ZipCode] (
    [ZipCode]  CHAR (10)      NOT NULL,
    [TimeZone] VARCHAR (16)   NOT NULL,
    [UTC]      DECIMAL (3, 1) NOT NULL,
    [DST]      CHAR (1)       NOT NULL
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[ZipCode])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_ZipCode] ([ZipCode], [TimeZone], [UTC], [DST])
        SELECT [ZipCode],
               [TimeZone],
               [UTC],
               [DST]
        FROM   [dbo].[ZipCode];
    END

DROP TABLE [dbo].[ZipCode];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_ZipCode]', N'ZipCode';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[ShiftDiffPayroll]...';


GO
CREATE TABLE [dbo].[ShiftDiffPayroll] (
    [ID]                 INT            IDENTITY (1, 1) NOT NULL,
    [ShiftDiffPayrollID] INT            NOT NULL,
    [ShiftDiffName]      NVARCHAR (200) NOT NULL,
    [StartDateTime]      DATETIME       NOT NULL,
    [EndDateTime]        DATETIME       NOT NULL,
    [PayFactor]          DECIMAL (7, 4) NOT NULL,
    [AdditionalWage]     MONEY          NOT NULL,
    [PayrollUniqueID]    BIGINT         NOT NULL,
    [ModifiedBy]         INT            NOT NULL,
    [ModifiedOn]         DATETIME       NOT NULL,
    CONSTRAINT [PK_ShiftDiffPayroll] PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[UserInfoAdditionalRate]...';


GO
CREATE TABLE [dbo].[UserInfoAdditionalRate] (
    [UserInfoAdditionalRateID] INT             IDENTITY (1, 1) NOT NULL,
    [Rate]                     VARCHAR (10)    NOT NULL,
    [UserID]                   INT             NOT NULL,
    [DefaultRate]              BIT             NOT NULL,
    [RateAmount]               DECIMAL (10, 4) NOT NULL,
    [StartDateTime]            DATETIME        NOT NULL,
    [EndDateTime]              DATETIME        NOT NULL,
    [ModifiedBy]               INT             NOT NULL,
    [ModifiedOn]               DATETIME        NOT NULL,
    PRIMARY KEY CLUSTERED ([UserInfoAdditionalRateID] ASC)
);


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_PayrollUniqueID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_PayrollUniqueID] DEFAULT ((0)) FOR [PayrollUniqueID];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_ShiftDiffPayrollID]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_ShiftDiffPayrollID] DEFAULT ((0)) FOR [ShiftDiffPayrollID];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_StartDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_StartDateTime] DEFAULT (((1)/(1))/(1900)) FOR [StartDateTime];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_EndDateTime]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_EndDateTime] DEFAULT (((1)/(1))/(1900)) FOR [EndDateTime];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_ModifiedOn]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_ModifiedOn] DEFAULT (((1)/(1))/(1900)) FOR [ModifiedOn];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_PayFactor]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_PayFactor] DEFAULT ((0)) FOR [PayFactor];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_ShiftDiffName]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_ShiftDiffName] DEFAULT ('') FOR [ShiftDiffName];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_AdditionalWage]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_AdditionalWage] DEFAULT ((0)) FOR [AdditionalWage];


GO
PRINT N'Creating [dbo].[DF_ShiftDiffPayroll_ModifiedBy]...';


GO
ALTER TABLE [dbo].[ShiftDiffPayroll]
    ADD CONSTRAINT [DF_ShiftDiffPayroll_ModifiedBy] DEFAULT ((0)) FOR [ModifiedBy];


GO
PRINT N'Creating [dbo].[DF_Rate]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_Rate] DEFAULT ('') FOR [Rate];


GO
PRINT N'Creating [dbo].[DF_UserInfoID]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_UserInfoID] DEFAULT ((0)) FOR [UserID];


GO
PRINT N'Creating [dbo].[DF_UserInfoAdditionalRate_ModifiedBy]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_UserInfoAdditionalRate_ModifiedBy] DEFAULT ((0)) FOR [ModifiedBy];


GO
PRINT N'Creating [dbo].[DF_UserInfoAdditionalRate_ModifiedOn]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_UserInfoAdditionalRate_ModifiedOn] DEFAULT (((1)/(1))/(1900)) FOR [ModifiedOn];


GO
PRINT N'Creating [dbo].[DF_StartDate]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_StartDate] DEFAULT ('1/1/1900') FOR [StartDateTime];


GO
PRINT N'Creating [dbo].[DF_RateAmount]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_RateAmount] DEFAULT ((0)) FOR [RateAmount];


GO
PRINT N'Creating [dbo].[DF_EndDate]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_EndDate] DEFAULT ('1/1/1900') FOR [EndDateTime];


GO
PRINT N'Creating [dbo].[DF_DefaultRate]...';


GO
ALTER TABLE [dbo].[UserInfoAdditionalRate]
    ADD CONSTRAINT [DF_DefaultRate] DEFAULT ((0)) FOR [DefaultRate];


GO
PRINT N'Creating [dbo].[ACAPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Table contains entries of ACA Policy details', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy';


GO
PRINT N'Creating [dbo].[ACAPolicy].[InitialAdminPeriodEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the Initial Administarative Period is enabled or not.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'InitialAdminPeriodEnabled';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StandardStartDateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds value of StandardStartDateTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StandardStartDateType';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ACAPolicy].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StandardDurationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds value of StandardDurationTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StandardDurationType';


GO
PRINT N'Creating [dbo].[ACAPolicy].[WeeklyThresholdSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds weekly threshold in terms of seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'WeeklyThresholdSecs';


GO
PRINT N'Creating [dbo].[ACAPolicy].[CustomDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds custom date time for standard measurement period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'CustomDate';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StandardDuration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds duration in terms months or days for standard measurement period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StandardDuration';


GO
PRINT N'Creating [dbo].[ACAPolicy].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ACAPolicy].[InitialStartDateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds value of InitialStartDateTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'InitialStartDateType';


GO
PRINT N'Creating [dbo].[ACAPolicy].[ACAPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds ACA Policy name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'ACAPolicyName';


GO
PRINT N'Creating [dbo].[ACAPolicy].[InitialAdminPeriodDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds Initial administrative period in terms of days', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'InitialAdminPeriodDays';


GO
PRINT N'Creating [dbo].[ACAPolicy].[InitialDurationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds value of InitialDurationTypes ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'InitialDurationType';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StandardAdminPeriodEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the Standard Administarative Period is enabled or not.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StandardAdminPeriodEnabled';


GO
PRINT N'Creating [dbo].[ACAPolicy].[WarnScheduleEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to warn or not, when schedule exceeds the avarage weekly or monthly threshould', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'WarnScheduleEnabled';


GO
PRINT N'Creating [dbo].[ACAPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ACAPolicy].[StandardAdminPeriodDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds Initial administrative period in terms of days', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'StandardAdminPeriodDays';


GO
PRINT N'Creating [dbo].[ACAPolicy].[ACAPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'ACAPolicyID';


GO
PRINT N'Creating [dbo].[ACAPolicy].[MonthlyThresholdSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds monthly threshold in terms of seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'MonthlyThresholdSecs';


GO
PRINT N'Creating [dbo].[ACAPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[ACAPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ACAPolicy].[InitialDuration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds duration in terms months or days for initial measurement period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicy', @level2type = N'COLUMN', @level2name = N'InitialDuration';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[ACAPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'ACAPolicyAssignID';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N' Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[ACAPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ACA Policy reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'ACAPolicyID';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ACAPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ACAPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the messages that are displayed in the Actions Icon on Employee Home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[ActionsIconMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage', @level2type = N'COLUMN', @level2name = N'ActionsIconMessageID';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[MessageLine1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'First line in the message that is displayed on employee home screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage', @level2type = N'COLUMN', @level2name = N'MessageLine1';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[MessageLine2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Second line in the message that is displayed on employee home screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage', @level2type = N'COLUMN', @level2name = N'MessageLine2';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ActionsIconMessage].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ActionsIconMessage', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Alert].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the settings that determine how the alert message are processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert';


GO
PRINT N'Creating [dbo].[Alert].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[Alert].[AlertID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'AlertID';


GO
PRINT N'Creating [dbo].[Alert].[AlertPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'AlertPolicyID of the alert policy under which this alert is defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'AlertPolicyID';


GO
PRINT N'Creating [dbo].[Alert].[AlertName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'AlertName';


GO
PRINT N'Creating [dbo].[Alert].[AlertType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the type of the alert defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'AlertType';


GO
PRINT N'Creating [dbo].[Alert].[ParameterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of time parameter in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ParameterSecs';


GO
PRINT N'Creating [dbo].[Alert].[ParameterType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of type parameter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ParameterType';


GO
PRINT N'Creating [dbo].[Alert].[ParameterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of the additional parameter for identity / entity values (ex: CustomFieldID)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ParameterID';


GO
PRINT N'Creating [dbo].[Alert].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[Alert].[IsPromptEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether generated alert message should be prompt or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'IsPromptEnabled';


GO
PRINT N'Creating [dbo].[Alert].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[Alert].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[Alert].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Alert].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Alert', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AlertAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Alert Assign determines to whom the Alert is assigned to for a defined date range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign';


GO
PRINT N'Creating [dbo].[AlertAssign].[AlertAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'AlertAssignID';


GO
PRINT N'Creating [dbo].[AlertAssign].[AlertID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'AlertID of the selected alert for this subscription', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'AlertID';


GO
PRINT N'Creating [dbo].[AlertAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the manager for this alert subscription', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[AlertAssign].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[AlertAssign].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[AlertAssign].[UserFilterType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determine the filter type (User Groups or Individuals) used for the selection of users', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'UserFilterType';


GO
PRINT N'Creating [dbo].[AlertAssign].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PreferenceID of the preference policy under which this alert is defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[AlertAssign].[ReferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"When the manager overrides an alert assignment from his preference policy, this field stores AlertAssingID of alert assignment that is being overrided."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'ReferenceID';


GO
PRINT N'Creating [dbo].[AlertAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AlertAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the users for whom the alert has to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[AlertAssignUserFilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'AlertAssignUserFilterID';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[AlertAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'AlertAssignID of alert assignment for which this selection is made', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'AlertAssignID';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserGroupID of user group selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[UserGroupType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines type of user group selected (whether it is user defined or predefined user group like All Employees, Managed Employees, etc)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'UserGroupType';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AlertAssignUserFilter].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertAssignUserFilter', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[AlertMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines information of the alert message generated for a person and the settings necessary for generatoin of message for UI', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage';


GO
PRINT N'Creating [dbo].[AlertMessage].[AlertMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'AlertMessageID';


GO
PRINT N'Creating [dbo].[AlertMessage].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of the person of whom the alert is generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[AlertMessage].[AlertType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the Alert for which message is generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'AlertType';


GO
PRINT N'Creating [dbo].[AlertMessage].[ParameterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of time parameter in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'ParameterSecs';


GO
PRINT N'Creating [dbo].[AlertMessage].[ParameterType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of type parameter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'ParameterType';


GO
PRINT N'Creating [dbo].[AlertMessage].[ParameterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores value of the additional parameter for identity / entity values (ex: CustomFieldID)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'ParameterID';


GO
PRINT N'Creating [dbo].[AlertMessage].[IsPromptEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether prompt alert message to the user or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'IsPromptEnabled';


GO
PRINT N'Creating [dbo].[AlertMessage].[MessageData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Field holds information in json format, i.e. information needed to generated message within UI"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'MessageData';


GO
PRINT N'Creating [dbo].[AlertMessage].[GeneratedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'When the message was generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'GeneratedOn';


GO
PRINT N'Creating [dbo].[AlertMessage].[HashKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Unique identifier, used to identify a message for particular setttings of that alert type. Field is used for purpose of avoiding duplicate message for smae settings."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'HashKey';


GO
PRINT N'Creating [dbo].[AlertMessage].[AlertName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of alert for which the alert was generated.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'AlertName';


GO
PRINT N'Creating [dbo].[AlertMessage].[TimeSlicePostExceptionDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference ID to TimeSlicePostExceptionDetail table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessage', @level2type = N'COLUMN', @level2name = N'TimeSlicePostExceptionDetailID';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the managers who can view the alert messages generated and settings neccessary to prompt the alert message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[AlertMessageDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'AlertMessageDetailID';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[MgrUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of the manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'MgrUserID';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[AlertMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s ""AlertMessageID"" field within ""AlertMessage"" table"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'AlertMessageID';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AlertMessageDetail].[IsPromptDisabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the alert should be prompted immediately based on settings within alert and if manager has not already seen the message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertMessageDetail', @level2type = N'COLUMN', @level2name = N'IsPromptDisabled';


GO
PRINT N'Creating [dbo].[AlertPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cotains alert policy entries', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy';


GO
PRINT N'Creating [dbo].[AlertPolicy].[AlertPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'AlertPolicyID';


GO
PRINT N'Creating [dbo].[AlertPolicy].[AlertPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'AlertPolicyName';


GO
PRINT N'Creating [dbo].[AlertPolicy].[IsDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether it is a default policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'IsDefault';


GO
PRINT N'Creating [dbo].[AlertPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[AlertPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AlertPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains user assignment of alert policies', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[AlertPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'AlertPolicyAssignID';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person to whom this policy is assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[AlertPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'AlertPolicyID of the alert policy that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'AlertPolicyID';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[AlertPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AlertPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[AuditTrail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains information regarding audit data of add/update/delete operations of entities', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail';


GO
PRINT N'Creating [dbo].[AuditTrail].[AuditTrailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'AuditTrailID';


GO
PRINT N'Creating [dbo].[AuditTrail].[ActionByUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person who performed the action', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ActionByUserID';


GO
PRINT N'Creating [dbo].[AuditTrail].[ClassName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fully Qualified Name of the entity C# class', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ClassName';


GO
PRINT N'Creating [dbo].[AuditTrail].[ActionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of Action i.e. Add/Update/Delete', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ActionType';


GO
PRINT N'Creating [dbo].[AuditTrail].[ActionDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Datetime when action was performed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ActionDateTime';


GO
PRINT N'Creating [dbo].[AuditTrail].[IdentityID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unqiue Identifier of the item being Added/Updated/Deleted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'IdentityID';


GO
PRINT N'Creating [dbo].[AuditTrail].[EntityID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'EntityID';


GO
PRINT N'Creating [dbo].[AuditTrail].[EntityName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"User specified name of the entity, example- Pay Type Name in case of pay types"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'EntityName';


GO
PRINT N'Creating [dbo].[AuditTrail].[ChangesMadeToUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of the person whose data is being changed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ChangesMadeToUserID';


GO
PRINT N'Creating [dbo].[AuditTrail].[CustomerSiteAccessLogID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If the session was created by a brandmanager this points to the site access log', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'CustomerSiteAccessLogID';


GO
PRINT N'Creating [dbo].[AuditTrail].[ActionSourceType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Source type through which the action is performed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'ActionSourceType';


GO
PRINT N'Creating [dbo].[AuditTrail].[TransactionDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Datetime of the punch which is being added/modified/deleted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'TransactionDateTime';


GO
PRINT N'Creating [dbo].[AuditTrail].[AuditData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Json format of the field and values pairs, the data info contains the previous and current values of the fields"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'AuditTrail', @level2type = N'COLUMN', @level2name = N'AuditData';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the inital fee applicable for the features, for a newly added customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[BillingInitialSetupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup', @level2type = N'COLUMN', @level2name = N'BillingInitialSetupID';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[FeatureName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Feature name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup', @level2type = N'COLUMN', @level2name = N'FeatureName';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[FeatureFee].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fee for the feature', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup', @level2type = N'COLUMN', @level2name = N'FeatureFee';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[BillingInitialSetup].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingInitialSetup', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the calculated fee applicable for a particular month against a feature for this particular customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[BillingMonthlyDataID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'BillingMonthlyDataID';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[Month].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Month the data belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'Month';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[FeatureType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the feature(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'FeatureType';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[FeatureFee].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fee for the feature', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'FeatureFee';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[BilledEmployeeCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Employees using this feature', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'BilledEmployeeCount';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[BillingMonthlyData].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyData', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the fee appicable for a feature starting from a defined month', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[BillingMonthlyRateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'BillingMonthlyRateID';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[FromMonth].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rate starting month', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'FromMonth';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[FeatureType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the feature', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'FeatureType';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[FeatureFee].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rate for the feature', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'FeatureFee';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[BillingMonthlyRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingMonthlyRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[BillingTier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Deternines the rate for particular defined range of months', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingTier';


GO
PRINT N'Creating [dbo].[BillingTier].[BillingTierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingTier', @level2type = N'COLUMN', @level2name = N'BillingTierID';


GO
PRINT N'Creating [dbo].[BillingTier].[CountFrom].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Starting count', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingTier', @level2type = N'COLUMN', @level2name = N'CountFrom';


GO
PRINT N'Creating [dbo].[BillingTier].[CountTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Ending count', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingTier', @level2type = N'COLUMN', @level2name = N'CountTo';


GO
PRINT N'Creating [dbo].[BillingTier].[BaseRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Base PEPM rate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'BillingTier', @level2type = N'COLUMN', @level2name = N'BaseRate';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Call Bacll policy entitites, Call Back policy is a set of rules that determines how an employee is paid in a ''Call Back'' situation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[CallBackPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'CallBackPolicyID';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[CallBackPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'CallBackPolicyName';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicy].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicy', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains User Assignment to the Call Back Policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[CallBackPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'CallBackPolicyAssignID';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[CallBackPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to CallBackPolicy.CallBackPolicyID of the call back policy that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'CallBackPolicyID';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[EndDatetime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDatetime';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CallBackPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains dollar rule entities, that define settings that are used to add flat (or additional) dollar amount to the employee''s time card', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[CallBackPolicyDollarRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'CallBackPolicyDollarRuleID';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[CallBackPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to CallBackPolicy.CallBackPolicyID, the policy to which this rule belongs"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'CallBackPolicyID';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[WorkUptoSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the duration (in seconds) of work ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'WorkUptoSecs';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[PayAdjustmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'References PayAdjsutment.PayAdjsutmentID, defines the pay adjsutment against which a dollar amount is added to employee''s time card ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'PayAdjustmentID';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[Amount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the dollar amount', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'Amount';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicyDollarRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyDollarRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Time rule entities, that define the settings that are used to add time to the employee''s time card and will determine how the time is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[CallBackPolicyTimeRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'CallBackPolicyTimeRuleID';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[CallBackPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to CallBackPolicy.CallBackPolicyID, the policy to which this rule belongs"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'CallBackPolicyID';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[WorkUptoSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines duration (in seconds) of work', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'WorkUptoSecs';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[WorkPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s PayType.PayTypeID, defines the pay type using which the work time is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'WorkPayTypeID';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[NonWorkPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s PayType.PayTypeID, defines the pay type using which non-work time is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'NonWorkPayTypeID';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[MinPaidSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum duration(in seconds) to be paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'MinPaidSecs';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[AdditionalPaidSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Additional duration (in seconds) to be paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'AdditionalPaidSecs';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[CallBackPolicyTimeRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CallBackPolicyTimeRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[Chart].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the settings neccessary for generation of charts within manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart';


GO
PRINT N'Creating [dbo].[Chart].[ChartType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines type of this chart (Values: Pie Chart = 0, Stacked Column Chart = 1, Line Chart = 2)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ChartType';


GO
PRINT N'Creating [dbo].[Chart].[ChartDisplayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the display type of this chart (Values: Pay Type Hours by Labor Level = 0, Pay Type Hours by Employee = 1, Scheduled + Actual = 2, Scheduled vs Actual = 3)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ChartDisplayType';


GO
PRINT N'Creating [dbo].[Chart].[LL10Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL10Enabled';


GO
PRINT N'Creating [dbo].[Chart].[FromDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of the user defined date range (Used when Chart.IsDynamic is false)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'FromDate';


GO
PRINT N'Creating [dbo].[Chart].[RefPayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the payroll policy used for calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'RefPayrollPolicyID';


GO
PRINT N'Creating [dbo].[Chart].[LL1Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL1Enabled';


GO
PRINT N'Creating [dbo].[Chart].[DataLimitType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how to limit data (Values: Top = 0 and Bottom = 1)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'DataLimitType';


GO
PRINT N'Creating [dbo].[Chart].[DataLimitCountOnType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to limit data by counting employees or by taking percentage', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'DataLimitCountOnType';


GO
PRINT N'Creating [dbo].[Chart].[LL8Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL8Enabled';


GO
PRINT N'Creating [dbo].[Chart].[EmpFilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Filter.FilterID of the employee filter used', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'EmpFilterID';


GO
PRINT N'Creating [dbo].[Chart].[LL2Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL2Enabled';


GO
PRINT N'Creating [dbo].[Chart].[TotalDisplayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines range type against total hours are displayed (Values: Day, Week, Pay Period and Month)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'TotalDisplayType';


GO
PRINT N'Creating [dbo].[Chart].[DataLimitCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determins the count of top (or bottom) employees (or percentage) to be displayed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'DataLimitCount';


GO
PRINT N'Creating [dbo].[Chart].[IsPublic].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determins whether employees other than the owner of the chart can view this chart', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'IsPublic';


GO
PRINT N'Creating [dbo].[Chart].[LL15Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL15Enabled';


GO
PRINT N'Creating [dbo].[Chart].[LL4Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL4Enabled';


GO
PRINT N'Creating [dbo].[Chart].[LL5Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL5Enabled';


GO
PRINT N'Creating [dbo].[Chart].[EmpFilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Filtering conditions of the employee filter used (used when custom filter is applied)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'EmpFilterData';


GO
PRINT N'Creating [dbo].[Chart].[LastXDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Last X days to consider for calculation of hours when ""last x days"" has been chosen as date range type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LastXDays';


GO
PRINT N'Creating [dbo].[Chart].[LL7Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL7Enabled';


GO
PRINT N'Creating [dbo].[Chart].[LL6Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL6Enabled';


GO
PRINT N'Creating [dbo].[Chart].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Chart].[ChartName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ChartName';


GO
PRINT N'Creating [dbo].[Chart].[ShowOthersEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display the hours of others when employess are limited', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ShowOthersEnabled';


GO
PRINT N'Creating [dbo].[Chart].[IsDynamic].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the date range is dynamic or user defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'IsDynamic';


GO
PRINT N'Creating [dbo].[Chart].[LL11Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL11Enabled';


GO
PRINT N'Creating [dbo].[Chart].[LL9Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL9Enabled';


GO
PRINT N'Creating [dbo].[Chart].[DateRangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the type of date range incase dynamic option is selected (values: This Week, Last Week, This month, Last Month, This Pay Period, Last Pay Period, This Year, Last Year, Last X days)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'DateRangeType';


GO
PRINT N'Creating [dbo].[Chart].[OwnerUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the user who owns this chart', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'OwnerUserID';


GO
PRINT N'Creating [dbo].[Chart].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Chart].[LL12Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL12Enabled';


GO
PRINT N'Creating [dbo].[Chart].[LL3Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL3Enabled';


GO
PRINT N'Creating [dbo].[Chart].[ToDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of the user defined date range (Used when Chart.IsDynamic is false)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ToDate';


GO
PRINT N'Creating [dbo].[Chart].[LL14Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL14Enabled';


GO
PRINT N'Creating [dbo].[Chart].[ChartID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'ChartID';


GO
PRINT N'Creating [dbo].[Chart].[LL13Enabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include the labor level hours on the chart (Applicable only when hours are displayed by labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Chart', @level2type = N'COLUMN', @level2name = N'LL13Enabled';


GO
PRINT N'Creating [dbo].[ChartPayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the pay types for the chart, data with respect to these defined pay types will be used while generating the chart ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType';


GO
PRINT N'Creating [dbo].[ChartPayType].[ChartPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType', @level2type = N'COLUMN', @level2name = N'ChartPayTypeID';


GO
PRINT N'Creating [dbo].[ChartPayType].[ChartID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Chart.ChartID of the chart for which this pay type selction made', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType', @level2type = N'COLUMN', @level2name = N'ChartID';


GO
PRINT N'Creating [dbo].[ChartPayType].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayType.PayTypeID of the pay type selected (value 0 means all pay types are selected)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[ChartPayType].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ChartPayType].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ChartPayType', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CompTimePolicy].[RangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Range type which specifies whether user can see full week or fill pay period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CompTimePolicy', @level2type = N'COLUMN', @level2name = N'RangeType';


GO
PRINT N'Creating [dbo].[CustomField].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Custom Fiels enetities, Custom Fields track and report information that does not fit within a standard field.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField';


GO
PRINT N'Creating [dbo].[CustomField].[DefaultSelect].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Index of the default value for picklist custom fields', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'DefaultSelect';


GO
PRINT N'Creating [dbo].[CustomField].[DefaultString].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default value for text type custom fields', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'DefaultString';


GO
PRINT N'Creating [dbo].[CustomField].[CustomFieldName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of this custom field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'CustomFieldName';


GO
PRINT N'Creating [dbo].[CustomField].[IsRequired].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this field is required or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'IsRequired';


GO
PRINT N'Creating [dbo].[CustomField].[CustomFieldType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"enum, defines if this is a string, date, money, or numeric type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'CustomFieldType';


GO
PRINT N'Creating [dbo].[CustomField].[DefaultDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default value for datetype custom fields', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'DefaultDate';


GO
PRINT N'Creating [dbo].[CustomField].[CustomFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'CustomFieldID';


GO
PRINT N'Creating [dbo].[CustomField].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CustomField].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CustomField].[HasDefinedValues].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this field is a picklist or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'HasDefinedValues';


GO
PRINT N'Creating [dbo].[CustomField].[DefaultNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default value for numeric type custom fields', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'DefaultNumber';


GO
PRINT N'Creating [dbo].[CustomField].[DefaultMoney].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default value for money type custom fields', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomField', @level2type = N'COLUMN', @level2name = N'DefaultMoney';


GO
PRINT N'Creating [dbo].[CustomFieldData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains entities that defines value of a prticualr Custom Field for a perticualr person', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData';


GO
PRINT N'Creating [dbo].[CustomFieldData].[CustomFieldDataID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'CustomFieldDataID';


GO
PRINT N'Creating [dbo].[CustomFieldData].[CustomFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to CustomField.CustomFieldID, the field type of this field"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'CustomFieldID';


GO
PRINT N'Creating [dbo].[CustomFieldData].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to UserInfo.UserID, the user to whom this data belongs"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[CustomFieldData].[DataString].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'String data', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'DataString';


GO
PRINT N'Creating [dbo].[CustomFieldData].[DataDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date data', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'DataDate';


GO
PRINT N'Creating [dbo].[CustomFieldData].[DataMoney].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Money data', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'DataMoney';


GO
PRINT N'Creating [dbo].[CustomFieldData].[DataNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number data', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'DataNumber';


GO
PRINT N'Creating [dbo].[CustomFieldData].[DataSelect].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Picklist index', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'DataSelect';


GO
PRINT N'Creating [dbo].[CustomFieldData].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CustomFieldData].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldData', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the values to be displayed within pick list for a custom field of type pick list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[CustomFieldSelectID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'CustomFieldSelectID';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[CustomFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s CustomField.CustomFieldID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'CustomFieldID';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[CustomFieldType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Data type of the Custom Field i.e. Date/Number/String/Money', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'CustomFieldType';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[CustomFieldData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Value of the defined value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'CustomFieldData';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[CustomFieldOrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Position where the custom field value should appear within the picklist', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'CustomFieldOrdinalPosition';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[IsOptionSelectable].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this particualr value can be selected by user within picklist', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'IsOptionSelectable';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[CustomFieldSelect].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'CustomFieldSelect', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[DataFilter].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains  filter entities and its settings/rules based on which data will be filtered', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter';


GO
PRINT N'Creating [dbo].[DataFilter].[FilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'FilterID';


GO
PRINT N'Creating [dbo].[DataFilter].[FilterName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'FilterName';


GO
PRINT N'Creating [dbo].[DataFilter].[FilterType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the type of filter (Employee Filter = 0, Labor Level Filter = 1 and Employee Group Filter = 2)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'FilterType';


GO
PRINT N'Creating [dbo].[DataFilter].[IsPublic].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employees other than the one who created this can use this filter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'IsPublic';


GO
PRINT N'Creating [dbo].[DataFilter].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee who created this filter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[DataFilter].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[DataFilter].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[DataFilter].[FilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Filtering conditions chosen by the user (Stored in json format)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'DataFilter', @level2type = N'COLUMN', @level2name = N'FilterData';


GO
PRINT N'Creating [dbo].[ErrorCacheFingerprint].[Minutiae1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'First minutiae template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheFingerprint', @level2type = N'COLUMN', @level2name = N'Minutiae1';


GO
PRINT N'Creating [dbo].[ErrorCacheFingerprint].[Minutiae2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Second minutiate template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheFingerprint', @level2type = N'COLUMN', @level2name = N'Minutiae2';


GO
PRINT N'Creating [dbo].[ErrorCacheFingerprint].[SpecialMinutiae].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Has special minutiae', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheFingerprint', @level2type = N'COLUMN', @level2name = N'SpecialMinutiae';


GO
PRINT N'Creating [dbo].[ErrorCacheFingerprint].[ResubmitAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of times finger print transactions are resubmitted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheFingerprint', @level2type = N'COLUMN', @level2name = N'ResubmitAttempts';


GO
PRINT N'Creating [dbo].[ErrorCacheHandTemplate].[ResubmitAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of times hand templates are resubmitted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheHandTemplate', @level2type = N'COLUMN', @level2name = N'ResubmitAttempts';


GO
PRINT N'Creating [dbo].[ErrorCachePayAdjustment].[Notes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'''''', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCachePayAdjustment', @level2type = N'COLUMN', @level2name = N'Notes';


GO
PRINT N'Creating [dbo].[ErrorCachePayAdjustment].[ResubmitAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of times pay adjustment transactions are resubmitted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCachePayAdjustment', @level2type = N'COLUMN', @level2name = N'ResubmitAttempts';


GO
PRINT N'Creating [dbo].[ErrorCacheTransaction].[ResubmitAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of times transactions are resubmitted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ErrorCacheTransaction', @level2type = N'COLUMN', @level2name = N'ResubmitAttempts';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains exception policies ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[ExceptionPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyID';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[ExceptionPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyName';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExceptionPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains assignment of exception policy to employees', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[ExceptionPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyAssignID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[ExceptionPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Exception Policy reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExceptionPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains exception rules for an exception policy, that defines the settings  which are used for the generation of exceptions', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ExceptionPolicyRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'EntityID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyRuleID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ExceptionPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Exception Policy reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyID';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ExceptionPolicyRuleName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyRuleName';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ExceptionPolicyRuleType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of Exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyRuleType';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ParameterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds secconds used as parameter to Exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ParameterSecs';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExceptionPolicyRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionPolicyRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the settings for the Exceptions Pop Up within dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[ExceptionSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting', @level2type = N'COLUMN', @level2name = N'ExceptionSettingID';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee for whom this setting is stored', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ExceptionSetting].[HideAcknowledgedException].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Deternines whether to hide acknowledged exception in excptions window', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSetting', @level2type = N'COLUMN', @level2name = N'HideAcknowledgedException';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[MS_Descritption]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Descritption', @value = N'Defines the exception rules of which data to be displayed within exceptions popup within dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[ExceptionSettingDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'ExceptionSettingDetailID';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[ExceptionSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to ExceptionSetting.ExceptionSettingID of exception setting to which this record belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'ExceptionSettingID';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[ExceptionRuleType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the exception rule type to which this record is pointing to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'ExceptionRuleType';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the priority of the excpetion rule type to which this records pointing, while sorting the exception data by excpetion rule type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExceptionSettingDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExceptionSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExportCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains export code matrix entities and information regarding basic settings of matrix', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode';


GO
PRINT N'Creating [dbo].[ExportCode].[ExportCodeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'ExportCodeID';


GO
PRINT N'Creating [dbo].[ExportCode].[ExportCodeName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'ExportCodeName';


GO
PRINT N'Creating [dbo].[ExportCode].[PriorityNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the priority of the export code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'PriorityNumber';


GO
PRINT N'Creating [dbo].[ExportCode].[ExportMatrixType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the export matrix type is standard or labor level', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'ExportMatrixType';


GO
PRINT N'Creating [dbo].[ExportCode].[IsDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the export matrix is default or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'IsDefault';


GO
PRINT N'Creating [dbo].[ExportCode].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExportCode].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCode', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the criteria settings for an export code matrix,  that will be used for finding the export code matrix for particular employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[ExportCriteriaID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'ExportCriteriaID';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[ExportCodeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to ExportCode.ExportCodeID of Export Code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'ExportCodeID';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[CriteriaFieldType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the field that criteria holds information about (refers enum NewEmployeeDefaultCriteria.CriteriaFieldTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldType';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[CriteriaFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Indentity/EntityID of the entity with respect to the Criteria Field type chosen, for which the Criteria value needs to be chosen. Example: if Criteria Field type chosen is Home Labor Level, then LaborLevelID of the Labor Level for which value needs to be chosen is stored as CriteriaFieldID"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldID';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[CriteriaFieldValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indentity/EntityIID of the respective entity that is defined by the criteria field type example : if criteria feild type is Custom Field entity then CustomeFieldID is stored in CriteriaFieldID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldValue';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExportCodeCriteria].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeCriteria', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the export codes for particualr pay type and/or labor level against a shift differential code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[ExportCodeDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'ExportCodeDetailID';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[ExportCodeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indentity / Entity ID of export matrix', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'ExportCodeID';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayType.PayTypeID of PayType', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID of LLDetail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[PaidCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the paid code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'PaidCode';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[UnpaidCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the unpaid code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'UnpaidCode';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ExportCodeDetail].[ShiftDiffCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines the Shift code fo shift differential policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ExportCodeDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffCode';


GO
PRINT N'Creating [dbo].[FAT].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Feature Access Templates', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT';


GO
PRINT N'Creating [dbo].[FAT].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[FAT].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[FAT].[FATName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'FATName';


GO
PRINT N'Creating [dbo].[FAT].[HasFullAccess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user has full access or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'HasFullAccess';


GO
PRINT N'Creating [dbo].[FAT].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[FAT].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[FAT].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[FAT].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[FAT].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FAT', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[FATAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains assignment of the Feature Access Template to employees', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign';


GO
PRINT N'Creating [dbo].[FATAssign].[FATAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'FATAssignID';


GO
PRINT N'Creating [dbo].[FATAssign].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID of the policyÂ to which user has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[FATAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of a userÂ for whom policy is assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[FATAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[FATAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[FATAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[FATAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[FATDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the View/Add/Edit/Delete permissions for various sections, for a particular feature access template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail';


GO
PRINT N'Creating [dbo].[FATDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[FATDetail].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[FATDetail].[SectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Section of the application to which particular permission such as allow view is defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'SectionType';


GO
PRINT N'Creating [dbo].[FATDetail].[AllowView].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed to view a partcular section', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'AllowView';


GO
PRINT N'Creating [dbo].[FATDetail].[AllowAdd].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed to add a policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'AllowAdd';


GO
PRINT N'Creating [dbo].[FATDetail].[AllowEdit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed toÂ edit a policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'AllowEdit';


GO
PRINT N'Creating [dbo].[FATDetail].[AllowDelete].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed to delete a policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'AllowDelete';


GO
PRINT N'Creating [dbo].[FATDetail].[AllowAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed to make policy assignments to an employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'AllowAssign';


GO
PRINT N'Creating [dbo].[FATDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[FATDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[FATDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[FATDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the permissions of additional settings for a particular section', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[SectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Section of the application to which particular permission such as allow view is defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'SectionType';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[AdditionalSettingsType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Additional setting for paricular section type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'AdditionalSettingsType';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[ReportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity ID of Report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'ReportID';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[IsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is particular setting is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'IsEnabled';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[FATDetailSetting].[ModifierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity ID of Modifier', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FATDetailSetting', @level2type = N'COLUMN', @level2name = N'ModifierID';


GO
PRINT N'Creating [dbo].[FeatureAssignment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the features assignment to this particular customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FeatureAssignment';


GO
PRINT N'Creating [dbo].[FeatureAssignment].[FeatureAssignmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FeatureAssignment', @level2type = N'COLUMN', @level2name = N'FeatureAssignmentID';


GO
PRINT N'Creating [dbo].[FeatureAssignment].[FeatureType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the assigned feaure', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FeatureAssignment', @level2type = N'COLUMN', @level2name = N'FeatureType';


GO
PRINT N'Creating [dbo].[FeatureAssignment].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FeatureAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[FeatureAssignment].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'FeatureAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines general settings for a customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ZipCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PIN code of the address', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ZipCode';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[GovernmentIDLabel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text to appear in places where we are refering to Government ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'GovernmentIDLabel';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[Phone].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Company''s phone number', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'Phone';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AdminPassword].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Password for admin login', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AdminPassword';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOSAMLRedirectURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds single sign-on service redirect URL', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOSAMLRedirectURL';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[EnableEmailImportLog].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enables Emailing of Import Process Log', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'EnableEmailImportLog';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[WSSharedKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Shared key GUID for web service authentication', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'WSSharedKey';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingPONumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PO number for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingPONumber';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingIndustry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Industry of customer for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingIndustry';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingClockRentalRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Clock rantal rate for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingClockRentalRate';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CompanyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the company', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CompanyName';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingBillTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Bill to flield for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingBillTo';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[HideAutoLunch].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If Enabled the auto Lunch option in Payroll Policies will be hidden', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'HideAutoLunch';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOLoginOnly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to permit login only through SSO', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOLoginOnly';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingCommisionRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Commision rate for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingCommisionRate';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[LLsLabel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Text to appear in places where ""Labor Levels"" string is displayed within site"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'LLsLabel';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[Fax].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fax address of the company', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'Fax';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[City].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the city', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'City';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ShowAllRatesAsHourly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Specifies whether to display all rates as hourly rates or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ShowAllRatesAsHourly';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[EnableEmpGroupHierarchy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether Employee Group Hierarchy is enabled for the customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'EnableEmpGroupHierarchy';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[State].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the state', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'State';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[LLLabel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Text to appear in places where ""Labor Level"" string is displayed within site"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'LLLabel';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[RemoveEmpApprovalsOnMgrEdit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This column is used to remove the employee approvals when manager edits employee time card', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'RemoveEmpApprovalsOnMgrEdit';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingTermsType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Terms type field for billing (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingTermsType';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOSAMLX509Cert].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds single sign-on service X509 Certificate value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOSAMLX509Cert';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingMinBaseCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum employee count', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingMinBaseCount';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[GeneralConfigurationID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'GeneralConfigurationID';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CanAssignProxyMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Used as the default value for UserGroupMgr.CanAssignProxyMgr 
field when the system adds a usergroup manager(Example changing the manager of an Employee through Employee Profile)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CanAssignProxyMgr';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[EnableGovernmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display the government Id field in employee profile', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'EnableGovernmentID';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingSalesAssociateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Sales associate ID from sales associate table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingSalesAssociateID';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CustomerLogoTemp].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'To store customer logo temporily for showing preview of newly uploaded logo', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CustomerLogoTemp';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingCommisionEnd].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Commision end for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingCommisionEnd';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingDedicatedLineQuantity].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decicated line quantity for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingDedicatedLineQuantity';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingDedicatedLineRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Dedicated line rate for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingDedicatedLineRate';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingClockCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Clock count field for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingClockCount';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the single signon enabled state', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ScheduleGenerateForDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'No of days to generate schedules in advance using schedule template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ScheduleGenerateForDays';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AllowSecondMgrApproveAsMgr1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether secondary manager can approve time cards as manager1', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AllowSecondMgrApproveAsMgr1';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CompanyAddress].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Address of the company', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CompanyAddress';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'reference feature access template ID for wsuser authentication', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[TOREmailToAdminEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether Time Off Requested notification email send to admin or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'TOREmailToAdminEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ClockPIN].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Password used when registering a hardware terminal (clock) for this customer through web services', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ClockPIN';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[WSEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds Web service enabled state', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'WSEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOSharedKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Shared key GUID for SSO authentication', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOSharedKey';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ImpliedHierarchyEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether implied Hierarchy is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ImpliedHierarchyEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CustomerLogo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores the customer logo', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CustomerLogo';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AdminTimezoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the Admin''s time zone', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AdminTimezoneKey';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AdminPasswordExpires].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Expiry date of the Admin''s password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AdminPasswordExpires';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AdminPasswordAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Count of failed attempts to login as admin', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AdminPasswordAttempts';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOSAMLBinding].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds single sign-on service binding', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOSAMLBinding';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[SSOSAMLSignOnURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds single sign-on service URL', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'SSOSAMLSignOnURL';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[WebKioskPin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The web kiosk Clock PIN is the password used when registering a hardware terminal (clock) through web services', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'WebKioskPin';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CanAssignSubordinateMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Used as the default value for UserGroupMgr.CanAssignSubordinateMgr 
field when the system adds a usergroup manager(Example changing the manager of an Employee through Employee Profile)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CanAssignSubordinateMgr';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingMinBaseEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum employee billing enabled for customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingMinBaseEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingComments].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comments field for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingComments';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AdminLastLockedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Datetime when the admin login is locked due to multiple failed attempts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AdminLastLockedOut';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CanAccessSubordinateGroup].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Used as the default value for UserGroupMgr.CanAccessSubordinateGroup field when the system adds a usergroup manager(Example changing the manager of an Employee through Employee Profile)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CanAccessSubordinateGroup';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[TimeCardMgrApprovalLevelType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Decides the Time Card Approval Level for the customer(Values: 1 Manager:0, 1 Manager+Admin = 1, 2 Managers = 2,  2 Managers + Admin = 3). To consider a Timecard as approved, all the levels specified here should approve that timecard along with employee approvals."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'TimeCardMgrApprovalLevelType';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[AllowMissingPunchApprovals].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the manager can approve time card with missing punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'AllowMissingPunchApprovals';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingTierEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether Billing tier is enabled for the customer or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingTierEnabled';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[BillingCommisionStart].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Commision start for billing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'BillingCommisionStart';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[WSUserPassword].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds wsUser password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'WSUserPassword';


GO
PRINT N'Creating [dbo].[GeneralConfiguration].[CustomerLogoFilename].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Filename of the customer logo uploaded', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeneralConfiguration', @level2type = N'COLUMN', @level2name = N'CustomerLogoFilename';


GO
PRINT N'Creating [dbo].[GeoFenceGroup].[Name].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'''''', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeoFenceGroup', @level2type = N'COLUMN', @level2name = N'Name';


GO
PRINT N'Creating [dbo].[GeoFenceGroup].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'''''', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeoFenceGroup', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [dbo].[GeoFenceGroup].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeoFenceGroup', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[GeoFenceGroup].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'GeoFenceGroup', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines settings for labor level prompt', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[HardwarePromptID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'HardwarePromptID';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[HardwareTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HardwareTerminal.HardwareTerminalID of the terminal to which this record belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'HardwareTerminalID';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LL.LLID of the labor level for which prompt has to be made', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[PromptText].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text to be dispalyed when prompting', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'PromptText';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[ManualEntryEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'ManualEntryEnabled';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HardwarePrompt].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwarePrompt', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the Hardware Teminal Settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[Version].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Version of software for NETOne Terminals', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'Version';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowLLTransfer].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Transfers from the clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowLLTransfer';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[TerminalMode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Enum, allows clock to accept Ins or Outs or Normal operation"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'TerminalMode';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowLLTransferUsingF2Key].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allows the entry of Transfers using F2 on HP3k/HP4k', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowLLTransferUsingF2Key';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ScheduleDaysToUpload].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'No of schedules to upload to clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ScheduleDaysToUpload';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[InternalWebServiceUrl].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'URL for WebService based clocks (NETOne)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'InternalWebServiceUrl';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[TimeZoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Timezone for this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'TimeZoneKey';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowBadgelessEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow employees to enter numbers on the clock without a badge', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowBadgelessEntry';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ConfigurationCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code to enter on NETOne Terminals to access Configuration', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ConfigurationCode';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[PayAdjustmentEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to ask PyadjustmentID or use default PayAdjustmentID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'PayAdjustmentEntryType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLPromptOnClockInEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on Clock In.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnClockInEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ConnectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Specifies which serial communication standard to use incase terminal is connected using serial cable', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ConnectionType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnableSwipeAndGo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Swipe-and-Go Flag', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnableSwipeAndGo';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[FingerprintSecurityLevel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fingerprint scanner security level (Values 1 - 9)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'FingerprintSecurityLevel';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'URL to software updates (NETOne)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateURL';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[FingerPrintBrightness].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fingerprint scanner brightness (Values 1 - 100)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'FingerPrintBrightness';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[SendMessageType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to send employee names or messages to clock (For TA 620 terminal)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'SendMessageType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[HardwareTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'HardwareTerminalID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LastCommunicationDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date the NETOne last communicated with Web Services', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LastCommunicationDateTime';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[PollBaseTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Base time to start calculation of next poll time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'PollBaseTime';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[HardwareZoneID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HardwareZone.HardwareZoneID of selected hardware zone', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'HardwareZoneID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[DisplayAssignedLLsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines to display only assigned labor levels', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'DisplayAssignedLLsEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowAlphaBadges].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allow NETOne Terminals to accept AlphaNumeric Badges', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowAlphaBadges';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnableUploading].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnableUploading';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[BaudRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Baud rate for Serial or Modem clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'BaudRate';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdatePayAdjustmentFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) pay adjustments are updated (used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdatePayAdjustmentFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[DaylightSavingsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Daylight Savings flag', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'DaylightSavingsEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowLunchAndBreakUsingF1Key].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allows the entry of Meals and Breaks using F1 on HP3k/HP4k clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowLunchAndBreakUsingF1Key';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowPayAdjustmentEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Pay Adjustments', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowPayAdjustmentEntry';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ImportBaseTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ImportBaseTime';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnableFingerprint].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fingerprint Enable Flag (Defaults to 0)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnableFingerprint';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[CommunicationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Enum, defines if this clock communicates via Serial, Modem, or TCP/IP"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'CommunicationType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowClockOutUsingF1Key].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allows the entry of ClockIn punches using F1 on HP3k/HP4k clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowClockOutUsingF1Key';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ImportIntervalType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ImportIntervalType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateLLFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) labor levels are updated (used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateLLFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[FingerPrintImageQuality].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fingerprint image quality (Values 1 - 100)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'FingerPrintImageQuality';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowBreak].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Break entries from the clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowBreak';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[BellScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'BellScheduleTempID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnablePolling].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to poll the hardware terminal or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnablePolling';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnableWireless].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Wireless Enable Flag (Defaults to 1)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnableWireless';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[IPAddress].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'IP Address of a TCP/IP connected clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'IPAddress';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[DefaultPayAdjustmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default PayAdjusmtmentID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'DefaultPayAdjustmentID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[PollIntervalLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Interval length to poll the terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'PollIntervalLength';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[SendMessageToClockEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether messages can be sent to clock (For TA620 terminal)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'SendMessageToClockEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[VerificationIDType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines type of ID used for verification (Values: Badge Number and Employee Number)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'VerificationIDType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ImportIntervalLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ImportIntervalLength';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[HardwareTerminalType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Enum, defines which teminal type this clock is (NETOne, HP3k, HP4k)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'HardwareTerminalType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ScheduleEndGraceSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ScheduleEndGraceSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[IdlePrompt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message to display on screen when idle', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'IdlePrompt';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UploadIntervalType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UploadIntervalType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AutoUpdate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enable auto update of the clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AutoUpdate';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Describes the terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[TotalBadgeLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Total badge length to be expected for clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'TotalBadgeLength';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[MACID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Mac Address for NETOne Terminals', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'MACID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ClearHandTemplates].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ClearHandTemplates';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[EnableImporting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'EnableImporting';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateEmployeeFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) employees infomation is updated(used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateEmployeeFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[PhoneNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Phone Number to dial for Modem clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'PhoneNumber';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[BadgeStartPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Badge start position for clock to find swiped badge', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'BadgeStartPosition';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[BadgeLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Badge length information for clock to find swiped badge', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'BadgeLength';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UploadIntervalLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UploadIntervalLength';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLPromptOnEndBreakEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on End Break.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnEndBreakEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[COMPort].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'COM Port Number for Serial or Modem clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'COMPort';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateScheduleFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) schedules are updated (used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateScheduleFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowLunch].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Meal entries from the clock', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowLunch';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[ActivateRelay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to activate relay on successfull punch (For TA 620 terminal)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'ActivateRelay';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UploadBaseTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UploadBaseTime';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateMessageFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) messages are updated (used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateMessageFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[AllowClockInUsingF1Key].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allows the entry of ClockIn punches using F1 on HP3k/HP4k clocks', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'AllowClockInUsingF1Key';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[PollIntervalType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of interval (day, hours, minutes) to poll the terminal"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'PollIntervalType';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LANID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This is an id designated by the customer (not used on NETOne)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LANID';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLPromptOnEndLunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on End Lunch.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnEndLunchEnabled';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[UpdateConfigurationFreqSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how frequently (in seconds) configuration is updated(used for NETOne clock)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'UpdateConfigurationFreqSecs';


GO
PRINT N'Creating [dbo].[HardwareTerminal].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[HardwareZone].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the punching devices zone', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZone';


GO
PRINT N'Creating [dbo].[HardwareZone].[HardwareZoneID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZone', @level2type = N'COLUMN', @level2name = N'HardwareZoneID';


GO
PRINT N'Creating [dbo].[HardwareZone].[HardwareZoneName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZone', @level2type = N'COLUMN', @level2name = N'HardwareZoneName';


GO
PRINT N'Creating [dbo].[HardwareZone].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZone', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HardwareZone].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZone', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwareZoneMember].[HardwareZoneMemberID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMember', @level2type = N'COLUMN', @level2name = N'HardwareZoneMemberID';


GO
PRINT N'Creating [dbo].[HardwareZoneMember].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMember', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[HardwareZoneMember].[HardwareZoneID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HardwareZone.HardwareZoneID
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMember', @level2type = N'COLUMN', @level2name = N'HardwareZoneID';


GO
PRINT N'Creating [dbo].[HardwareZoneMember].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMember', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwareZoneMember].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMember', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[HardwareZoneMgrID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity Field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'HardwareZoneMgrID';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee selected as manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[HardwareZoneID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HardwareZone.HardwareZoneID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'HardwareZoneID';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[StartDateManagement].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of management', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'StartDateManagement';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[EndDateManagement].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of management
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'EndDateManagement';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HardwareZoneMgr].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HardwareZoneMgr', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HolidayList].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Holiday entities,A Holiday List is a group of dates that are considered ''holidays'' for the employees that are assigned to the list.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList';


GO
PRINT N'Creating [dbo].[HolidayList].[HolidayListID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList', @level2type = N'COLUMN', @level2name = N'HolidayListID';


GO
PRINT N'Creating [dbo].[HolidayList].[HolidayListName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList', @level2type = N'COLUMN', @level2name = N'HolidayListName';


GO
PRINT N'Creating [dbo].[HolidayList].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[HolidayList].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HolidayList].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayList', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the assignment of Holiday List to employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[HolidayListAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'HolidayListAssignID';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[HolidayListID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HolidayList.HolidayListID of the holiday list that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'HolidayListID';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HolidayListAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines a day that is considered as holiday and other settings, for particular holiday list', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[HolidayListDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'HolidayListDetailID';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[HolidayListID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HolidayList.HolidayListID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'HolidayListID';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[HolidayName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of Holiday Detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'HolidayName';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[HolidayDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'HolidayDate';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[IsCompanyWorked].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the company is worked on the day of holiday', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'IsCompanyWorked';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[IncludeWeekend].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether weekend is included in the holiday', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'IncludeWeekend';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[NumberOfDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Length of holiday in days', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'NumberOfDays';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[HolidayListDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'HolidayListDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ImportAssignment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the imports assigned to the customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportAssignment';


GO
PRINT N'Creating [dbo].[ImportAssignment].[ImportAssignmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportAssignment', @level2type = N'COLUMN', @level2name = N'ImportAssignmentID';


GO
PRINT N'Creating [dbo].[ImportAssignment].[ImportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Import assembly reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportAssignment', @level2type = N'COLUMN', @level2name = N'ImportID';


GO
PRINT N'Creating [dbo].[ImportAssignment].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ImportAssignment].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores the information reagrding details of a particular import request that is processed already', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines whether its a Template Import or assembly import', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'Type';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ImportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Import reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ImportID';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ActualFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'File which needs to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ActualFile';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[LogFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'File contains import process logs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'LogFile';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[StatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Import porcessing status', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'StatusType';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ImportedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ImportedBy';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ImportedDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date at which import has been processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ImportedDate';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[Email].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Email address to which status of import process will be sent', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'Email';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ImportProcessHistory].[ImportedIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'comma seperated imported IDs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportProcessHistory', @level2type = N'COLUMN', @level2name = N'ImportedIDs';


GO
PRINT N'Creating [dbo].[ImportSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the import specific settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting';


GO
PRINT N'Creating [dbo].[ImportSetting].[ImportSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting', @level2type = N'COLUMN', @level2name = N'ImportSettingID';


GO
PRINT N'Creating [dbo].[ImportSetting].[ImportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Import assembly reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting', @level2type = N'COLUMN', @level2name = N'ImportID';


GO
PRINT N'Creating [dbo].[ImportSetting].[ImportSpecificSettings].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Import specific settings stored as JSON string', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting', @level2type = N'COLUMN', @level2name = N'ImportSpecificSettings';


GO
PRINT N'Creating [dbo].[ImportSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ImportSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ImportTemp].[MS_Descriotion]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Descriotion', @value = N'Defines a Import Template and its settings that are used while processing an import request with this particular template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp';


GO
PRINT N'Creating [dbo].[ImportTemp].[ImportTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'ImportTempID';


GO
PRINT N'Creating [dbo].[ImportTemp].[ImportTempName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'ImportTempName';


GO
PRINT N'Creating [dbo].[ImportTemp].[Delimiter].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Seperator used for import processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'Delimiter';


GO
PRINT N'Creating [dbo].[ImportTemp].[TextSurroundWith].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Special characters surrounded with text which is used for import processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'TextSurroundWith';


GO
PRINT N'Creating [dbo].[ImportTemp].[StartFromRow].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indicates from which row of file import should start', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'StartFromRow';


GO
PRINT N'Creating [dbo].[ImportTemp].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ImportTemp].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ImportTemp].[DefaultEffectiveDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default effective date used as value for Effective dated fields in import process', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'DefaultEffectiveDate';


GO
PRINT N'Creating [dbo].[ImportTemp].[IsDeleteFutureAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to keep the future assignment or to remove it', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'IsDeleteFutureAssign';


GO
PRINT N'Creating [dbo].[ImportTemp].[ImportType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of Import Template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTemp', @level2type = N'COLUMN', @level2name = N'ImportType';


GO
PRINT N'Creating [dbo].[ImportTempFields].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the fileds of which data to imported, for a particular Import Template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields';


GO
PRINT N'Creating [dbo].[ImportTempFields].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ImportTempFields].[ImportTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'ImportTempID';


GO
PRINT N'Creating [dbo].[ImportTempFields].[FieldType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the import field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'FieldType';


GO
PRINT N'Creating [dbo].[ImportTempFields].[FieldValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Value of the import field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'FieldValue';


GO
PRINT N'Creating [dbo].[ImportTempFields].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Order of the import field as per import template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[ImportTempFields].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ImportTempFields].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ImportTempFields', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains an IP Access Policy entities and basic settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[IPAccessPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyID';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[IPAccessPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyName';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[AllowSiteAccess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether a person assigned to this particular policy has access to site', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'AllowSiteAccess';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[AllowPunch].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether a person assigned to this particular policy is allowed to punch through site', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'AllowPunch';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[IPAccessPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines an IP Address for a particular IP Access Policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[IPAccessPolicyDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyDetailID';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[IPAccessPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Refers to IPAccessPolicyID field of IPAccessPolicy table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyID';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[IPAddress].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'IP Address or IP Mask to which we need allow access', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'IPAddress';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[Description].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Description of the IP Address or IP Mask(optional)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'Description';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[IPAccessPolicyDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'IPAccessPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[JobAssignment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the jobs assigned to the customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobAssignment';


GO
PRINT N'Creating [dbo].[JobAssignment].[JobAssignmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobAssignment', @level2type = N'COLUMN', @level2name = N'JobAssignmentID';


GO
PRINT N'Creating [dbo].[JobAssignment].[JobID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job assembly reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobAssignment', @level2type = N'COLUMN', @level2name = N'JobID';


GO
PRINT N'Creating [dbo].[JobAssignment].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[JobAssignment].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores the queue requester items for job processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobProcessHistoryID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobProcessHistoryID';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key to Job Setting table, Corresponding job setting', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobSettingID';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobProcessStatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Status of the Job Process', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobProcessStatusType';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[ActualFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'File which needs to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'ActualFile';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[LogFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'File contains job process logs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'LogFile';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobProcessedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job Processed by User ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobProcessedBy';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobProcessedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job Processed on date and time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobProcessedOn';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobSettingName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the Job Setting used for processing this Job', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobSettingName';


GO
PRINT N'Creating [dbo].[JobProcessHistory].[JobID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job assembly reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobProcessHistory', @level2type = N'COLUMN', @level2name = N'JobID';


GO
PRINT N'Creating [dbo].[JobSchedule].[JobSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key to Job Setting table, the setting this schedule belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSchedule', @level2type = N'COLUMN', @level2name = N'JobSettingID';


GO
PRINT N'Creating [dbo].[JobSetting].[JobSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'JobSettingID';


GO
PRINT N'Creating [dbo].[JobSetting].[JobID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job assembly reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'JobID';


GO
PRINT N'Creating [dbo].[JobSetting].[JobSpecificSettings].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Job specific settings stored as JSON string', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'JobSpecificSettings';


GO
PRINT N'Creating [dbo].[JobSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[JobSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[JobSetting].[JobSettingName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the Job Setting', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'JobSettingName';


GO
PRINT N'Creating [dbo].[JobSetting].[FilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Filter. FilterID of the filter used as employee filter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'FilterID';


GO
PRINT N'Creating [dbo].[JobSetting].[FilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Conditions for filtering employees (used when custom filter is applied)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'JobSetting', @level2type = N'COLUMN', @level2name = N'FilterData';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the videos assgiend to this particular customer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[LandingPageVideoID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'LandingPageVideoID';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[VideoID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique identifier of video which is provdied by Vimeo.com', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'VideoID';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[LandingPageSectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Section type within configuration to which video belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'LandingPageSectionType';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[VideoName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity Name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'VideoName';


GO
PRINT N'Creating [dbo].[LandingPageVideo].[LandingPageFeatureType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Particualr Feature within a particualr accordion section to which video beong to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LandingPageVideo', @level2type = N'COLUMN', @level2name = N'LandingPageFeatureType';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the recent punch information of an employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[LiveTransactionLogID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'LiveTransactionLogID';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[TransactionDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time of the transaction logged', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'TransactionDateTime';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[TransactionUTCDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time of the transaction logged in Utc', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'TransactionUTCDateTime';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[TransactionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of the transaction (Ex: Clock In, Clock Out, Start Break, End Break, etc)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'TransactionType';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to TimeSlicePre.TimeSlicePreID of the slice correspoding to this transaction', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LiveTransactionLog].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LiveTransactionLog', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the Labor Level', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL';


GO
PRINT N'Creating [dbo].[LL].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[LL].[LLName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'LLName';


GO
PRINT N'Creating [dbo].[LL].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the ordinal position of the labor level in the labor level hierarchy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[LL].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LL].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LL].[UnrestrictedAccessEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Used to grant unrestricted access to all labor level details irrespective of the assignments.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LL', @level2type = N'COLUMN', @level2name = N'UnrestrictedAccessEnabled';


GO
PRINT N'Creating [dbo].[LLDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor Level Details that comprise each Labor level.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail';


GO
PRINT N'Creating [dbo].[LLDetail].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLDetail].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LL.LLID of the labor level under which this detail has been defined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[LLDetail].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[LLDetail].[CreatedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person who created this record initially', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'CreatedBy';


GO
PRINT N'Creating [dbo].[LLDetail].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[LLDetail].[LLDetailCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique code to identify the labor level detail (Unique under a particular labor level)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'LLDetailCode';


GO
PRINT N'Creating [dbo].[LLDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetail].[EmpNotesRequired].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee must enter notes while performing time sheet submital changes through employee home for this labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'EmpNotesRequired';


GO
PRINT N'Creating [dbo].[LLDetail].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[LLDetail].[LLDetailName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'LLDetailName';


GO
PRINT N'Creating [dbo].[LLDetail].[CreatedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date/Time the record created initially', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetail', @level2type = N'COLUMN', @level2name = N'CreatedOn';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Assignment of users to Labor Level Details.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[LLDetailAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'LLDetailAssignID';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LL.LLID of the labor level of labor level detail that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'LLDetail.LLDetailID of the labor level detail that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee to whom labor level detail has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[IsHomeLL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this is a home labor level assignment or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'IsHomeLL';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The override charge rate assigned to a user working in a specific labor level detail.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[LLDetailAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'LLDetailAssignID';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[ChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Charge rate overridden for the labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'ChargeRate';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailAssignChargeRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The Override Pay Rate for a user working in a specific Labor Level Detail.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[LLDetailAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'LLDetailAssignID';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[PayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay rate overridden for the labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'PayRate';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailAssignPayRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailAssignPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The charge rate assigned against each Labor Level Detail.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[ChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Charge rate for this labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'ChargeRate';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailChargeRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the hardware terminal types and communication settings for the client''s terminals.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[LLDetailHardwareTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailHardwareTerminalID';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID of the labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[HardwareTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to HardwareTerminal.HaridwareTerminalID of the terminal to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal', @level2type = N'COLUMN', @level2name = N'HardwareTerminalID';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailHardwareTerminal].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailHardwareTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay rate against a labor level detail.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[PayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay rate for this labor level detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'PayRate';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[LLDetailPayRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLDetailPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[LLHierarchy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Used to store Hierarchy structure of LLs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLHierarchy';


GO
PRINT N'Creating [dbo].[LLHierarchy].[LLHierarchyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLHierarchy', @level2type = N'COLUMN', @level2name = N'LLHierarchyID';


GO
PRINT N'Creating [dbo].[LLHierarchy].[LLDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLHierarchy', @level2type = N'COLUMN', @level2name = N'LLDetailID';


GO
PRINT N'Creating [dbo].[LLHierarchy].[RefLLHierarchyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLHierarchy.LLHierarchyID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'LLHierarchy', @level2type = N'COLUMN', @level2name = N'RefLLHierarchyID';


GO
PRINT N'Creating [dbo].[Message].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Sent Items, the basic information and content for a Message.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message';


GO
PRINT N'Creating [dbo].[Message].[MessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'MessageID';


GO
PRINT N'Creating [dbo].[Message].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message sender ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Message].[MessageBody].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message description', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'MessageBody';


GO
PRINT N'Creating [dbo].[Message].[MessageSubject].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Subject of the message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'MessageSubject';


GO
PRINT N'Creating [dbo].[Message].[RelatedMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds parent message ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'RelatedMessageID';


GO
PRINT N'Creating [dbo].[Message].[RelationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds relation type to corresponding parent message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'RelationType';


GO
PRINT N'Creating [dbo].[Message].[IsRead].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds status of the message read/unread', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'IsRead';


GO
PRINT N'Creating [dbo].[Message].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[Message].[SentOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds message sent datetime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'SentOn';


GO
PRINT N'Creating [dbo].[Message].[ExpiresOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds message expiry datetime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Message', @level2type = N'COLUMN', @level2name = N'ExpiresOn';


GO
PRINT N'Creating [dbo].[MessageDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the message details(which include track of message receiver information)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail';


GO
PRINT N'Creating [dbo].[MessageDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[MessageDetail].[MessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'MessageID';


GO
PRINT N'Creating [dbo].[MessageDetail].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message receiver ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[MessageDetail].[RelatedMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds parent message ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'RelatedMessageID';


GO
PRINT N'Creating [dbo].[MessageDetail].[RelationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds relation type to corresponding parent message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'RelationType';


GO
PRINT N'Creating [dbo].[MessageDetail].[IsRead].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds status of the message read/unread', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'IsRead';


GO
PRINT N'Creating [dbo].[MessageDetail].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if message is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[MessageDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[MessageDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Settings for the Missing Punches Widget on the Manager Dashboard.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[MissingPunchesWidgetSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'MissingPunchesWidgetSettingID';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[ShowException].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show exceptions in the missing punch and exception widget', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'ShowException';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[ShowMissingPunch].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show missing punches in the missing punch and exception widget', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'ShowMissingPunch';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[HideAcknowledgedException].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to hide acknowledged exceptions in missing punch and exception widget', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'HideAcknowledgedException';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person for whom this setting is stored', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[MissingPunchesWidgetSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MissingPunchesWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Modifier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the definition of the Modifier types that are available in the system.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier';


GO
PRINT N'Creating [dbo].[Modifier].[ModifierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifierID';


GO
PRINT N'Creating [dbo].[Modifier].[ModifierName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifierName';


GO
PRINT N'Creating [dbo].[Modifier].[ModifierType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the type of modifer', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifierType';


GO
PRINT N'Creating [dbo].[Modifier].[ModifierParam1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores parameter value (Example: stores exception type for Cancel Excexption modifiers)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifierParam1';


GO
PRINT N'Creating [dbo].[Modifier].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[Modifier].[Notes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Description', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'Notes';


GO
PRINT N'Creating [dbo].[Modifier].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Modifier].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Modifier].[IsSystemGenerated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this entry is user defined or system generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Modifier', @level2type = N'COLUMN', @level2name = N'IsSystemGenerated';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'New Employee Default policies collect the settings that are used when new employees are created in the system.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[HardwareZoneID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'HardwareZoneID1';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[WebPunchingEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether web punching is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'WebPunchingEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[NewEmpDefaultID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[HoursForecastPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'References HoursForecastPolicy.HoursForecastPolicyID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'HoursForecastPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[HardwareZoneID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'HardwareZoneID2';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whethe time sheet submit enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[AttendanceShiftLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Attendace shift length for attendance tracking', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'AttendanceShiftLength';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TelePunchPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TelePunchPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[PasswordPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s Password.PasswordPolicyID, defines the password policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'PasswordPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TrackAttendanceOnlyEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to track only attendance not complete shifts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TrackAttendanceOnlyEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[IsExempt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines exempt type for the new employee default template(refers enum UserInfoIsExempt.ExemptStatusType)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'IsExempt';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[PriorityNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the priority number of new employee default', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'PriorityNumber';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[CompTimePolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to CompTimePolicy.CompTimePolicyID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'CompTimePolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[RestrictShortLunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether short lunch is restricted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'RestrictShortLunchEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[WorkTimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether work time sheet submittal enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'WorkTimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[HolidayListID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s HolidayList.HolidayListID, defines the holidaylist for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'HolidayListID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TimeOffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s TimeOffPolicy.CallBackPolicyID, defines the time off policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[CallBackPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s CallBackPolicy.CallBackPolicyID, defines the call back policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'CallBackPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[WebLoginGenerationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines web login generation type (refers enum NewEmployeeDefault.WebLoginGenerationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'WebLoginGenerationType';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s Preference.PreferenceID, defines the preference policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TimeZoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines Time Zone', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TimeZoneKey';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[IsDefaultPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Policy - policy to be used while adding users to system when no other NewEmpDefault policy is chosen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'IsDefaultPolicy';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[TimeSheetDefaultPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to user default pay level (i.e paid pay levle rate) for the non-work hours', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'TimeSheetDefaultPaid';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[EmpStatus].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the status of the employee (refers enum UserInfo.EmployeeStatuses)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'EmpStatus';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[ScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s ScheduleTemplate.ScheduleTempID, defines the schedule template policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'ScheduleTempID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[WebAccessEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether web access is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'WebAccessEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[DefaultClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines default clock-in time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'DefaultClockIn';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[FATID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s FATID.FATID, defines the Feature Access Template  for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'FATID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[WebPasswordGenerationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines web password generation type (refers enum NewEmployeeDefault.WebPasswordGenerationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'WebPasswordGenerationType';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Referenece PayrollPolicy.PayrollPolicyID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[ExceptionPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s ExceptionPolicy.ExceptionPolicyID, defines the exception policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[RestrictToScheduleEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determine whether restricted to schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'RestrictToScheduleEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[IPAccessPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s IPAccessPolicy.IPAccessPolicyID, defines the IPAccess policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[NonWorkTimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether Non-Work time Sheet submittal enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'NonWorkTimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[IsSalary].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines salary type for the new employee default template (refers enum UserInfoIsSalary.SalaryType)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'IsSalary';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to LLDetail.LLDetailID Home Labor Level Assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[NewEmpDefaultName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultName';


GO
PRINT N'Creating [dbo].[NewEmpDefault].[ShiftDiffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s ShiftDiffPolicy.ShiftDiffPolicyID, defines the shift differential policy for the new employee default tempalte"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefault', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The criteria used to select the appropriate New Employee Default as an employee is being entered.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[NewEmpDefaultCriteriaID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultCriteriaID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[NewEmpDefaultID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s NewEmpDefault.NewEmpDefaultID, unique identifier of the New Employee Default to which criteria belongs"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[CriteriaFieldType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the field that criteria holds information about (refers enum NewEmployeeDefaultCriteria.CriteriaFieldTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldType';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[CriteriaFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Indentity/EntityID of the entity with respect to the Criteria Field type chosen, for which the Criteria value needs to be chosen. Example: if Criteria Field type chosen is Home Labor Level, then LaborLevelID of the Labor Level for which value needs to be chosen is stored as CriteriaFieldID"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[CriteriaFieldValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indentity/EntityIID of the respective entity that is defined by the criteria field type example : if criteria feild type is Custom Field entity then CustomeFieldID is stored in CriteriaFieldID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'CriteriaFieldValue';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NewEmpDefaultCriteria].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultCriteria', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default hours provided to a new employee when they are created in the system.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[NewEmpDefaultTimeOffHourID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultTimeOffHourID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s PayType.PayTypeID, defines the pay type for which time off hours is specfied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[NewEmpDefaultID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s NewEmpDefault.NewEmpDefaultID, defines the New Employee Default for which the default time off hours is being defined "', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[InitialSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration in seconds for the selected pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'InitialSecs';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NewEmpDefaultTimeOffHour].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultTimeOffHour', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the User Group memebership  information, when a employee is added to system he will be added as memeber of this user group', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[NewEmpDefaultUserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultUserGroupID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[NewEmpDefaultID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s NewEmpDefault.NewEmpDefaultID, defines the New Employee Default for which user group memeberships is being defiend"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserGroup.UserGroupID, defines the user group for which the employee will be added as member if this particualr new employee defualt is chsoen while adding an employee"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroup].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroup', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cotains the User Group Supervisro information, when a employee is adde to system he will be added as sueprvisor of this defined user group', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[NewEmpDefaultUserGroupMgrID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultUserGroupMgrID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[NewEmpDefaultID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s NewEmpDefault.NewEmpDefaultID, defines the New Employee Default for which user group manager  is being defiend"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr', @level2type = N'COLUMN', @level2name = N'NewEmpDefaultID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserGroup.UserGroupID, defines the user group for which the employee will be added as supervisor if this particular new employee default is chosen while adding an employee"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NewEmpDefaultUserGroupMgr].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NewEmpDefaultUserGroupMgr', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains date range settings for notification button', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[NotificationDateRangeSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / EntityID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'NotificationDateRangeSettingID';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[NotificationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the type hascode of the NotificationTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'NotificationType';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Payroll Policy reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[IsCurrentOptionEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds 1 if CurrentOption is checked in date range settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'IsCurrentOptionEnabled';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[IsPreviousOptionEnabled].[MS_Description ]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description ', @value = N'Holds 1 if PreviousOption is checked in date range settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'IsPreviousOptionEnabled';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[IsNextOptionEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds 1 if NextOption is checked in date range settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'IsNextOptionEnabled';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[PreviousCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds count for previous setting type selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'PreviousCount';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[NextCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds count for next setting type selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'NextCount';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[CurrentOptionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds selected type hashcode in RangeTypes ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'CurrentOptionType';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[PreviousOptionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds selected type hashcode in RangeTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'PreviousOptionType';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[NextOptionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds selected type hashcode in RangeTypes ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'NextOptionType';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[NotificationDateRangeSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'NotificationDateRangeSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[OvertimeRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entries defining the types of overtime that are used in the system.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule';


GO
PRINT N'Creating [dbo].[OvertimeRule].[OvertimeRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'OvertimeRuleID';


GO
PRINT N'Creating [dbo].[OvertimeRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[OvertimeRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[OvertimeRule].[OvertimeRuleName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'OvertimeRuleName';


GO
PRINT N'Creating [dbo].[OvertimeRule].[IsHoliday].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is holiday overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'IsHoliday';


GO
PRINT N'Creating [dbo].[OvertimeRule].[DaysFrom].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference date for the rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'DaysFrom';


GO
PRINT N'Creating [dbo].[OvertimeRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[OvertimeRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[OvertimeRule].[NumberOfDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'No of days in this rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'NumberOfDays';


GO
PRINT N'Creating [dbo].[OvertimeRule].[DayStartType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The type value from enum', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'DayStartType';


GO
PRINT N'Creating [dbo].[OvertimeRule].[DayOfWeek].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The day in the week this rle to be applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'DayOfWeek';


GO
PRINT N'Creating [dbo].[OvertimeRule].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[OvertimeRule].[IsOutsideSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is outside schedule overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'IsOutsideSchedule';


GO
PRINT N'Creating [dbo].[OvertimeRule].[OvertimeRuleType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the overtime rule i.e. Weekly/Daily etc', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'OvertimeRuleType';


GO
PRINT N'Creating [dbo].[OvertimeRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[OvertimeRule].[OutsideScheduleType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of outside schedule overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'OutsideScheduleType';


GO
PRINT N'Creating [dbo].[OvertimeRule].[IsUnscheduled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is unscheduled overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'OvertimeRule', @level2type = N'COLUMN', @level2name = N'IsUnscheduled';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Settings for determining the minimum password strength required for a user.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[PasswordPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'PasswordPolicyID';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[PasswordPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'PasswordPolicyName';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MinCharacters].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum number of characters password should contain', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MinCharacters';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MinUpperCaseCharacters].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum number of upper characters to be present within password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MinUpperCaseCharacters';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MinLowerCaseCharacters].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum number of lower case characters to be present within password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MinLowerCaseCharacters';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MinNumericSpecialCharacters].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum number od numeric/special characters to be present within password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MinNumericSpecialCharacters';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[ProhibitUserData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user personal data is allowed within password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'ProhibitUserData';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[ExpiresAfterDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of days after which password expires', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'ExpiresAfterDays';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MaxPasswordAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Maximum number of failed attempts after which user account has to be locked', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MaxPasswordAttempts';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[PasswordLockoutTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration (in seconds) for which the user account has to be locked when maximum number of failed attempts is reached', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'PasswordLockoutTime';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[AllowPasswordReuse].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether old and new password can be same while changing password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'AllowPasswordReuse';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PasswordPolicy].[MinSpecialCharacters].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum number of special characters password should contain', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PasswordPolicy', @level2type = N'COLUMN', @level2name = N'MinSpecialCharacters';


GO
PRINT N'Creating [dbo].[PayAdjustment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The Pay Adjustment types that are available in the system and it''s formula, if applicable.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment';


GO
PRINT N'Creating [dbo].[PayAdjustment].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[PayAdjustment].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayAdjustment].[IsDeduction].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this pay adjustment is used for deductions', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'IsDeduction';


GO
PRINT N'Creating [dbo].[PayAdjustment].[PayAdjustmentCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay Adjsutment Code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'PayAdjustmentCode';


GO
PRINT N'Creating [dbo].[PayAdjustment].[OperatorType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines what type of operator should use in formula', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'OperatorType';


GO
PRINT N'Creating [dbo].[PayAdjustment].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayAdjustment].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayAdjustment].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayAdjustment].[AllowEmpEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether an employee can use this as type while adding pay adjustment from the employee dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'AllowEmpEntry';


GO
PRINT N'Creating [dbo].[PayAdjustment].[UseEmpPayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to use employee''s pay rate or pay adjustment''s pay per unit while calculating Earnings / Deductions using formula', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'UseEmpPayRate';


GO
PRINT N'Creating [dbo].[PayAdjustment].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayAdjustment].[PayPerUnit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rate that has to be used while calculating amount', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'PayPerUnit';


GO
PRINT N'Creating [dbo].[PayAdjustment].[PayAdjustmentName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'PayAdjustmentName';


GO
PRINT N'Creating [dbo].[PayAdjustment].[PayAdjustmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'PayAdjustmentID';


GO
PRINT N'Creating [dbo].[PayAdjustment].[UseFormula].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to use formula to calculate the amount', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'UseFormula';


GO
PRINT N'Creating [dbo].[PayAdjustment].[UnitLabel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the unit (Ex: miles)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustment', @level2type = N'COLUMN', @level2name = N'UnitLabel';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Data of Pay Adjustments that have been entered into the system against a Pay Adjustment type.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[IsModified].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether any of the pay adjsutment data field values are changed/modified', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'IsModified';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[EmpApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the manager approved this entry or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'EmpApproved';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[PayAdjustmentDataID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'PayAdjustmentDataID';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[ClosedType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whether the pay adjsutment data entry is closed/locked/open/converted(refers enum TimeSlicePre.ClosedTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'ClosedType';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee to whom this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[PayAdjustmentDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date for which the pay adjustment is added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'PayAdjustmentDate';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[MgrApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the employee approved this entry or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'MgrApproved';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[Unit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of quantity for which pay adjsutment is added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'Unit';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[Notes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Notes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'Notes';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[PayPerUnit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Amount to be paid/deducted for each unit, this field is used in calcualtion whenever the pay adjsutment for which data is added uses Calcualtion operator to calculate pay adjustment Earnings/Deduction"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'PayPerUnit';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[PayAdjustmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference PayAdjustment.PayAdjustmentID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'PayAdjustmentID';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[PayAdjustmentData].[Amount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Total amount to be paid/deducted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayAdjustmentData', @level2type = N'COLUMN', @level2name = N'Amount';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Payroll policy containing the settings which define how time is processed.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundLongDownToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defined the duration to which the long meal duration is rounded down to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundLongDownToSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolSchedToWork].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether an employee must be scheduled to work on Holiday, to be eligible for holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolSchedToWork';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the type of break i.e. Break Not Allowed/Auto Break/Manual Break (refer''s PayrollPolicy.LunchBreakTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremPunchSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the amount of time (in seconds) the employee should work from the specified punch without a begin meal to get meal premium', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremPunchSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolQualifyOnTimeWorkType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to Qualify the employee using worked days or Qualify the employee on scheduled shift(s) or Qualify the employee on whole work shift (refer''s enum Payroll Policy.HolidayQualifyOnTimeWorkedTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolQualifyOnTimeWorkType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundOutType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the standard rounding type for clock-out i.e. Nearest/Previous/Next for standard rounding, refers enum PayrollPolicy.RoundingTypes"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundOutType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakDurationRoundingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for break duration (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakDurationRoundingType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoMealEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether swipe and go settings for scheduled start or end meal are enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoMealEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PayPeriodMonthlyDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start day of monthly pay period(enum type PayrollPolicy.PayPeriodsMonthly)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PayPeriodMonthlyDay';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s PayType.PayTypeID, the pay type indicates which pay type to use when generating the time sheets"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolPayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundLongLessThanSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defiens the duration in seconds, when the meal duration is less than this field specfied value the long lunch rounding settings are applied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundLongLessThanSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundInTimesTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the duration to which the clock-in is rounded to"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundInTimesTo';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkLunchSecsToSubtract].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the amount of duration in seconds to be subtracted from work hours', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkLunchSecsToSubtract';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundDownLessThanSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines a duration in seconds, when lunch duration is less than this field specified value the short lunch rounding-down settings are applied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundDownLessThanSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundShortUpToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the duration to which the short lunch is rounded up to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundShortUpToSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[AllowTORReplaceTimeSheets].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether a time off can replace a time sheet generated from schedule or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'AllowTORReplaceTimeSheets';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundInAfterSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" after the schedule time, within which when employee''s clock-in falls, the time card is ruonded to respective schedule time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundInAfterSchedule';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundOutSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration to which the end break punch time is rounded to, with reepect to specified BreakRoundOutType"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundOutSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[CustomPayPeriodDateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the custom pay periods are absolute or relative', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'CustomPayPeriodDateType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[WorkWeekStartDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day from which week starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'WorkWeekStartDay';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[CountTimeTowardsType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines the date to which the time belong to (refer''s enum PayrollPolicy.CountTimeTowardsTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'CountTimeTowardsType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoTransferWindowSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" for the schedule start or end transfer, if the swipe and go punch occurs within specified window, the punch is considered as ransfer to the Scheduled Labor Level."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoTransferWindowSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkHoursFactorEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whether work hour factor is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkHoursFactorEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PayPeriodSemiMonthlyDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start day of semi-monthly pay period (enum type PayrollPolicy.PayPeriodsSemiMonthly)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PayPeriodSemiMonthlyDay';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundShortUpEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines short meals rounding-up is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundShortUpEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MissingPunchBufferSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined the duration for missing punch buffer in seconds, a missing punch is generated if no opposing punch it found after the specifed duration for this field"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MissingPunchBufferSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundShortUpAtLeastSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined the duration in seconds, when break duration is at least the value specified for this field the break duration rounding-upsettings are applied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundShortUpAtLeastSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MaxShiftLengthSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the maxmimum shift legth"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MaxShiftLengthSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[NineEightyRuleEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether Nine-Eighty rule is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'NineEightyRuleEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremWorkAllowedPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayType.PayTypeID of the pay type that should use while adding meal premium shift when employee works specified amount of time from clock in without a begin meal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremWorkAllowedPayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[WorkDaySplitAt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defiens the time at which the day starts.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'WorkDaySplitAt';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundShortUpAtLeastSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined the duration in seconds, when lunch duration is at least  this feild specified value the short lunch rounding-up settings are applied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundShortUpAtLeastSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolMustWorkSchedIfCompanyWork].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether the employee must work their whole scheduled shift on the Holiday, if the holiday is marked as company worked holiday. So that he is eligible for holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolMustWorkSchedIfCompanyWork';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkWeeksCountForAvgWork].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined Number of weeks to use in the calculation of average hours, for worked holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkWeeksCountForAvgWork';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolUnworkWeeksCountForAvgWork].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines Number of weeks to use in the calculation of average hours, for unworked holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolUnworkWeeksCountForAvgWork';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[AllowTORReplacePartTimeSheets].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether a time off can replace a part of the time sheet generated from schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'AllowTORReplacePartTimeSheets';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremPunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the meal premium settings related to a particular punch is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremPunchEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremPunchAllowedPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to PayType.PayTypeID that should use while adding meal premium shift when employee works specified amount of time from the specfied punch without a begin meal

"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremPunchAllowedPayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RejectOpposingPunchWithinSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration in seconds, when a opposing punch falls within specified value it is rejected"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RejectOpposingPunchWithinSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundInType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for Begin Break punch time (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundInType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremPunchType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the type of the punch after which the employee should work specied amount of time to get the meal premium', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremPunchType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PaidBreakShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include paid breaks in shift differential calculations', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PaidBreakShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundShortDownToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the duration to which short break duration is rounded down to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundShortDownToSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkSecsToAdd].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the amount of duration in seconds to be added for each worked holiday', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkSecsToAdd';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PayrollPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PayrollPolicyName';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PaidLunchShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include paid meals in shift differential calculations.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PaidLunchShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolQualifyRequiredToWorkType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines whether an employee has to work ""Before And After"" or ""Before or After"" (refer''s PayrollPolicy.HolidayQualifyRequiredToWorkTypes) a specified duration with respect to defined ""HolQualifyOnTimeWorkType"""', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolQualifyRequiredToWorkType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[UseBlendedRateEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the use blended rate is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'UseBlendedRateEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremWorkEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the meal premium settings related to clock in is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremWorkEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundOutBeforeSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" before the schedule time, within which when employee''s clock-out falls, the clock-put is ruonded to respective schedule time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundOutBeforeSchedule';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolMinSecsDayBefore].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines minimum amount of duration an employee has to work. The value is used in combination with ""HolQualifyOnTimeWorkType and HolQualifyRequiredToWorkType"" to decide the eligibility of an employee for holoday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolMinSecsDayBefore';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundOutTimesTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the duration to which the clock-out is rounded to"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundOutTimesTo';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolUnworkSecsToAdd].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the amount of duration in seconds to be added for each unworked holiday', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolUnworkSecsToAdd';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchDurationRoundingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for acutal meal duration (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchDurationRoundingType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundInSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration to which the begin break punch time is rounded to, with reepect to specified BreakRoundInType"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundInSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakDurationRoundingEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the break duration rounding is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakDurationRoundingEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[IsDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this is a defualt policy or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'IsDefault';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundInBeforeSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" before the schedule time, within which when employee''s clock-in falls, the clock-in is ruonded to respective scheduled time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundInBeforeSchedule';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundShortUpToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the duration to which short break duration is rounded-up to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundShortUpToSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremPunchAllowedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the length of the shift (in seconds) that should be added as meal premium when employee works specified amount of time from the specfied punch without a begin meal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremPunchAllowedSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the type of lucnh i.e. Lunch Not Allowed/Auto Lunch/Manual Lunch (refer''s PayrollPolicy.LunchBreakTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundAdditionalSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the duration in seconds to be added to time sheet if short lunch is rounded', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundAdditionalSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundInSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the duration in seconds to which Begin Meal punch time is rounded to, based on LunchRoundInType rounding type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundInSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolApplyOnNextDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to apply the holiday for next day', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolApplyOnNextDay';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundOutSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the duration in seconds to which End Meal punch time is rounded to based on LunchRoundOutType rounding type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundOutSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundLongEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to round the meal duration down when long meal are taken', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundLongEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundShortDownToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the duration in seconds to which meal duration is rounded down', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundShortDownToSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoTransferEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether swipe and go settings for scheduled Transfer are enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoTransferEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[PayPeriodType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay Period Type (enumration type PayrollPolicy.PayPeriodTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'PayPeriodType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolUnworkWeeksCountForAvgSched].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines Number of weeks to use in the calculation of average schedule hours, for un worked holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolUnworkWeeksCountForAvgSched';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RejectDuplicatePunchWithinSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration in seconds, when a duplicate punch falls within specified value it is rejected"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RejectDuplicatePunchWithinSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines worked holiday settings to be applied (refers enum PayrollPolicy.HolidayWorkTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundShortDownEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines short meals rounding -down is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundShortDownEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremWorkSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the amount of time (in seconds) the employee should work from clock in without a begin meal to get meal premium', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremWorkSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakDurationRoundingSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration to which break duration is rounded to, with reepect to specified BreakDurationRoundingType"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakDurationRoundingSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoMealWindowSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" for the schedule start or end meal, if the swipe and go punch occurs within specified window, the punch is considered as Start or End Meal"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoMealWindowSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolQualifyOnTimeWorkRequired].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to qualify an employee based on worked time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolQualifyOnTimeWorkRequired';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[DefaultShiftLengthSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the default shift duration in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'DefaultShiftLengthSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolUnworkType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines unworked holiday settings to be applied (refers enum PayrollPolicy.HolidayWorkTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolUnworkType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[GraceMaxSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, used to determine the schedule that falls within specified GraceMax duration after clock-in"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'GraceMaxSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundInType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for Being Meal punch time (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundInType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolMinSecsDayAfter].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines minimum amount of duration an employee has to work. The value is used in combination with ""HolQualifyOnTimeWorkType and HolQualifyRequiredToWorkType"" to decide the eligibility of an employee for holiday"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolMinSecsDayAfter';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundAdditionalEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether additional lunch rounding settings to be applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundAdditionalEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundOutAfterSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" before the schedule time, within which when employee''s clock-out falls, the clock-out is ruonded to respective scheduled time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundOutAfterSchedule';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundDownLessThanSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined the duration in seconds, when break duration is less than value specified for this field the break duration rounding-down settings are applied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundDownLessThanSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundAdditionalPayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the pay type with which the additinal duration is added to time sheet if short meal is rounded', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundAdditionalPayType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolMinDaysOfEmployment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the number of days an employee should work to be eligible for holiday', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolMinDaysOfEmployment';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[RoundInType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the standard rounding type for clock-in punch i.e. Nearest/Previous/Next for standard rounding, refers enum PayrollPolicy.RoundingTypes"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'RoundInType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to activate holiday rules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundOutType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for End Break punch time (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundOutType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[MealPremWorkAllowedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the length of the shift (in seconds) that should be added as meal premium when employee works specified amount of time from clock in without a begin meal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'MealPremWorkAllowedSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkWeeksCountForAvgSched].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines Number of weeks to use in the calculation of average schedule hours, for worked holdiay"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkWeeksCountForAvgSched';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundShortDownEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whether rounding-down of short break duration is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundShortDownEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[AllowManBreakOverride].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether manual meals are allowed whenever the break type for this payroll poicy is ""Auto Lunch"" and If an employee manually clocks out for the meal, the automatic meal is not created."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'AllowManBreakOverride';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[DaySplitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whethe the day split is enabled.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'DaySplitEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchDurationRoundingEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether actual meal duration rounding enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchDurationRoundingEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[BreakRoundShortUpEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whether rounding-uo of of short break duration is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'BreakRoundShortUpEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolWorkHoursFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defined an integer value, by which the worked hours are multiplied"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolWorkHoursFactor';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolUnworkLunchSecsToSubtract].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the amount of duration in seconds to be subtracted from work hours', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolUnworkLunchSecsToSubtract';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchRoundOutType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines rounding type for End Meal punch time (refer''s enum PayrollPolicy.RoundingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchRoundOutType';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[LunchDurationRoundingSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the duration in seconds to which meal duration is rounded to based on LunchRoundOutType rounding type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'LunchDurationRoundingSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoBreakWindowSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration in seconds, defines the ""window"" for the schedule start or end break, if the swipe and go punch occurs within specified window, the punch is considered as Start or End Break"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoBreakWindowSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[HolApplyTowardsOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether holiday hours apply towards overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'HolApplyTowardsOvertime';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[AllowManLunchOverride].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether manual meals are allowed whenever the lunch type for this payroll poicy is ""Auto Lunch"" and If an employee manually clocks out for the meal, the automatic meal is not created."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'AllowManLunchOverride';


GO
PRINT N'Creating [dbo].[PayrollPolicy].[SwipeNGoBreakEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether swipe and go settings for scheduled start or end break are enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicy', @level2type = N'COLUMN', @level2name = N'SwipeNGoBreakEnabled';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User assignment to payroll policies.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[PayrollPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'PayrollPolicyAssignID';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the employee to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Automatic break details and associated settings for a payroll policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[PayrollPolicyBreakAutoDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyBreakAutoDetailID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Refrence PayrollPolicy.PayrollPolicy, entity ID of the payroll policy for which the rule has been set up"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[BreakSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration of the break', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'BreakSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[IsBreakPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether break is paid or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'IsBreakPaid';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[ApplyBreakToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether break is applied to overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'ApplyBreakToOvertime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[BreakStartSecsAfterClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration after Clock-In, after which the break shoudl start"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'BreakStartSecsAfterClockIn';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[BreakStartAtTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time at which break should start', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'BreakStartAtTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[BreakEndSecsAfterClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration after Clock-In, after which the break should end"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'BreakEndSecsAfterClockIn';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[AutoBreakType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type that specifies the start time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'AutoBreakType';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakAutoDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakAutoDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Details for each manual break for a payroll policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[PayrollPolicyBreakManDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyBreakManDetailID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[BreakAvailableAfterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration after which the break will be available', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'BreakAvailableAfterSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[IsBreakPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the break is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'IsBreakPaid';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[MaxBreakPaidSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Maximum paid duration of break', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'MaxBreakPaidSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[ApplyBreakToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether break is applicable for overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'ApplyBreakToOvertime';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyBreakManDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyBreakManDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[PayrollPolicyCustomPayPeriodID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'PayrollPolicyCustomPayPeriodID';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of the custom pay period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of the custom pay period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start Date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end Date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyCustomPayPeriod].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyCustomPayPeriod', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the automatic lunch details for a payroll policy and the associated settings.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[PayrollPolicyLunchAutoDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyLunchAutoDetailID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[LunchSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration of auto lunch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'LunchSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[IsLunchPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether auto lunch is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'IsLunchPaid';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[ApplyLunchToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detemines whether auto lunch duration is applicable for overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'ApplyLunchToOvertime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[LunchStartSecsAfterClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration after Clock -In at which lunch will be available', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'LunchStartSecsAfterClockIn';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[LunchStartAtTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time at which lunch starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'LunchStartAtTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[LunchEndSecsAfterClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration after Clock-In at which lunch should end', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'LunchEndSecsAfterClockIn';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[AutoLunchType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type that specifies the start time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'AutoLunchType';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchAutoDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchAutoDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Manual lunch details for a payroll policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[PayrollPolicyLunchManDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyLunchManDetailID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[LunchAvailableAfterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration after which lunch is availabel', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'LunchAvailableAfterSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[IsLunchPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whethe lunch is paid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'IsLunchPaid';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[MaxLunchPaidSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Maximum allowed lunch duration', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'MaxLunchPaidSecs';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[ApplyLunchToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether lunch duration is applicable for overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'ApplyLunchToOvertime';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyLunchManDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyLunchManDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the overtime rule assignments to a payroll policy and the associated thresholds.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[PayrollPolicyOvertimeAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'PayrollPolicyOvertimeAssignID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[OvertimeRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference OvertimeRule.OvertimeRuleID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'OvertimeRuleID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the precedence of the overtime rules application during overtime calcualtion', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[OvertimePayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference PayType.PayTypeID of overtime pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'OvertimePayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[Threshold].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the duration limit, i.e. when work time exceeds this limit the extra time is considered for the overtime calcualtion based on rule type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'Threshold';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overtime Matrix, assignment of a non-work pay type to an overtime level of a pay type.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[PayrollPolicyOvertimeLevelID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'PayrollPolicyOvertimeLevelID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[PayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayrollPolicy.PayrollPolicyID of the policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'PayrollPolicyID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[LevelIndex].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Level of over time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'LevelIndex';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"References PayType.PayTypeID, i.e. pay type ID of the can be overtime pay types"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[WorkOvertimePaytypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference PayType.PayTypeID of overtime pay type, defines the overtime pay type to be used to pay the overtime duration of work shifts."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'WorkOvertimePaytypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[OvertimePayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference PayType.PayTypeID of overtime pay type, defines the overtime pay type to be used to pay the overtime duration against the respective defined ""can be overtime/work"" pay type"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'OvertimePayTypeID';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayrollPolicyOvertimeLevel].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayrollPolicyOvertimeLevel', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the pay type entries that are used to tack hours on time card', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType';


GO
PRINT N'Creating [dbo].[PayType].[DeductFromPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PayType ID that this pay type will use to deduct from time off', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'DeductFromPayTypeID';


GO
PRINT N'Creating [dbo].[PayType].[IsWorkType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether this paytype is a work paytype', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'IsWorkType';


GO
PRINT N'Creating [dbo].[PayType].[IncludeInBlendedRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true hours in this paytype will count towards blended rate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'IncludeInBlendedRate';


GO
PRINT N'Creating [dbo].[PayType].[PayTypeName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'PayTypeName';


GO
PRINT N'Creating [dbo].[PayType].[CanBeOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The hours under this pay type can be overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'CanBeOvertime';


GO
PRINT N'Creating [dbo].[PayType].[DefaultPayLevelRateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The default paylevel for this paytype (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'DefaultPayLevelRateType';


GO
PRINT N'Creating [dbo].[PayType].[PayTypeCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code of the pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'PayTypeCode';


GO
PRINT N'Creating [dbo].[PayType].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PayType].[TimeOffPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'References PayType.PayTypeID, defines the time off pay type when "Apply To Time Off" is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'TimeOffPayTypeID';


GO
PRINT N'Creating [dbo].[PayType].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[PayType].[IsOvertimeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether this paytype is an overtime type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'IsOvertimeType';


GO
PRINT N'Creating [dbo].[PayType].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PayType].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PayType].[ApplyToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true hours in this paytype will count towards overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ApplyToOvertime';


GO
PRINT N'Creating [dbo].[PayType].[ApplyToTimeOff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether pay type applies to Time Off Accruals', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ApplyToTimeOff';


GO
PRINT N'Creating [dbo].[PayType].[AllowShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"If ture, hours associated with this pay type will get shift differentials defined under the shift differential policy with UsePayTypeQualifier enabled"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'AllowShiftDiff';


GO
PRINT N'Creating [dbo].[PayType].[DeductFromPayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If True, used time on this pay type will deduct from a different pay type''s Time Off balance.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'DeductFromPayType';


GO
PRINT N'Creating [dbo].[PayType].[CountTowardsHolidayMin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true this pay type hours will be counted towards holiday rules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'CountTowardsHolidayMin';


GO
PRINT N'Creating [dbo].[PayType].[OverridesAbsence].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This paytype overrides absence', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'OverridesAbsence';


GO
PRINT N'Creating [dbo].[PayType].[ColorCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Color code for the pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ColorCode';


GO
PRINT N'Creating [dbo].[PayType].[OvertimeFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Factor for overtime paytype', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'OvertimeFactor';


GO
PRINT N'Creating [dbo].[PayType].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[PayType].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PayType].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PayType', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingData].[IsModified].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingData', @level2type = N'COLUMN', @level2name = N'IsModified';


GO
PRINT N'Creating [dbo].[PointsTrackingData].[TimeSlicePreModifierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to TimeSlicePreModifierID  of the modifier applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingData', @level2type = N'COLUMN', @level2name = N'TimeSlicePreModifierID';


GO
PRINT N'Creating [dbo].[PointsTrackingData].[PointsSource].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identifies the source of point (Exception, Manual Adjustment, Perfect Attendance)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingData', @level2type = N'COLUMN', @level2name = N'PointsSource';


GO
PRINT N'Creating [dbo].[PointsTrackingData].[Note].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingData', @level2type = N'COLUMN', @level2name = N'Note';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores information about points earned by and notifications sent.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the user to whome this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[PointsTrackingNoticeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PointsTrackingNotice.PointsTrackingNoticeID of points tracking notice based on which points are calculated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingNoticeID';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[Points].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Points of type points tracking rule (pointed by PointsTrackingRuleID) earned by the user against the period specified in the notice (pointed by PointsTrackingNotice)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'Points';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[PointsTrackingRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrakcingRuleID of the rule to based on which the points are calculated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingRuleID';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[ThresholdCrossed].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether points of user crossed threshold in the notice (pointed by PointsTrackingNoticeID)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'ThresholdCrossed';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[NotifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time when last notification send', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'NotifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[HelpFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Document sent along with notification', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'HelpFile';


GO
PRINT N'Creating [dbo].[PointsTrackingDetail].[HelpFileName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the document sent along with notification', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingDetail', @level2type = N'COLUMN', @level2name = N'HelpFileName';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Define the points tracking notification settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[PointsTrackingNoticeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'PointsTrackingNoticeID';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[RecipientType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of recipient of this notice (Values: Manager = 0, Employee = 1 and Manager, Employee = 2 )', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'RecipientType';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[HelpFileName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the help file uploaded', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'HelpFileName';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[AttachHelpFileEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to attach the help file (if provided) to the notification', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'AttachHelpFileEnabled';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[HelpFile].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'File to be attached to the notice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'HelpFile';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[NoticeName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of this notice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'NoticeName';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[ActionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the type of action to take when points treshold is crossed (Values: Email = 0, Alert = 1, Prompt Alert = 2 and Message = 3)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'ActionType';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[Threshold].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Points threshold. Notice will be sent when threshold is crossed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'Threshold';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[PointsTrackingPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PointsTrackingPolicy.PointsTrackingPolicyID of points tracking policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyID';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[RollingPeriodDuration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Length of interval for which points are calculated to check whether threshold is crossed or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'RollingPeriodDuration';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[NoticeText].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text to include in the notice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'NoticeText';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[RollingPeriodType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of interval for which points are calculated to check whether threshold is crossed or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'RollingPeriodType';


GO
PRINT N'Creating [dbo].[PointsTrackingNotice].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNotice', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines rule groups for which the particular notification is applied ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[PointsTrackingNoticeDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingNoticeDetailID';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[PointsTrackingNoticeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingNoticeID of notice to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingNoticeID';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[PointsTrackingRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingRuleID of the rule selected by this record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingRuleID';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingNoticeDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingNoticeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cotains the points tracking entries that dictate how employee''s attendance excpetions are treated within the system with respects to certain thresholds that the administrator configures', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity Field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[PointsTrackingPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[PointsTrackingPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyName';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this policy is active or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[DesignatedPersonUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to the UserInfo.UserID of the employee who is the designated person to receive notification', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'DesignatedPersonUserID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicy].[LocationLLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'LLID of the labor level representing location. Used to find location manager for sending notification.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicy', @level2type = N'COLUMN', @level2name = N'LocationLLID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the user assignment to points tracking policies', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[PointsTrackingPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Idenity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyAssignID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[PointsTrackingPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingPolicyID of the policy that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the user to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the points tracking rule for a policy, ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity Field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[PointsTrackingRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'PointsTrackingRuleID';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[PointsTrackingPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingPolicyID of the policy to which this rule belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyID';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[RuleName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of this rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'RuleName';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PointsTrackingRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the settings for particualr points tracking rule detail for a Point Tracking rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[PointsTrackingRuleDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity id', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingRuleDetailID';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[PointsTrackingRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingRuleID of the Points tracking rule to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingRuleID';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[PointsTrackingPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PointsTrackingPolicyID of the Points tracking policy to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'PointsTrackingPolicyID';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[ExceptionPolicyRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ExceptionPolicyRuleID of the exception rule chosen by the user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyRuleID';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[UnexcusedPoints].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Points entered against the exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'UnexcusedPoints';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[PointsTrackingRuleDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PointsTrackingRuleDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Preference].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains basic settings and access control for features in the Manager and Employee Dashboard.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference';


GO
PRINT N'Creating [dbo].[Preference].[ViewEmpNamesOnTimeOffCalendar].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This column is dependent on ViewAllEmpOnTimeOfCalendar column is true so that the manager can also see the name of the employee''s doesnt have access', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ViewEmpNamesOnTimeOffCalendar';


GO
PRINT N'Creating [dbo].[Preference].[ExpandAllTimeCardsByDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Expand All time cards by default in Employee home dashboard or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ExpandAllTimeCardsByDefault';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 5 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn5';


GO
PRINT N'Creating [dbo].[Preference].[DateFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Date format, to display a date within the site"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DateFormatType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column5Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for fifth info type of third row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column5Value';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee info should be dsiplayed within Time Card Screen of Manager Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ShowOnlyActiveLLScheduleTemp].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This field is used to set only Active  Labor Level in Schedule Template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ShowOnlyActiveLLScheduleTemp';


GO
PRINT N'Creating [dbo].[Preference].[GroupShiftsByTransactionDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This column is used to order by Actual Punch Date instead of ApplyDate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'GroupShiftsByTransactionDate';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column4Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines fourth info of the Employee to be displayed in the second Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column4Type';


GO
PRINT N'Creating [dbo].[Preference].[StatusBoardPunchTimeEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether the ""Transaction Date Time"" to be displayed in the Status Board"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'StatusBoardPunchTimeEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempHasRegOTEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether time card for Reg/OT is allowed while submitting template entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempHasRegOTEntry';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempEntryLimitTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Template Entry is limited only to particular selected pay types', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempEntryLimitTypes';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column5Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines fifth  info of the Employee to be displayed in the First Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column5Type';


GO
PRINT N'Creating [dbo].[Preference].[DisplayExceptionsScreen].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display exceptions pop-up upon the click of exception badger in the manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DisplayExceptionsScreen';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardApprovalMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message that needs to be diplayed above Approve All check box in Employee Home Time Card', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardApprovalMessage';


GO
PRINT N'Creating [dbo].[Preference].[AllowViewHolidayOnTORCalender].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allow employees to see holidays on calendar', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowViewHolidayOnTORCalender';


GO
PRINT N'Creating [dbo].[Preference].[ActionMatrixEntryLimitTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which limits the paytypes for express entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionMatrixEntryLimitTypes';


GO
PRINT N'Creating [dbo].[Preference].[IncludeMgrForMissingPunch].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show manager in missing punch popup', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'IncludeMgrForMissingPunch';


GO
PRINT N'Creating [dbo].[Preference].[ActionMatrixEntryEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether matrix entry screen is enabled for employee or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionMatrixEntryEnabled';


GO
PRINT N'Creating [dbo].[Preference].[MobileDisplayAllLLEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display all labor levels in mobile time sheet entry screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileDisplayAllLLEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ActionExpressEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the action express entry type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionExpressEntryType';


GO
PRINT N'Creating [dbo].[Preference].[TORCalenderEmpGroupType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determined what employees to be dispalyed within time off request calender (references enum Preference.PTORequestCalenderEmployeeGroupTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TORCalenderEmpGroupType';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether Work/Non-Work/Both time card can be entered through time sheet, references enum Preference.ActionSectionEntryTypes"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetEntryType';


GO
PRINT N'Creating [dbo].[Preference].[AllowMgrApprovedPunchEdit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the user can edit the pay adjsutment entry/punch if it''s been already approved by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowMgrApprovedPunchEdit';


GO
PRINT N'Creating [dbo].[Preference].[HideUnpaidHours].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hide unpaid hours info in employee dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'HideUnpaidHours';


GO
PRINT N'Creating [dbo].[Preference].[AllowArbitaryLLs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allow Employee to add new labor level details or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowArbitaryLLs';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether Work/Non-Work/Both time card can be entered through template entry, references enum Preference.ActionSectionEntryTypes"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempEntryType';


GO
PRINT N'Creating [dbo].[Preference].[AllowChangePassword].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the logged-in user can change his password', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowChangePassword';


GO
PRINT N'Creating [dbo].[Preference].[AllowPreferenceOverride].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decide''s whether preference settings can be overriden by the employee assigned that particular policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowPreferenceOverride';


GO
PRINT N'Creating [dbo].[Preference].[AllowViewStatusBoard].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Decides whether ""Status Board"" widget is enabled "', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowViewStatusBoard';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column3Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines third info of the Employee to be displayed in the First Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column3Type';


GO
PRINT N'Creating [dbo].[Preference].[StatusBoardEmpDisplayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Decides Which all Employee''s status should be shown on the Employee Home Status board widget(Values: All Employees = 0, Home Labor Level = 1, Primary Group = 2)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'StatusBoardEmpDisplayType';


GO
PRINT N'Creating [dbo].[Preference].[ScheduleDefaultViewType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines by default in what view type Schedules will be displayed in the Emp Dashboard (references enum Preference.ScheduleDefaultViewTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ScheduleDefaultViewType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column4Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines fourth info of the Employee to be displayed in the third Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column4Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardSummaryViewEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Summary View of time card screen in manager dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardSummaryViewEnabled';


GO
PRINT N'Creating [dbo].[Preference].[PreferenceCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Preference Code', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'PreferenceCode';


GO
PRINT N'Creating [dbo].[Preference].[ApplyScheduledLLsSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of minutes before and after the punch when schedules apply to scheduled {LaborLevels}', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ApplyScheduledLLsSecs';


GO
PRINT N'Creating [dbo].[Preference].[IncludeMgrForExceptions].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show manager in exceptions popup', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'IncludeMgrForExceptions';


GO
PRINT N'Creating [dbo].[Preference].[ActionPeriodHasRegOTEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether time card for Reg/OT is allowed while submitting period entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPeriodHasRegOTEntry';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 7 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn7';


GO
PRINT N'Creating [dbo].[Preference].[DefaultToClockOutAfterClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether ""Clock-Out"" action should be highlighted by defualt after ClockIn-In in Emp Dashboard"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DefaultToClockOutAfterClockIn';


GO
PRINT N'Creating [dbo].[Preference].[AllowViewEmpNamesOnTORCalender].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to show the employee names on the calender in employee home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowViewEmpNamesOnTORCalender';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 6 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn6';


GO
PRINT N'Creating [dbo].[Preference].[ReportsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Reports button is enabled in Emp Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ReportsEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetEntryLimitTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Time Sheet entry is limited only to particular pay types', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetEntryLimitTypes';


GO
PRINT N'Creating [dbo].[Preference].[ArbitraryLaborLevelOffset].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'For arbitrary labor levels, this acts as an offset for start date.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ArbitraryLaborLevelOffset';


GO
PRINT N'Creating [dbo].[Preference].[TimeFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Time format type, to display time throught the application"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeFormatType';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetEntryEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether Time Sheet Entry Tab witin Actions Pop Up of Emp Dashboard is displayed (i.e. enabled)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetEntryEnabled';


GO
PRINT N'Creating [dbo].[Preference].[MgrInfoModalDisabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the information to be displayed within Mgr Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MgrInfoModalDisabled';


GO
PRINT N'Creating [dbo].[Preference].[EmpInfoModalDisabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether onformation overlay should be shown in Emp Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'EmpInfoModalDisabled';


GO
PRINT N'Creating [dbo].[Preference].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column2Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for second info type of third row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column2Value';


GO
PRINT N'Creating [dbo].[Preference].[StatusBoardViewAllEmpEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allows the manager to view all the employees in the manager dashboard status board', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'StatusBoardViewAllEmpEnabled';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 4 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn4';


GO
PRINT N'Creating [dbo].[Preference].[ActionPeriodEntryLimitTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Period Entry is limited only to particular selected pay types', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPeriodEntryLimitTypes';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column4Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for frouth info type of first row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column4Value';


GO
PRINT N'Creating [dbo].[Preference].[AllowViewTORCalender].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether ""View Time Off Reuest Calendar"" button in Time Off Pop Up is available or not in Time Off Pop Up within Emp Dashboard"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AllowViewTORCalender';


GO
PRINT N'Creating [dbo].[Preference].[ActionPunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Punch Tab within Actions Pop Up of Emp Dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPunchEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column4Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines frouth info of the Employee to be displayed in the First Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column4Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column3Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for third info type of first row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column3Value';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column2Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines second info of the Employee to be displayed in the third Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column2Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column1Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines first info of the Employee to be displayed in the second Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column1Type';


GO
PRINT N'Creating [dbo].[Preference].[ActionMatrixHasCopyFormat].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Copy from time sheet is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionMatrixHasCopyFormat';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetExpressEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enables action timesheet express entry screen in employee home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetExpressEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column2Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines second info of the Employee to be displayed in the First Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column2Type';


GO
PRINT N'Creating [dbo].[Preference].[EmpHomePayAdjustmentsLabel].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Label to be displayed in Employee Home instead of pay adjustments', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'EmpHomePayAdjustmentsLabel';


GO
PRINT N'Creating [dbo].[Preference].[ActionExpressHasCopyFormat].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to copy the settings from Time Sheet Entry Settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionExpressHasCopyFormat';


GO
PRINT N'Creating [dbo].[Preference].[StatusBoardNotesEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Decide''s whethet ""Notes"" column within Status board widget should be displayed or not"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'StatusBoardNotesEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardApprovalMessageEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display message above Approve All check box in Employee Home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardApprovalMessageEnabled';


GO
PRINT N'Creating [dbo].[Preference].[LLDetailDisplayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Format type to display Labor Level Names', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'LLDetailDisplayType';


GO
PRINT N'Creating [dbo].[Preference].[DontShowAknowledgedExceptions].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether aknowledged exceptions can be viewed on time card or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DontShowAknowledgedExceptions';


GO
PRINT N'Creating [dbo].[Preference].[ActionPeriodEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether Work/Non-Work/Both time card can be entered through period entry, references enum Preference.ActionSectionEntryTypes"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPeriodEntryType';


GO
PRINT N'Creating [dbo].[Preference].[TOREnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines whether ""Request Time Off Button"" within Time Off pop up is available or not"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TOREnabled';


GO
PRINT N'Creating [dbo].[Preference].[HideTransferOnEmpDash].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the transfer action should be hidden in employee home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'HideTransferOnEmpDash';


GO
PRINT N'Creating [dbo].[Preference].[TimeOffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Time Off button within Emp Dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeOffEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column1Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for first info type of second row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column1Value';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column2Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines second info of the Employee to be displayed in the second Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column2Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column4Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for fourth info type of third row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column4Value';


GO
PRINT N'Creating [dbo].[Preference].[TimeDurationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Duration type (hours/minutes),to display duration length throught the application"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeDurationType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column2Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for second info type of second row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column2Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionMatrixEntryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the action express entry type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionMatrixEntryType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column5Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines fifth info of the Employee to be displayed in the third Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column5Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column3Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for third info type of second row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column3Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetEntryFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'References enum Preference.ActionEntryFormatTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetEntryFormatType';


GO
PRINT N'Creating [dbo].[Preference].[PreferenceName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'PreferenceName';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardDefaultPeriodType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the default date range, of which the time card of employeee is displayed (references Preference.TimeCardDefaultPeriodTypes)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardDefaultPeriodType';


GO
PRINT N'Creating [dbo].[Preference].[IsDefault].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this is a default policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'IsDefault';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 3 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn3';


GO
PRINT N'Creating [dbo].[Preference].[MessagesEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to show the messages button should be shown to the employee or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MessagesEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardApprovalsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Employee can approve time card in Emp Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardApprovalsEnabled';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 2 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn2';


GO
PRINT N'Creating [dbo].[Preference].[ActionDefaultDateRangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the default date range for Range selectors in employee home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionDefaultDateRangeType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column1Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines first info of the Employee to be displayed in the third Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column1Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column5Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines fifth info of the Employee to be displayed in the second Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column5Type';


GO
PRINT N'Creating [dbo].[Preference].[DisplayMissingPunchesScreen].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display the missing punch pop-up upon the click of missing punch badger in the manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DisplayMissingPunchesScreen';


GO
PRINT N'Creating [dbo].[Preference].[ActionExpressHasRegOTEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Enables the Reg,OT timesheet express entry types"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionExpressHasRegOTEntry';


GO
PRINT N'Creating [dbo].[Preference].[ViewAllEmpsOnTimeOffCalendar].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This column is used to view all employee time off in timeoff calendar even though the logged in manager doesn''t have access to the users', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ViewAllEmpsOnTimeOffCalendar';


GO
PRINT N'Creating [dbo].[Preference].[FullNameType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name format for name of employees to be displayed within web site', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'FullNameType';


GO
PRINT N'Creating [dbo].[Preference].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Preference].[ActionExpressEntryFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the information of the entry format type for timesheet express entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionExpressEntryFormatType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column3Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for third info type of third row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column3Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempPopulateFromSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the employee can populate the time sheet from Schedules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempPopulateFromSchedule';


GO
PRINT N'Creating [dbo].[Preference].[ActionEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Action Buttons within Emp Dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column1Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for first info type of third row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column1Value';


GO
PRINT N'Creating [dbo].[Preference].[SessionTimeoutSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Session Time Out duration', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'SessionTimeoutSecs';


GO
PRINT N'Creating [dbo].[Preference].[ActionExpressEntryLimitTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which limits the paytypes for express entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionExpressEntryLimitTypes';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardMessageButtonText].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text of the button in the pop up that has to be displayed before showing time card in the Employee Home (only if time card approvals enabled)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardMessageButtonText';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column3Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines third info of the Employee to be displayed in the second Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column3Type';


GO
PRINT N'Creating [dbo].[Preference].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This field is used to set Default date as Current Date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determined whether the Time Card button is enabled in the Emp Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardEnabled';


GO
PRINT N'Creating [dbo].[Preference].[DefaultThemeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default theme applied to the web site', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DefaultThemeType';


GO
PRINT N'Creating [dbo].[Preference].[RestrictToScheduleSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Time duration of the schedule ""window"", i.e. employees who are restricted to schedule and are clocking in for the day have a ""window"" beofre their schedule time when clockin in.  "', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'RestrictToScheduleSecs';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column4Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for fourth info type of second row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column4Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionTimesheetHasRegOTEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether time card Reg/OT is allowed while submitting work time sheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTimesheetHasRegOTEntry';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow2Column5Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for fifth info type of second row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow2Column5Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionPeriodEntryEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether time Period Entry tab within Action Pop Up of Emp Dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPeriodEntryEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow3Column3Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines third info of the Employee to be displayed in the third Row of Employee Info section within Time Card screen of manager dashboard (references enum Preference.TimeCardAdditionalInformationTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow3Column3Type';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardMessageEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determine whether to display a message prior to display of time cards screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardMessageEnabled';


GO
PRINT N'Creating [dbo].[Preference].[EmpLinkToViewType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines where to navigate when clicked on an employee link (Example: when clicking on an employee record in the status board of the manager dashboard)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'EmpLinkToViewType';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Message that has to be displayed before showing time card in Employee Home (only if employee aprrovals enabled)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardMessage';


GO
PRINT N'Creating [dbo].[Preference].[TORCalendarSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time Off Request calendar settings ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TORCalendarSettingID';


GO
PRINT N'Creating [dbo].[Preference].[AssignProxyMgrEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether proxy manager assignment is enabled or not.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'AssignProxyMgrEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempEntryCopyFormat].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to copy the settings from Time Sheet Entry Settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempEntryCopyFormat';


GO
PRINT N'Creating [dbo].[Preference].[ScheduleEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Schedules Button withim Emp Dashboard is enabled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ScheduleEnabled';


GO
PRINT N'Creating [dbo].[Preference].[ReplaceSchedTimesheetWithTOR].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Replace time sheet entries generated from schedule by time off requests', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ReplaceSchedTimesheetWithTOR';


GO
PRINT N'Creating [dbo].[Preference].[ReadMessageButtonEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the user can read the messages', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ReadMessageButtonEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column2Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for second info type of first row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column2Value';


GO
PRINT N'Creating [dbo].[Preference].[ActionPostShiftTransferEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enables the post shift timesheet entry in employee home', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPostShiftTransferEnabled';


GO
PRINT N'Creating [dbo].[Preference].[TimeCardInfoRow1Column5Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determins what value to be displayed for fifth info type of first row selected, in case first info type selected refers to other entities(i.e. custom field etc) then identity/entity ID of that particular entity is stored, else the first info type enum value itself is stored i.e Preference.TimeCardAdditionalInformationTypes value is stored"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'TimeCardInfoRow1Column5Value';


GO
PRINT N'Creating [dbo].[Preference].[IsEditTimeSheetEntriesByHours].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee can add and edit hy hours not by times', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'IsEditTimeSheetEntriesByHours';


GO
PRINT N'Creating [dbo].[Preference].[ActionPeriodEntryHasCopyFormat].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to copy the settings from Time Sheet Entry Settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionPeriodEntryHasCopyFormat';


GO
PRINT N'Creating [dbo].[Preference].[ActionMatrixHasRegOTEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enables the Reg,OT timesheet express entry types', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionMatrixHasRegOTEntry';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempHasEmpEdit].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the employee can edit the pre-defined template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempHasEmpEdit';


GO
PRINT N'Creating [dbo].[Preference].[DefaultMobileHomeViewType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Mobile employee''s home view', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'DefaultMobileHomeViewType';


GO
PRINT N'Creating [dbo].[Preference].[ActionTempEntryEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the Template Entry tab is enabled within Action Pop Up of Emp Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'ActionTempEntryEnabled';


GO
PRINT N'Creating [dbo].[Preference].[MobileTimeSheetColumn1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 1 type in mobile timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Preference', @level2type = N'COLUMN', @level2name = N'MobileTimeSheetColumn1';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay Types available to an employee for time sheet submittal.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[ActionSectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the Section type for Action module of Employee homw', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'ActionSectionType';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the action entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceActionsEntryPayType].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceActionsEntryPayType', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allowed Labor Levels to which an Employee can add new Labor level details', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Preference.PreferenceID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'LLID of the Labor Level selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceArbitaryLLs].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceArbitaryLLs', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[PreferenceNotificationsSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity/Entity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'PreferenceNotificationsSettingID';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Preference reference id', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[EmpSelectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of EmployeeSelectionTypes enum', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'EmpSelectionType';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[FilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Filter reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'FilterID';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[FilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds filter data in json string format', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'FilterData';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[NotificationSettingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hold Type of NotificationSettingTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'NotificationSettingType';


GO
PRINT N'Creating [dbo].[PreferenceNotificationsSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User reference ID for Preference User Overriding', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceNotificationsSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[PreferenceProxyMgrID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'PreferenceProxyMgrID';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[MgrUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the manager who assigned this proxy manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'MgrUserID';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[ProxyMgrUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the person who selected as a proxy manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'ProxyMgrUserID';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of proxy manager assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of proxy manager assignment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceProxyMgr].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceProxyMgr', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains settings and assignment of employee reports to a Preference policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[PreferenceReportAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'PreferenceReportAssignID';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Preference reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[ReportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Report reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'ReportID';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[ReportSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Report Settings reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'ReportSettingID';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceReportAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceReportAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Data that defines a time sheet template for a preference policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[PreferenceTimeSheetTemplateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'PreferenceTimeSheetTemplateID';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[StartTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start time for the shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'StartTime';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[Duration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'duration of the shift for template entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'Duration';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the priority/order of the shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay type for the template entry shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[PreferenceTimeSheetTemplate].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceTimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Preference settings set by a user to override a preference policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[PreferenceUserOverrideID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'PreferenceUserOverrideID';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to UserInfo.UserID of the manager to whom this setting belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[FieldName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Property name of the Prefrence entity class thats being overriden by employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'FieldName';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the vlaue of preference property that''s being overriden by employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'Value';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[PreferenceUserOverride].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'PreferenceUserOverride', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for processing of Alerts generation  in the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[AlertProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'AlertProcessID';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[AlertID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference ""AlertID"" field in Alert"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'AlertID';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User for whom alert to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[QueueID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Refrences QeueuID of Queue table within system database', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'QueueID';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start Date of processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comma separated UserIDs of the persons for whom alerts should be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_AlertProcess].[ProcessAlertTypes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comma separated enum values of the alert types to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_AlertProcess', @level2type = N'COLUMN', @level2name = N'ProcessAlertTypes';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains requesters for closing and locking of time cards in the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[CloseTimeCardProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'CloseTimeCardProcessID';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserInfo.UserID, defines the UserID of the person who requested for close time card processing"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference UserInfo.UserID, defined the UserID of the person of whom time card are to be clsoed or locked"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the Start Date from which the time card of the employee being processed needs to be clsoed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[ClosedType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines whether time card needs to be closed/locked (refers enum  TimeSlicePre.ClosedTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ClosedType';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comma separated string of UserIDs of the employees of whom time card are to be closed/locked', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the End Date untill which the time card of the employee being processed need to be locked', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[CloseDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time cards closing date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'CloseDate';


GO
PRINT N'Creating [dbo].[Queue_CloseTimeCardProcess].[ChildRequestIDList].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Request IDs of individual queue items', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CloseTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ChildRequestIDList';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains requesters for specifying the values of custom field for users in queue', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[CustomFieldDataProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'CustomFieldDataProcessID';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"References UserInfo.UserID, defines the UserID of the person who requested for processing"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[CustomFieldID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"References CustomField.CustomFielID, defines unique indentifier of the required Custom Field entity for which value had be entered for the employees for whom its not already specified"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'CustomFieldID';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[DataString].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the value only if Custom Field being processed is of string type. It defines Default value of the Custom Field to be specified for the employees while processing.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'DataString';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[DataDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the value only if Custom Field being processed is of date type. It defines Default value of the Custom Field to be specified for the employees while processing.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'DataDate';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[DataMoney].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the value only if Custom Field being processed is of money type. It defines Default value of the Custom Field to be specified for the employees while processing.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'DataMoney';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[DataNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the value only if Custom Field being processed is of decimal type. It defines Default value of the Custom Field to be specified for the employees while processing.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'DataNumber';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[DataSelect].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the value only if Custom Field being processed has predefined values. Reference CustomFieldSelect.CustomFieldSelectID, it defines the unqie identifier of the CustomFieldSelect (i.e. pre-defined value) to be used as custom field value for the employees while processing"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'DataSelect';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_CustomFieldDataProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comma separated UserIDs of the employees to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_CustomFieldDataProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for Holiday generation.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[HolidayProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'HolidayProcessID';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[HolidayListID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s HolidayList.HolidayListID, defines the holiday list policy to be processed"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'HolidayListID';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserInfo.UserID, defines the UserID of the person requesting holdiay processing"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserInfo.UserID, defines the UserID of the person for whom holiday has be processed"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start Date value of the processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End Date value of the processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_HolidayProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_HolidayProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores the queue requester items for job processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[JobProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'JobProcessID';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[JobSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key to Job Setting table, Job setting to be used while processing this item', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'JobSettingID';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[JobProcessType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the Job Processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'JobProcessType';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[JobProcessHistoryID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Foreign key reference to Job Process History', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'JobProcessHistoryID';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID of the person requesting this job', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_JobProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the user requesting the job', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_JobProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requester for Mass Transaction Editor for the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[MassTimeCardProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'MassTimeCardProcessID';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[IncludeSaturday].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Add punchs for ""Saturday'' while adding pucnhes for a numebr of days"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'IncludeSaturday';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[IncludeSunday].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Add punchs for ""Sunday'' while adding pucnhes for a numebr of days"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'IncludeSunday';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[DuplicateEntryDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of days for which the punch/shift should be added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'DuplicateEntryDays';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requester UserID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of employe for whom punch/shift should be added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Comma separated UserIDs of employees, for whom shift/punch should be added"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[TransactionData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'JSON format of the shift info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'TransactionData';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[ModifierIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'JSOn format of modifiers to be applied to Shift''s if any selected', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifierIDs';


GO
PRINT N'Creating [dbo].[Queue_MassTimeCardProcess].[TransactionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference enum MassTimeCardProcess.TransactionTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_MassTimeCardProcess', @level2type = N'COLUMN', @level2name = N'TransactionType';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requester for updating non-closed data calculated by formulas in Pay Adjustments', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[PayAdjustmentProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'PayAdjustmentProcessID';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the user who requested processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[PayAdjustmentDataIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayAdjustmentData.PayAdjustmentDataID of the pay adjustment data that has to be reprocessed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'PayAdjustmentDataIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[PayAdjustmentIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayAdjustment.PayAdjustmentID (All pay padjustment data added using this pay adjustment will be reprocessed)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'PayAdjustmentIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of the date range considered for reprocessing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_PayAdjustmentProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of the date range considered for reprocessing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_PayAdjustmentProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for reopening time cards for the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[ReopenTimeCardProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ReopenTimeCardProcessID';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference''s UserInfo.UserID, defines the UserID of the person who requested for close time card processing"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of an employee whose timecards are to be reopened', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines date from which user time cards has to be opened', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[IsOpenTimeCard].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether user is opening time cards or opening and locking time cards', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'IsOpenTimeCard';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserIDs of the users whose time cards are to reopened', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the end date for the processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[ReopenDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reopening date for time cards', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ReopenDate';


GO
PRINT N'Creating [dbo].[Queue_ReopenTimeCardProcess].[ChildRequestIDList].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requester ids of individual queue items', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReopenTimeCardProcess', @level2type = N'COLUMN', @level2name = N'ChildRequestIDList';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requester for Report Generation in the Queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAsap].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report as soon as possible', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAsap';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ExportCodeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Export Code reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ExportCodeID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[UserDefinedRangeFrom].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of the user defined date range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'UserDefinedRangeFrom';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[EmailToUserEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Detarmines whether to email the generated report to the requsted user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'EmailToUserEnabled';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report at the specified time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAt';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language to create the token', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IncludeFooter].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Include report footer in generated report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IncludeFooter';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[AutoExportMatrixSelectionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds Type of Automatic Matrix Selection', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'AutoExportMatrixSelectionType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtMonthly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report monthly', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtMonthly';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtDailyIncludeWeekend].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report at weekends when report has to be generated daily', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtDailyIncludeWeekend';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsPreviousRange].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determine whether to choose previous range for calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsPreviousRange';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtMonthlyType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines day of the month at which report has to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtMonthlyType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[DisplayReportNameEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display the report name in the report document', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'DisplayReportNameEnabled';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[UserDefinedRangeTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End date of the user defined date range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'UserDefinedRangeTo';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[QueueID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Queue ID against this report generation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'QueueID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtSemiMonthly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report semi-monthly', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtSemiMonthly';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the format in which the report has to be genereted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportFormatType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsAdhoc].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether  this  settings belogs to an adhoc report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsAdhoc';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[EmailToOthersEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to email the generated report to the addresses specified', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'EmailToOthersEnabled';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time of day at which the report has to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtTime';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtOnDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the date at which the repost has to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtOnDate';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[PastRangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the type of range to use when user chose past range for calculation (Day, Week, PayPeriod, Month, Quarter and Year)

"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'PastRangeType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsUserDefinedRange].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the date range is defined by the user or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsUserDefinedRange';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtBiWeekly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report bi-weekly', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtBiWeekly';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtSemiMonthlyType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines semi-monthly type (1st -16th, 2nd -17th, etc )"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtSemiMonthlyType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportName';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Report.ReportID (in System Database) of the report that has been used', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[RefPayrollPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PayrollPolicy.PayrollPolicyID policy based on which the report has to be generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'RefPayrollPolicyID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportSpecificSettings].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores report specific settings (in JSON format)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportSpecificSettings';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtBiWeeklyStartAftrNxt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to skip the first occurance of the day (used when bi-weekly generation of report has chosen)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtBiWeeklyStartAftrNxt';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsFavorite].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Make this setting as Favorite', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsFavorite';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtWeekly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report on every week', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtWeekly';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[FilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Conditions for filtering employees (used when custom filter is applied)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'FilterData';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[FilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to Filter.FilterID of the filter used as employee filter', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'FilterID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtTimezoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time zone under which the date and time for generating report has been specified', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtTimezoneKey';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[DataURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'URL to access the generated report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'DataURL';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtWeeklyDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day of the week at which the report has to be generated if weekly generation has chosen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtWeeklyDay';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the user who requsted report generation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[UseCompanyLogo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Use company logo in generated report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'UseCompanyLogo';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[OtherEmailAddresses].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Email adresses to which generated report has to be mailed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'OtherEmailAddresses';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[CurrentRangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of the range to use when user choose current range for calculation (Day, Week, PayPeriod, Month, Quarter and Year)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'CurrentRangeType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[GenerateAtBiWeeklyDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day of the week at which the report has to be generated if bi-weekly generation of report has chosen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'GenerateAtBiWeeklyDay';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[NextScheduleUtcDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Next report generation time in UTC', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'NextScheduleUtcDateTime';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsManExportMatrixSelection].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether the export matrix selection type is manual or autiomatic', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsManExportMatrixSelection';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtDaily].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report daily', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtDaily';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[OrderByType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Detrmines the order in which the employees have to sorted (First Name ASC, First Name DESC, Last Name ASC, Last Name DESC, Number ASC and Number DESC)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'OrderByType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportSettingID';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsPastRange].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to use a past range for calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsPastRange';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ReportSettingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of the report setting (Report Setting, Shared Template, Generated Setting, Preference Report Setting, Employee Report Setting, Employee Generated Setting, Enterprise Report Setting, Enterprise Generated Setting, Export Setting, Shared Export Template and Generated Export Setting)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ReportSettingType';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[PastRangeCount].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines how many past range has to be consider for calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'PastRangeCount';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsGenerateAtOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to generate report at a specific date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsGenerateAtOn';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[IsCurrentRange].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to choose the current range for calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'IsCurrentRange';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_ReportSetting].[PreviousRangeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of the range to use when user choose previous range for calculation (Day, Week, PayPeriod, Month, Quarter and Year)
"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ReportSetting', @level2type = N'COLUMN', @level2name = N'PreviousRangeType';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for schedule generation for the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[ScheduleGenerateProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'ScheduleGenerateProcessID';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[ScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule template ID to generate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'ScheduleTempID';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User requested this action', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Employee to generate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[GenerateFrom].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'From date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'GenerateFrom';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[GenerateTo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'To date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'GenerateTo';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_ScheduleGenerateProcess].[DeleteAfterFirstRun].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to delete the item after first run or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_ScheduleGenerateProcess', @level2type = N'COLUMN', @level2name = N'DeleteAfterFirstRun';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for Time Card processing for the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[TimeCardProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'TimeCardProcessID';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of person who requested for processing of time card', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of person whose time card has to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End Date of processing range', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[IsScheduled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this particualr item is a scheduled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'IsScheduled';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_TimeCardProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Comma separated string of UserIDs of persons whose time card is to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeCardProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Requesters for Time Off processing for the Queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[TimeOffProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'TimeOffProcessID';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of person who reuqested for processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language to create the token', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[UserIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of person whose time card is to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'UserIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to PayType.PayTypeID of PayType', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the start date from which time offs of a user has to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the end date to which time offs of a user has to be processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[IsScheduled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this particualr item is schedule for processing within queue', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'IsScheduled';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Queue_TimeOffProcess].[UserIDs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserIDs of users whose time off data has to processed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_TimeOffProcess', @level2type = N'COLUMN', @level2name = N'UserIDs';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Stores requesters for Import processing from the queue.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[UserImportProcessID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess', @level2type = N'COLUMN', @level2name = N'UserImportProcessID';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of person who reuqested for processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[ImportIDToProcess].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference import ID for processing', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess', @level2type = N'COLUMN', @level2name = N'ImportIDToProcess';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Queue_UserImportProcess].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Queue_UserImportProcess', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Definition for Ad-Hoc templates the user creates.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ReportAdhocID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ReportAdhocID';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The user this report belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ReportName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ReportName';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[IsSharedTemplate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Tell whether other users can see this report as a shared report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'IsSharedTemplate';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ReportFields].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Fields within the report in JSON format', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ReportFields';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ReportConditions].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Conditions within the report in JSON format', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ReportConditions';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ReportAdhoc].[ShowDurationInDecimal].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display hours in only decimals or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAdhoc', @level2type = N'COLUMN', @level2name = N'ShowDurationInDecimal';


GO
PRINT N'Creating [dbo].[ReportAssignment].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Assignment of the report to a customer from the BrandAdmin interface.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAssignment';


GO
PRINT N'Creating [dbo].[ReportAssignment].[ReportAssignmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAssignment', @level2type = N'COLUMN', @level2name = N'ReportAssignmentID';


GO
PRINT N'Creating [dbo].[ReportAssignment].[ReportID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Report.ReportID (System table) of the report that has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAssignment', @level2type = N'COLUMN', @level2name = N'ReportID';


GO
PRINT N'Creating [dbo].[ReportAssignment].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ReportAssignment].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportAssignment', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ReportData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generated report data after it has finished processing.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData';


GO
PRINT N'Creating [dbo].[ReportData].[ReportDataID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'ReportDataID';


GO
PRINT N'Creating [dbo].[ReportData].[ReportSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to Queue_ReportSetting.ReportSettingID, setting of this report"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'ReportSettingID';


GO
PRINT N'Creating [dbo].[ReportData].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserInfo.UserID of the employee who generated this report', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ReportData].[ReportFormatType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Format in which this report has been generated (PDF, Excel, etc)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'ReportFormatType';


GO
PRINT N'Creating [dbo].[ReportData].[Data].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generated report in binary format', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'Data';


GO
PRINT N'Creating [dbo].[ReportData].[GeneratedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Date and time, when the report is generated"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'GeneratedOn';


GO
PRINT N'Creating [dbo].[ReportData].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ReportData].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ReportData', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Schedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Individual scheduled shifts for each employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[Schedule].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[Schedule].[IsAutoGenerated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether created from template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'IsAutoGenerated';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[Schedule].[ScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'ScheduleID';


GO
PRINT N'Creating [dbo].[Schedule].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User this schedule belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[Schedule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule end date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[Schedule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[Schedule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Schedule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule start date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[Schedule].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Schedule', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Items under a specific schedule such as meals, breaks, and transfers.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule start date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[ScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule this detail belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'ScheduleID';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule end date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[IsAutoGenerated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether created from template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'IsAutoGenerated';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[ScheduleDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'ScheduleDetailID';


GO
PRINT N'Creating [dbo].[ScheduleDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Collection of recurring schedule entries and basic settings.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[ScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'ScheduleTempID';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[ScheduleTempName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'ScheduleTempName';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[ReferenceDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date recurring starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'ReferenceDate';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[NoOfDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'No of days in template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'NoOfDays';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[AutoGenerate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether to auto generate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'AutoGenerate';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[AutoGenerateOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Auto generating time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'AutoGenerateOn';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[OverrideAutoGenerated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overwrites existing auto generated schedules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'OverrideAutoGenerated';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[OverrideManuallyCreated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overwrites existing manually created schedules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'OverrideManuallyCreated';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[AutoGeneratedUntil].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date until this template has been auto generated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'AutoGeneratedUntil';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ScheduleTemp].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTemp', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Assignment for employees to schedule templates.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[ScheduleTempAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'ScheduleTempAssignID';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[ScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule template to assign', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'ScheduleTempID';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User this schedule belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ScheduleTempAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The individual scheduled shifts in a recurring schedule template.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[DayIndexOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day on which this schedule ends', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'DayIndexOut';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[ScheduleTempID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Template this detail belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'ScheduleTempID';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[ScheduleTempScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'ScheduleTempScheduleID';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule start date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[DayIndexIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day on which this schedule starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'DayIndexIn';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[ScheduleTempSchedule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule end date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempSchedule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Underlying details for a shift in a recurring schedule template, such as meals, breaks, and transfers.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[DayIndexIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day on which this schedule starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'DayIndexIn';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[ScheduleTempScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Template this detail belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'ScheduleTempScheduleID';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[ScheduleTempScheduleDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'ScheduleTempScheduleDetailID';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule start date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule end date/time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[DayIndexOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Day on which this schedule ends', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'DayIndexOut';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[ScheduleTempScheduleDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ScheduleTempScheduleDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SessionState].[SessionStateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines session state id', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SessionState', @level2type = N'COLUMN', @level2name = N'SessionStateID';


GO
PRINT N'Creating [dbo].[SessionState].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User id of the employee for whom session belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SessionState', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[SessionState].[SessionValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Session value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SessionState', @level2type = N'COLUMN', @level2name = N'SessionValue';


GO
PRINT N'Creating [dbo].[SharedTemplate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Collection of Shared Template entries', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate';


GO
PRINT N'Creating [dbo].[SharedTemplate].[SharedTemplateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'SharedTemplateID';


GO
PRINT N'Creating [dbo].[SharedTemplate].[SharedTemplateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Store Type of the Shared Template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'SharedTemplateType';


GO
PRINT N'Creating [dbo].[SharedTemplate].[TemplateOptionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Store Type of Template Option Types', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'TemplateOptionType';


GO
PRINT N'Creating [dbo].[SharedTemplate].[TemplateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Shared Template reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'TemplateID';


GO
PRINT N'Creating [dbo].[SharedTemplate].[FilterID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Filter reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'FilterID';


GO
PRINT N'Creating [dbo].[SharedTemplate].[FilterData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Store Custom Filter Data(JSON format)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'FilterData';


GO
PRINT N'Creating [dbo].[SharedTemplate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SharedTemplate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Collection of Shared Template custom user assignment entries', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[SharedTemplateUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser', @level2type = N'COLUMN', @level2name = N'SharedTemplateUserID';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[SharedTemplateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Store Shared Template reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser', @level2type = N'COLUMN', @level2name = N'SharedTemplateID';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Store User reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SharedTemplateUser].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SharedTemplateUser', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Shift Differenital Policies', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ShiftDiffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ShiftDiffPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyName';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[UsePayTypeQualifier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true only hours associated with pay type having PayType.AllowShiftDiff field as true will be used else all hours will considered', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'UsePayTypeQualifier';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[AllowOverlapping].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines wether the user is allowed to make overlapping shifts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'AllowOverlapping';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[OverlappingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"If policy allows overlapping shifts, this field determines how to pay hours in the overlapping period (Pay All, Pay Highest and Pay Longest)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'OverlappingType';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicy].[ShiftDiffAfterOvertimeEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Calclate ShiftDiff after overtime calculation for earnings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicy', @level2type = N'COLUMN', @level2name = N'ShiftDiffAfterOvertimeEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User assignment to Shift Differential Policies.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[ShiftDiffPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyAssignID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee to whom the policy has been assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[ShiftDiffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference to ShfitDiffPolicy.ShiftDiffPolicyID, policy that has been assigned"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Individual rules against the day and time under a shift differential policy.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkNonFixShiftDiffType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time that crosses more than one shift differential will only receive the differential with the majority of the time worked in a Shift or Day. This field determines whether to use Day (value = 0) or Shift (value = 1) to find the shift differerntial that applies. (only if NonWorkFixShiftDiffEnabled is false)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkNonFixShiftDiffType';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkNoTimeGetShiftDiffCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code of shift differential the user will get when he/she dosent work in the time frame specified by the fields WorkMustTimeBtwStartTime and WorkMustTimeBtwEndTime.(only if both WorkMustTimeBtw and WorkNoTimeGetShiftDiff are true)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkNoTimeGetShiftDiffCode';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ShiftDiffPolicyDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyDetailID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkMinInShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether an employee has to work sepcified amount of time (WorkMinInShiftDiffSecs) in the differntial period to get this shift differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkMinInShiftDiff';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkMustTimeBtw].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true an employee must work some time during the start (WorkMustTimeBtwStartTime) and end (WorkMustTimeBtwEndTime) time specified to receive the differential.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkMustTimeBtw';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkFixShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this field is true and the user work time crosses more than one shift differentials then only the shift differential they were in at the time of clock in or clock out will get applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkFixShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkMustTimeBtwEndTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End of time period in which the employee must non-work to recieve differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkMustTimeBtwEndTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkNonFixShiftDiffType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time that crosses more than one shift differential will only receive the differential with the majority of the time worked in a Shift or Day. This field determines whether to use Day (value = 0) or Shift (value = 1) to find the shift differerntial that applies. (only if WorkFixShiftDiffEnabled is false)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkNonFixShiftDiffType';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ShiftDiffCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This is a code that is used to identify the shift differential for export', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffCode';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[DayOfWeek].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the day of the week for which this rule is applicable', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'DayOfWeek';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkMustTimeBtwEndTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End of time period in which the employee must work to recieve differential (only if WorkMustTimeBtw is true)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkMustTimeBtwEndTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkApplyToEntireShift].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the user will get differentials for entire shift hours (used when user''s shift passes the time period specified in the shift differential rule)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkApplyToEntireShift';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to pay the shift differential on worked time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkMustTimeBtw].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true an employee must work some time during the start (NonWorkMustTimeBtwStartTime) and end (NonWorkMustTimeBtwEndTime) time specified to receive the differential.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkMustTimeBtw';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkMustTimeBtwStartTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start of time period in which the employee must non-work to recieve differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkMustTimeBtwStartTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkFixShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this field is true and the user non-work time crosses more than one shift differentials then only the shift differential they were in at the start or end will get applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkFixShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[StartTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time of day at which differential begins', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'StartTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkNoTimeGetShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If NonWorkMustTimeBtw is true and the user is not qualified then this field determines whether user will get shift differential specified by the code NonWorkNoTimeGetShiftDiffCode.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkNoTimeGetShiftDiff';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ShiftDiffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to ShfitDiffPolicy.ShiftDiffPolicyID of shift differential policy to which this rule belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffPolicyID';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ShiftDiffDisabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true no differential will get applied during the time frame specified by this rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffDisabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[PayFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"This is a percentage that the employeeâ€™s rate is multiplied by, and Is then added to their rate for the time in the shift differential. (.100 = an additional 10%)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'PayFactor';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkFixShiftDiffType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the shift differential is fixed to start or end', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkFixShiftDiffType';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkMinInShiftDiffSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration (in seconds) for which the employee must work in the differential period to get this shift differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkMinInShiftDiffSecs';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[AdditionalWage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'This is an additional dollar amount that is added to employee''s pay rate for the time in the shift differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AdditionalWage';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkAdvancedRulesEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"If true, allows the user to advanced rules for shift differntials on work time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkAdvancedRulesEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkApplyToEntireShift].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the user will get differentials for entire shift hours (used when user''s shift passes the time period specified in the shift differential rule)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkApplyToEntireShift';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkNoTimeGetShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If WorkMustTimeBtw is true and the user is not qualified then this field determines whether user will get shift differential specified by the code WorkNoTimeGetShiftDiffCode.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkNoTimeGetShiftDiff';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkMinInShiftDiffSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration (in seconds) for which the employee need minimum in the differential period to get this shift differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkMinInShiftDiffSecs';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkMustTimeBtwStartTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start of time period in which the employee must work to recieve differential (only if WorkMustTimeBtw is true)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkMustTimeBtwStartTime';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkAdvancedRulesEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"If true, allows the user to advanced rules for shift differntials on work time"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkAdvancedRulesEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[Duration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration (in seconds) from the start time for which this shift differential applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'Duration';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[WorkFixShiftDiffType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the shift differential is fixed to clock in or clock out (Only if WorkFixShiftDiffEnabled is true). Values are Clock In = 0 and Clock Out = 1.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'WorkFixShiftDiffType';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkShiftDiffEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to pay the shift differential on non-worked time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkShiftDiffEnabled';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkMinInShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether an employee need minimum amount of time (NonWorkMinInShiftDiffSecs) in the differntial period to get this shift differential', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkMinInShiftDiff';


GO
PRINT N'Creating [dbo].[ShiftDiffPolicyDetail].[NonWorkNoTimeGetShiftDiffCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code of shift differential the user will get when he/she dosent non-work in the time frame specified by the fields NonWorkMustTimeBtwStartTime and NonWorkMustTimeBtwEndTime.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'ShiftDiffPolicyDetail', @level2type = N'COLUMN', @level2name = N'NonWorkNoTimeGetShiftDiffCode';


GO
PRINT N'Creating [dbo].[SSOLogin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the SSO Guid and expiration time for outstanding SSO requests.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin';


GO
PRINT N'Creating [dbo].[SSOLogin].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[SSOLogin].[GUID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin', @level2type = N'COLUMN', @level2name = N'GUID';


GO
PRINT N'Creating [dbo].[SSOLogin].[DateIssued].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin', @level2type = N'COLUMN', @level2name = N'DateIssued';


GO
PRINT N'Creating [dbo].[SSOLogin].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SSOLogin].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SSOLogin', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[StatusBoard].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the last status for each employee.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[StatusBoard].[TransactionDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time when the last transaction of the employee to whom this record belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'TransactionDateTime';


GO
PRINT N'Creating [dbo].[StatusBoard].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[StatusBoard].[StatusBoardID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'StatusBoardID';


GO
PRINT N'Creating [dbo].[StatusBoard].[TransactionUTCDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'date and time of last transaction in utc (used for sorting data based on last transaction time)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'TransactionUTCDateTime';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[StatusBoard].[TransactionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Determines the last transaction type of the employee (ex: Clock In, Clock Out, Start Break, etc)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'TransactionType';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[StatusBoard].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[StatusBoard].[EmpNote].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Notes enetered by User while punching', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'EmpNote';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[StatusBoard].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference UserID in UserInfo', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[StatusBoard].[StatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Current status of employee (Working, Out, On Break, At Lunch and Absent)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'StatusType';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[StatusBoard].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoard', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the settings for Statur Board Widget in Manager Dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[StatusBoardSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting', @level2type = N'COLUMN', @level2name = N'StatusBoardSettingID';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserInfo.UserID of the employee to whom this setting belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[ApproachingWeeklyOTLimitSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Max value of the approcahing hours to weekly that should display on status borad', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting', @level2type = N'COLUMN', @level2name = N'ApproachingWeeklyOTLimitSecs';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[StatusBoardSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the columns to be displayed within the Status Board Widget of manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[StatusBoardSettingDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'StatusBoardSettingDetailID';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[StatusBoardSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'StatusBoardSetting.StatusBoardSettingID of the setting to which this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'StatusBoardSettingID';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[StatusBoardColumnType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identifies the status board column chosen by this', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'StatusBoardColumnType';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Postion of the status board column pointed by this in the status board grid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[StatusBoardSettingDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'StatusBoardSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines settings of the Summary Widgets displayed within manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[SummaryWidgetSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'SummaryWidgetSettingID';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[SummaryWidgetSettingType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines type of summary widget (refer''s enum SummaryWidgetSetting.SummaryWidgetSettingTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'SummaryWidgetSettingType';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User to whom this setting belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[DefaultToType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the default date range for which data within summary widget is displayed (refer''s enum SummaryWidgetSetting.DefaultToTypes)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'DefaultToType';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[WeekBeginsOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines the day of the week, which marks the start of the week (refer''s enum DayOfWeek)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'WeekBeginsOn';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[ColorCode1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the rcb value of color to be used for the top bars displayed within Totals Summary widget within Live Transaction Log section', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'ColorCode1';


GO
PRINT N'Creating [dbo].[SummaryWidgetSetting].[ColorCode2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the rcb value of color to be used for the below bars displayed within Totals Summary widget within Live Transaction Log section', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSetting', @level2type = N'COLUMN', @level2name = N'ColorCode2';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the summary types of which data needs to be displayed within the Summary Widgets of manager dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[SummaryWidgetSettingDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'SummaryWidgetSettingDetailID';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[SummaryWidgetSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to SummaryWidgetSetting.SummaryWidgetSettingID to which this record belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'SummaryWidgetSettingID';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[SummaryType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Refer''s SummaryWidgetSettingDetail.SummaryTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'SummaryType';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the position of row at which the summary data of this particlar summary tyep is displayed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[SummaryWidgetSettingDetail].[SummaryTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Defines to which the Summary Widget this detail belong to, reference''s SummaryWidgetSetting.SummaryWidgetSettingID"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'SummaryWidgetSettingDetail', @level2type = N'COLUMN', @level2name = N'SummaryTypeID';


GO
PRINT N'Creating [dbo].[Tag].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Tags applied to features in the system to allow them to be located by the Universal Search tool.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag';


GO
PRINT N'Creating [dbo].[Tag].[TagID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'TagID';


GO
PRINT N'Creating [dbo].[Tag].[TagName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'TagName';


GO
PRINT N'Creating [dbo].[Tag].[Feature].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Name of the feature tagged', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'Feature';


GO
PRINT N'Creating [dbo].[Tag].[LanguageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language of the tag', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'LanguageID';


GO
PRINT N'Creating [dbo].[Tag].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[Tag].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Tag', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[TerminalStatusWidgetSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'TerminalStatusWidgetSettingID';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User to whom this setting belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[StartRangeSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start range in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'StartRangeSecs';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[EndRangeSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End range in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'EndRangeSecs';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TerminalStatusWidgetSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TerminalStatusWidgetSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Sets the columns (and order) for the Time Card Approvals screen.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[TimeCardApprovalSettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'TimeCardApprovalSettingID';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserInfo.UserID of the employee to whom this setting belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[ColumnType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the column to be dispalyed within Time Card Approval Screen, references enum TimeCardApprovalSetting.TimeCardApprovalColumnTypes', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'ColumnType';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Postion of the Time card approval column pointed by this in the time card approvals grid', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeCardApprovalSetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardApprovalSetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeCardNote].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains predefined notes for transaction modifications by Managers.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote';


GO
PRINT N'Creating [dbo].[TimeCardNote].[TimeCardNoteID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote', @level2type = N'COLUMN', @level2name = N'TimeCardNoteID';


GO
PRINT N'Creating [dbo].[TimeCardNote].[Code].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code for this note', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote', @level2type = N'COLUMN', @level2name = N'Code';


GO
PRINT N'Creating [dbo].[TimeCardNote].[Note].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Note description', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote', @level2type = N'COLUMN', @level2name = N'Note';


GO
PRINT N'Creating [dbo].[TimeCardNote].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeCardNote].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeCardNote', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffData].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains all data about Time Off that has been accrued, granted, or used.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData';


GO
PRINT N'Creating [dbo].[TimeOffData].[AnchorPoint].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag indicating that this record is an anchor point.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'AnchorPoint';


GO
PRINT N'Creating [dbo].[TimeOffData].[UsedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds used for this entry on the ApplyToDateTime date. Generated as a result creating a non work shift on an individual''s time card.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'UsedSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[RolloverSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Amount of seconds that rolled over. Will only see this on reset dates, if at all."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'RolloverSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[IsRollover].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indicates that record was created as a result of a rollover occurring', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'IsRollover';


GO
PRINT N'Creating [dbo].[TimeOffData].[GrantedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds granted on the ApplyToDateTime date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'GrantedSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[TransferOutSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Amount of time that was transferred time out of this record.  This indicates that an accrual cap was hit and a portion of the time got transferred from one PayType to another.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TransferOutSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[IsSystemGenerated].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indicates if entry was generated by time off processing engine (1) or not (0)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'IsSystemGenerated';


GO
PRINT N'Creating [dbo].[TimeOffData].[TotalAccruedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Running total of accrued time. Will see this when accruals occur before grants in the period. Gets zeroed out once a grant is hit.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TotalAccruedSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[AvailableSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds allowed to take time off as of this entry.  See TimeOffData.ProcessIndex to determine end of day balance using this field.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'AvailableSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of user this time off entry is associated with', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeOffData].[TransferInID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of the TimeOffData record who transferred time into this record.  This indicates that an accrual cap was hit and a portion of the time got transferred from one PayType to another.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TransferInID';


GO
PRINT N'Creating [dbo].[TimeOffData].[TimeOffDataID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TimeOffDataID';


GO
PRINT N'Creating [dbo].[TimeOffData].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of pay type this time off entry is associated with', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeOffData].[MakeUpSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds the user has to ''make up''. This is greater than zero when they were granted at the beginning of the period. It gradually ticks down to 0 as more and more time is accrued.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'MakeUpSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[ForfeitedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds forfeited due to the accrual cap or reset date getting hit. Is equal to the amount of time greater than either the cap or rollover limit.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ForfeitedSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[Notes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Notes included for manual adjustments + other specially created time off data entries such as imports', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'Notes';


GO
PRINT N'Creating [dbo].[TimeOffData].[AdjustmentUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of user who made manual adjustment', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'AdjustmentUserID';


GO
PRINT N'Creating [dbo].[TimeOffData].[ManType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Indicates what type of manual adjustment (if any) this is. 0 = Non Manual, 1=Standard Manual Adjustment, 2=Import, 3=Override, 4=Mass Transaction"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ManType';


GO
PRINT N'Creating [dbo].[TimeOffData].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffData].[ProcessIndex].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Numeric value that indicates the processing order of this record. Records that occur on the same date are processed by type, not by time in the day, thus time cannot be used to determine exactly what occurred when within a day - including what the final balance on a day was. This value starts at 1 and goes to x for a given day. The record having value x contains the ending balance on that day (the AvailableSecs field)."', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ProcessIndex';


GO
PRINT N'Creating [dbo].[TimeOffData].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of the TimeSlicePre record associated with this TimeOffData entry. Only applies to used time records', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[TimeOffData].[CreationDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date/Time this record was created.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'CreationDateTime';


GO
PRINT N'Creating [dbo].[TimeOffData].[TransferInSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Amount of time that was transferred time into this record.  This indicates that an accrual cap was hit and a portion of the time got transferred from one PayType to another.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TransferInSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[AccruedSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of seconds accrued on the ApplyToDateTime date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'AccruedSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[ManSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'# of manually adjusted seconds on the ApplyToDateTime date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ManSecs';


GO
PRINT N'Creating [dbo].[TimeOffData].[TransferOutID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of the TimeOffData record that received time transferred out of this record. This indicates that an accrual cap was hit and a portion of the time got transferred from one PayType to another.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'TransferOutID';


GO
PRINT N'Creating [dbo].[TimeOffData].[ApplyToDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Particular date this time off entry applies to.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ApplyToDateTime';


GO
PRINT N'Creating [dbo].[TimeOffData].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffData', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Records the pause periods for a user''s Time Off Accruals', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[TimeOffPausedUserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser', @level2type = N'COLUMN', @level2name = N'TimeOffPausedUserID';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of user whose time off policy is ''paused''', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay Type ID that has been paused for user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[PausedUntil].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indicates when User/PayType ID policy has been paused until', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser', @level2type = N'COLUMN', @level2name = N'PausedUntil';


GO
PRINT N'Creating [dbo].[TimeOffPausedUser].[PausedFrom].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Indicates when User/PayType ID policy has been paused from', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPausedUser', @level2type = N'COLUMN', @level2name = N'PausedFrom';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time Off Policies', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[TimeOffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyID';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[TimeOffPolicyName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyName';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[HideIncludeWeekendsOnEmpDash].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to displayÂ include weekend optionÂ in employee dashboardÂ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'HideIncludeWeekendsOnEmpDash';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[HideAccruedOnEmpDash].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display Accrued seconds in employee dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'HideAccruedOnEmpDash';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[HideGrantedOnEmpDash].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display Granted seconds in employee dashboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'HideGrantedOnEmpDash';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[EndDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'EndDate';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[DefaultTORToSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the default timeoff request an employee can request for', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'DefaultTORToSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[MinTORRestrictionEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether Minimum Time off restriction is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'MinTORRestrictionEnabled';


GO
PRINT N'Creating [dbo].[TimeOffPolicy].[MinTORSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the Minimum time off an employee should request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicy', @level2type = N'COLUMN', @level2name = N'MinTORSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User Assignments to Time Off Policies', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[TimeOffPolicyAssignID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyAssignID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of User assigned to this policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[TimeOffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of Policy assigned to user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeOffPolicyAssign].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyAssign', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Settings for a given Pay Type in a Time Off Policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[DeductUnpaidTimeFromBalance].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Specifies whether to deduct unpaid time from balance', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'DeductUnpaidTimeFromBalance';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[QualifyMinWorkSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time in seconds that an employee should work to satisfy the Time off', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'QualifyMinWorkSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[TORAllowed].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether time off request is allowed or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'TORAllowed';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of PayType associated with this detail', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[TimeOffPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'ID of policy this detail is associated with', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantCustomFreqType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Grant custom frequency type (Days = 0, Weeks = 1, Pay Periods = 2, Months = 3)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantCustomFreqType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrualFreqType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of accrual frequency (Daily = 0, Weekly = 1, Per Pay Period = 2, Monthly = 3, SemiAnnually = 4, Annually = 5, Custom = 6"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrualFreqType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrualCustomFreqRefDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference date for accruals custom frequency', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrualCustomFreqRefDate';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[QualifyMinWorkRequired].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether to qualify minimum work criteria or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'QualifyMinWorkRequired';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantFreqType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of grant frequency (Daily = 0, Weekly = 1, Per Pay Period = 2, Monthly = 3, SemiAnnually = 4, Annually = 5, Custom = 6"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantFreqType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantFirstThenRolloverEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantFirstThenRolloverEnabled';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[IncludeInExports].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Specifies whether to include time off type in export or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'IncludeInExports';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[ResetDateOther].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the reset date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ResetDateOther';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictMinWorkRequired].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether restrict minimum work is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictMinWorkRequired';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrueBeforeEmployeeStart].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Allow accruals to occur before an employee start date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrueBeforeEmployeeStart';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[ResetDateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the type of reset date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ResetDateType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[UsedTotalIncludesFutureTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to include future time offs for the calculation of used time', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'UsedTotalIncludesFutureTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictAccrualPeriod].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines the number of days, for time off accrual restriction ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictAccrualPeriod';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[SeniorityDateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the seniority date type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'SeniorityDateType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AutoResetQualifyByHoursWorked].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AutoResetQualifyByHoursWorked';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[QualifyMinWorkFreq].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Minimum work frequency in seconds an employee should work to qualify the Time off', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'QualifyMinWorkFreq';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[EmailAlertsEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether Email alerts is enable or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'EmailAlertsEnabled';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[EmpDashDisplayEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to display the time off type on employee dashboard or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'EmpDashDisplayEnabled';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[TimeOffPolicyDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyDetailID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[QualifyMinWorkFreqType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enumeration which determines the type of qualify min work frequency', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'QualifyMinWorkFreqType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictAccrualPeriodType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enumeration which determines the type of restrict accrual period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictAccrualPeriodType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictMinWorkSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the restriction which specifies the amount of work in seconds an employee should work', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictMinWorkSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[MaxNegativeOnRemainingEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Max Negative is equal to the remaining number of hours to be granted, as long as it does not exceed the number of hours specified in the accrual rules', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'MaxNegativeOnRemainingEnabled';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[DoNotAllowTORBelowMaxNegative].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether to allow time off request below max negative or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'DoNotAllowTORBelowMaxNegative';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[CalculationType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Type of policy calculation -(Time Passed=0, Hours Worked = 1, No Calculation = 2)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'CalculationType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrualCustomFreq].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of custom frequency periods as defined by AccrualCustomFreqType', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrualCustomFreq';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictProbationPeriod].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines number of days for probation period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictProbationPeriod';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[IsDefaultOnEmpDash].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the time off type is default time off type that has to be shown on the employee dahboard', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'IsDefaultOnEmpDash';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[UseProjectedAvailableBalance].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to use projected available balance or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'UseProjectedAvailableBalance';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[RestrictProbationPeriodType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Enumeration which determines the type of probation period', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'RestrictProbationPeriodType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantCustomFreq].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of custom frequency periods as defined by GrantCustomFreqType', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantCustomFreq';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantCustomFreqRefDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference date for grant custom frequency', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantCustomFreqRefDate';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrualTimeAtType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"When the accrual hits in a period (Beginning = 0, End = 1)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrualTimeAtType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[GrantTimeAtType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"When the grant hits in a period (Beginning = 0, End = 1)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'GrantTimeAtType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AdjustmentExceedCapAllowed].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines whether allow adjustment exceed cap is enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AdjustmentExceedCapAllowed';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetail].[AccrualCustomFreqType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Accrual custom frequency type (Days = 0, Weeks = 1, Pay Periods = 2, Months = 3)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetail', @level2type = N'COLUMN', @level2name = N'AccrualCustomFreqType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Seniority-based rule that defines the Accrual Amount, Max Negative, etc.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[TransferOverageAllowed].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether over cap is tranfered', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'TransferOverageAllowed';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[TransferOverageFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Over cap transfer factor', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'TransferOverageFactor';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[NegativeMaxSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Negative maximum that can be requested', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'NegativeMaxSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[ToMonth].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'To month', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'ToMonth';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[HoursToAccrueType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag which determines the hours to accrue type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'HoursToAccrueType';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[TimeOffPolicyDetailRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyDetailRuleID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[HoursToAccrue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hours to accrue', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'HoursToAccrue';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[TransferOverageToPayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Over cap transfer pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'TransferOverageToPayTypeID';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[AccrualCap].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cap on the max accrual', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'AccrualCap';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[FromMonth].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'From month', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'FromMonth';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[MaxCarryOverSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Maximum to carry over ro next year', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'MaxCarryOverSecs';


GO
PRINT N'Creating [dbo].[TimeOffPolicyDetailRule].[TimeOffPolicyDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Policy detail this rule belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffPolicyDetailRule', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyDetailID';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains individual Time Off Requests made by Employees. Contains a single, summarized entry for each request.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[TimeOffRequestID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'TimeOffRequestID';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User referece ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'PayType reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[TimeOffPolicyDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'TimeOffPolicy reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'TimeOffPolicyDetailID';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[DateTimeSubmitted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date at which time off request submitted', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'DateTimeSubmitted';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'StartDateTime of the time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'EndDateTime of the time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[IncludeWeekends].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether to include the weekends in time off request or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'IncludeWeekends';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[DurationPerDaySecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time off request duration per day stored in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'DurationPerDaySecs';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[StatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time off request status type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'StatusType';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[StatusChangedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'DateTime at which time off request has been changed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'StatusChangedOn';


GO
PRINT N'Creating [dbo].[TimeOffRequest].[EmpNotes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Employee notes for that time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequest', @level2type = N'COLUMN', @level2name = N'EmpNotes';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Individual entries for each day of a Time Off Request.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[TimeOffRequestDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'TimeOffRequestDetailID';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[TimeOffRequestID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'TimeOffRequest referenc ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'TimeOffRequestID';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'StartDateTime of the time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'EndDateTime of the time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[StatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time off request status type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'StatusType';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[StatusChangedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User who changed the time of request status', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'StatusChangedBy';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[StatusChangedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'DateTime at which time off request has been changed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'StatusChangedOn';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[MgrNotes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Manager notes for that time off request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'MgrNotes';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Related TimeSlicePreID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[TimeOffRequestDetail].[AutoResetQualifyByHoursWorked].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestDetail', @level2type = N'COLUMN', @level2name = N'AutoResetQualifyByHoursWorked';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Historic record of the actions performed by a Manager or Employee on a Time Off Request.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[TimeOffRequestHistoryID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'TimeOffRequestHistoryID';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[TimeOffRequestDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'TimeOffRequestDetail reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'TimeOffRequestDetailID';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[StatusType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time off request status type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'StatusType';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[StatusChangedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User who changed the time of request status', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'StatusChangedOn';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[StatusChangedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'DateTime at which time off request has been changed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'StatusChangedBy';


GO
PRINT N'Creating [dbo].[TimeOffRequestHistory].[Notes].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User notes entered on time off request status changed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeOffRequestHistory', @level2type = N'COLUMN', @level2name = N'Notes';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines column order settings for time sheet entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column5Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 5 value in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column5Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[ExpressEntryShiftsPerDay].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default number of shifts per day for Timesheet express entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'ExpressEntryShiftsPerDay';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column4Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 4 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column4Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column6Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 6 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column6Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column7Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 7 value in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column7Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column1Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 1 value in Timesheet entry screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column1Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column2Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 2 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column2Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column5Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 5 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column5Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[TimeSheetEntrySettingID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'TimeSheetEntrySettingID';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column4Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 4 value in Timesheet entry screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column4Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column6Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 6 value in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column6Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column7Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 7 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column7Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User referece ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[ShowAllLLs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Display all labor levels', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'ShowAllLLs';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column2Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 2 value in Timesheet entry screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column2Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column1Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 1 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column1Type';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column3Value].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 3 value in Timesheet entry screen', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column3Value';


GO
PRINT N'Creating [dbo].[TimeSheetEntrySetting].[Column3Type].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Column 3 type in Timesheet entry screen (Notes/LaborLevel)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetEntrySetting', @level2type = N'COLUMN', @level2name = N'Column3Type';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time sheet templates provided by an employee ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[TimeSheetTemplateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'TimeSheetTemplateID';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay type for the template entry shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[StartTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start time for the shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'StartTime';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[OrdinalPosition].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines the priority of the shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'OrdinalPosition';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[Duration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'duration of the shift for template entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'Duration';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[TimeSheetTemplate].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User referece ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSheetTemplate', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains paired, processed transactions with durations', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paytype of the slice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Id of the schedule this slice belongs to if any else 0', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ScheduleID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[EmpApprovedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch approved by employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'EmpApprovedOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSlicePreIDIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'TimeSlicePreID of the in punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSlicePreIDIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ActualDateTimeIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Actual date time of the in punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ActualDateTimeIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSheetSubmissionOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch created by timesheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSheetSubmissionOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ScheduleDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Id of the schedule detail this slice belongs to if any else 0', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ScheduleDetailID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[Mgr2ApprovedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch approved by second manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'Mgr2ApprovedOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrApprovedByOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 1 Approval of the Out Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrApprovedByOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[Mgr2ApprovedByIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 2 Approval of the In Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'Mgr2ApprovedByIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[CountTowardsHolidayMin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this slice counts towards the holiday qualifier', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'CountTowardsHolidayMin';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[AdminApprovedIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch approved by admin', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'AdminApprovedIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[UnpaidDurationSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unpaid duration in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'UnpaidDurationSecs';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[EmpNoteIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch employee note', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'EmpNoteIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[UTCDateTimeIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rounded UTC date time of the in punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'UTCDateTimeIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrApprovedByIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 1 Approval of the In Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrApprovedByIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TransactionTypeIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Transaction type of the in punch(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TransactionTypeIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MissingPunchTypeIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the missing in punch is any(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MissingPunchTypeIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TransactionSourceOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Transaction source of the out punch(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TransactionSourceOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[IsMealPremium].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Value will be true for shifts added as meal premium', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'IsMealPremium';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Charge rate for the slice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ChargeRate';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ActualDateTimeOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Actual date time of the out punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ActualDateTimeOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSlicePreIDOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'TimeSlicePreID of the out punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSlicePreIDOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[PayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay rate for the slice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'PayRate';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[RegDurationSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Regular duration in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'RegDurationSecs';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrApprovedIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch approved by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrApprovedIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[IsModifiedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch is modifier by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'IsModifiedOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TransactionSourceIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Transaction source of the in punch(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TransactionSourceIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[IsModifiedIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch is modifier by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'IsModifiedIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ApplyToOvertime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether this slice applied toeards overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ApplyToOvertime';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSlicePostID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSlicePostID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[AdminApprovedByIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Admin Approval of the In Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'AdminApprovedByIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[EmpNoteOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch employee note', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'EmpNoteOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[UTCDateTimeOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rounded UTC date time of the out punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'UTCDateTimeOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ApplyToDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The date this slice will be applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ApplyToDate';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[OTDurationSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overtime duration in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'OTDurationSecs';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[IsCanceled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether this slice is cancelled', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'IsCanceled';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[Mgr2ApprovedIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch approved by second manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'Mgr2ApprovedIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[Mgr2ApprovedByOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 2 Approval of the Out Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'Mgr2ApprovedByOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[PayLevelRateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The paytype rate this slice will be paid(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'PayLevelRateType';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrApprovedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch approved by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrApprovedOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrNoteOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch manager note', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrNoteOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[HasModifier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether this slice has a modifier applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'HasModifier';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User this slice belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TransactionTypeOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Transaction type of the out punch(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TransactionTypeOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MgrNoteIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch manager note', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MgrNoteIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[AdminApprovedByOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Admin Approval of the Out Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'AdminApprovedByOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[RoundedDateTimeOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rounded date time of the out punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'RoundedDateTimeOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[MissingPunchTypeOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the missing out punch is any(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'MissingPunchTypeOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[EmpApprovedIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch approved by employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'EmpApprovedIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSheetSubmissionIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'In punch created by timesheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSheetSubmissionIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TotalEarnings].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Total earnings for the slice', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TotalEarnings';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[HasShiftDiff].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If this slice has a shift diff applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'HasShiftDiff';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TotalPaidDurationSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paid duration in seconds', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TotalPaidDurationSecs';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[TimeSliceGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'A GUID indicating the shift group', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'TimeSliceGroupID';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[AdminApprovedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Out punch approved by admin', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'AdminApprovedOut';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[RoundedDateTimeIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rounded date time of the in punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'RoundedDateTimeIn';


GO
PRINT N'Creating [dbo].[TimeSlicePost].[ClosedType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the closing status(enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePost', @level2type = N'COLUMN', @level2name = N'ClosedType';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains exception details for a Time Slice Post record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UsedID of the employee to whom this data belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ScheduleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Schedule that created this exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ScheduleID';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[DateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date this exception belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'DateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ExceptionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ExceptionType';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Punch that created the exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[IsAcknowledged].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If its acknowledged by supervisor', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'IsAcknowledged';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[AcknowledgedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Manager who acknowledged the exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'AcknowledgedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[TransactionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of transaction', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'TransactionType';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ExceptionParameterSecs].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Parameneter value from exception rule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ExceptionParameterSecs';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[TimeSlicePostExceptionDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostExceptionDetailID';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[TimeSlicePostID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Slice this exception belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostID';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePostExceptionDetail].[ExceptionPolicyRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Exception rule that created this exception', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostExceptionDetail', @level2type = N'COLUMN', @level2name = N'ExceptionPolicyRuleID';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Overtime details for a TimeSlicePost record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[TimeSlicePostOvertimeDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostOvertimeDetailID';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[TimeSlicePostID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Slice this overtime belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostID';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[OvertimeRuleID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Rule that created this overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'OvertimeRuleID';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[RulePriority].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Priority of the rule in policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'RulePriority';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[RuleDurationDays].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Days in overtime calculation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'RuleDurationDays';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[OvertimePayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overtime pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'OvertimePayTypeID';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[OvertimePayTypeFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Overtime factor', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'OvertimePayTypeFactor';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time this overtime starts', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[Duration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration on overtime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'Duration';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePostOvertimeDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostOvertimeDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains Shift Differential details for a TimeSlicePost record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ShiftDiffFactor].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Factor from policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffFactor';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[TimeSlicePostID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Slice this shift diff belogs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostID';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ShiftDiffCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Code from policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffCode';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[Duration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Duration of shft diff', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'Duration';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ShiftDiffAdditional].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Additional from policy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffAdditional';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End time of the shift diff', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[EndDateTimeUTC].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'End time of the shift diff in UTC', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'EndDateTimeUTC';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[ShiftDiffDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Shift diff detail created this shift diff', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'ShiftDiffDetailID';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[StartDateTimeUTC].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start time of the shift diff in UTC', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'StartDateTimeUTC';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[TimeSlicePostShiftDiffDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'TimeSlicePostShiftDiffDetailID';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[FinalPayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Final pay rate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'FinalPayRate';


GO
PRINT N'Creating [dbo].[TimeSlicePostShiftDiffDetail].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start time of the shift diff', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePostShiftDiffDetail', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains actual transaction records', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee to whom this slice belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[MgrNote].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Note from manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'MgrNote';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[MgrApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If punch approved by manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'MgrApproved';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TransactionSource].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Source of the punch (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TransactionSource';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TransactionType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the punch (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TransactionType';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay type of the punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[EmpApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If punch approved by employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'EmpApproved';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[MgrApprovedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 1 Approval of the Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'MgrApprovedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[WebKioskTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Web kiosk terminal id from which entry got added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'WebKioskTerminalID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[ClosedType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of closing (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'ClosedType';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[AdminApproved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Admin approved the punch or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'AdminApproved';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TransactionDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time punch occured', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TransactionDateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[PayLevelRateType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Paying level of the punch (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'PayLevelRateType';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[Mgr2ApprovedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Manager 2 Approval of the Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'Mgr2ApprovedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[AdminApprovedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Who did the Admin Approval of the Punch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'AdminApprovedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[ApplyToDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date this punch applies to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'ApplyToDate';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[EmpNote].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Note from employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'EmpNote';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[ApplyToOvertimeType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether to apply towards overtime (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'ApplyToOvertimeType';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TransactionUTCDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time punch occured in UTC', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TransactionUTCDateTime';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[TimeSliceGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'GUID indicating the shift group', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'TimeSliceGroupID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[IsTimeSheetSubmission].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If punch was created from timesheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'IsTimeSheetSubmission';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[Latitude].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Punching location geographical latitude value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'Latitude';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[Longitude].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Punching location geographical longitude value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'Longitude';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[HardwareTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Hardware teminal created this puch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'HardwareTerminalID';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[IsMealPremium].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether this slice belongs to a meal premium shift', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'IsMealPremium';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[IsModified].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Is punch modified my manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'IsModified';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[Mgr2Approved].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Second manager approved the punch or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'Mgr2Approved';


GO
PRINT N'Creating [dbo].[TimeSlicePre].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Labor level info', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePre', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Modifiers attached to a TimeSlicePre record.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[TimeSlicePreModifierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'TimeSlicePreModifierID';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[TimeSlicePreID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s TimeSlicePreID in TimeSlicePre table - unique ID of the punch for which the modifer is added', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'TimeSlicePreID';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifierID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s ModifierID in Modifier table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifierID';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ApplyToDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date this modifier applies towards', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ApplyToDate';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[TimeSlicePostID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference''s TimeSlicePostID of TimeSlicePost table - unique of the shift to which this particualr modifier is applied', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'TimeSlicePostID';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[HashValue].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'hash calculated for DB update functionality', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'HashValue';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifierParam1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generic field whose value is based type of Modifier being applied. When ApplyShiftDifferential Modifier is applied this field holds ShiftDiffPolicyDetailID from ShiftDiffPolicyDetail table. When OverrideShiftDifferential Modifier is applied this field holds ShiftDiffDetailID from TimeSlicePostShiftDiffDetail table. When CanceShiftDifferentail Modifier is applied this field holds ShiftDiffDetailID from TimeSlicePostShiftDiffDetail table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifierParam1';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifierParam2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generic field whose value is based on the Modifier type being applied . When ApplyShiftDifferential modifier or CancelShiftDifferential modifier is applied this field has no value spceified. When OverrideShiftDifferential modifier is applied ShiftDiffPolicyDetailID from ShiftDiffPolicyDetail table.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifierParam2';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifierDateTime1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generic fielf whose value is based on type of modifier being applied. When ApplyShiftDifferential modifier is applied this field holds Date and time entered by user(shiftdiff starts on this time and will be a value within the shift). When OverrideShiftDifferential or CancelShiftDifferential modifiers are applied this field has no value specified.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifierDateTime1';


GO
PRINT N'Creating [dbo].[TimeSlicePreModifier].[ModifierDateTime2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Generic fielf whose value is based on type of modifier being applied. When ApplyShiftDifferential modifier is applied this field holds Date and time entered by user(shiftdiff ends on this time and will be a value within the shift). When OverrideShiftDifferential or CancelShiftDifferential modifiers are applied this field has no value specified.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'TimeSlicePreModifier', @level2type = N'COLUMN', @level2name = N'ModifierDateTime2';


GO
PRINT N'Creating [dbo].[UserGroup].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the records that specify Employee Groups.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup';


GO
PRINT N'Creating [dbo].[UserGroup].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[UserGroup].[UserGroupName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup', @level2type = N'COLUMN', @level2name = N'UserGroupName';


GO
PRINT N'Creating [dbo].[UserGroup].[UserGroupNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Employee Identifier - value is set to this field whenever an auto group is created', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup', @level2type = N'COLUMN', @level2name = N'UserGroupNumber';


GO
PRINT N'Creating [dbo].[UserGroup].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserGroup].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroup', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserGroupMember].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Membership relationship between users and Employee Groups', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember';


GO
PRINT N'Creating [dbo].[UserGroupMember].[UserGroupMemberID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember', @level2type = N'COLUMN', @level2name = N'UserGroupMemberID';


GO
PRINT N'Creating [dbo].[UserGroupMember].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference UserGroupID in UserGroup table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[UserGroupMember].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference UserID in UserInfo table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserGroupMember].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserGroupMember].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMember', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Managers of each Employee Group', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[UserGroupMgrID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'UserGroupMgrID';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference UserID field in UserInfo table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[UserGroupID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Refernec''s UserGroupID in the UserGroup table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'UserGroupID';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[StartDateManagement].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'StartDateManagement';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[EndDateManagement].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'EndDateManagement';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[MgrType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the manager acces i.e. Primary Mgr/Secodnay Mgr/Supervisor', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'MgrType';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[ReceiveTORNotification].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Manager receives timeoff request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'ReceiveTORNotification';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[CanAccessSubordinateGroup].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the manager can access employees down the hierarchy', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'CanAccessSubordinateGroup';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[CanAssignSubordinateMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Has permission to assign subordinate manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'CanAssignSubordinateMgr';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[CanAssignProxyMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Has permission to assign proxy manager', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'CanAssignProxyMgr';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserGroupMgr].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserGroupMgr', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfo].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Basic Employee Data and Settings', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo';


GO
PRINT N'Creating [dbo].[UserInfo].[Email].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Email ID of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Email';


GO
PRINT N'Creating [dbo].[UserInfo].[RestrictShortLunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether the employee is restricted to short lunch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'RestrictShortLunchEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[PasswordExpires].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Datetime when the password is going to expire', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'PasswordExpires';


GO
PRINT N'Creating [dbo].[UserInfo].[NonWorkTimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Can submit nonwork time sheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'NonWorkTimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[AlertEmail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Defines an email address to which mails reagrding the alerts genrated are sent', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'AlertEmail';


GO
PRINT N'Creating [dbo].[UserInfo].[TrackGeolocation].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to track geolocation of punches or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TrackGeolocation';


GO
PRINT N'Creating [dbo].[UserInfo].[EmpIdentifier].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Unique Employee Identifier', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'EmpIdentifier';


GO
PRINT N'Creating [dbo].[UserInfo].[Phone1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'first phone number employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Phone1';


GO
PRINT N'Creating [dbo].[UserInfo].[IPAccessPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference IPAccessPolicy.IPAccessPolicyID - identity id of the IPAccessPolicy to which the person is assigned', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'IPAccessPolicyID';


GO
PRINT N'Creating [dbo].[UserInfo].[SessionState].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The session restore information in JSON', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'SessionState';


GO
PRINT N'Creating [dbo].[UserInfo].[WebAccessEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether website access is enabled for employeee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WebAccessEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeCardLockedThru].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time card locked date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeCardLockedThru';


GO
PRINT N'Creating [dbo].[UserInfo].[WebKioskPunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determined whether web kiosk punch enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WebKioskPunchEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[Title].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Title', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Title';


GO
PRINT N'Creating [dbo].[UserInfo].[Badge].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Badge of Employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Badge';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeSheetDefaultPaid].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Use the default pay level for non-work hours added through employee dashboard time sheet entry 
(if false, it will be unpaid)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeSheetDefaultPaid';


GO
PRINT N'Creating [dbo].[UserInfo].[TrackAttendanceOnlyEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Track only clockin for the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TrackAttendanceOnlyEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[MiddleName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Middle Name of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'MiddleName';


GO
PRINT N'Creating [dbo].[UserInfo].[PostalCode].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Postal code of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'PostalCode';


GO
PRINT N'Creating [dbo].[UserInfo].[WorkTimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Can submit work time sheet', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WorkTimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[ResetPasswordLinkGeneratedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Datetime at which user requested for password reset', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'ResetPasswordLinkGeneratedOn';


GO
PRINT N'Creating [dbo].[UserInfo].[Address2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Address of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Address2';


GO
PRINT N'Creating [dbo].[UserInfo].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfo].[GovernmentID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Government ID of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'GovernmentID';


GO
PRINT N'Creating [dbo].[UserInfo].[DefaultClockIn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default clock-in time of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'DefaultClockIn';


GO
PRINT N'Creating [dbo].[UserInfo].[WebPunchingEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee can punch through website', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WebPunchingEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[PasswordAttempts].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Number of failed attempts to login', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'PasswordAttempts';


GO
PRINT N'Creating [dbo].[UserInfo].[AdditionalMonthsOfService].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Additional months of service for accrual', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'AdditionalMonthsOfService';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeCardClosedThru].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time card closed date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeCardClosedThru';


GO
PRINT N'Creating [dbo].[UserInfo].[City].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'City', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'City';


GO
PRINT N'Creating [dbo].[UserInfo].[QualForAccrualsByHrsWorked].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'QualForAccrualsByHrsWorked';


GO
PRINT N'Creating [dbo].[UserInfo].[Minutiae2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Second minutiate template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Minutiae2';


GO
PRINT N'Creating [dbo].[UserInfo].[Phone3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'third hphone number of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Phone3';


GO
PRINT N'Creating [dbo].[UserInfo].[PasswordPolicyID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Reference ""PasswordPolicyID"" field within ""PasswordPolicy"" table"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'PasswordPolicyID';


GO
PRINT N'Creating [dbo].[UserInfo].[StartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Start date of the employee (Always greater than eqaul to start date of the first active status)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'StartDate';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeSheetSubmitEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee can submit time sheets', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeSheetSubmitEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[ResetPasswordLink].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds Password reset URL querystring value', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'ResetPasswordLink';


GO
PRINT N'Creating [dbo].[UserInfo].[DisablePunchWithoutGeolocation].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to disable punching without geolocation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'DisablePunchWithoutGeolocation';


GO
PRINT N'Creating [dbo].[UserInfo].[LastLockedOut].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time when the user account has been locked due maximum number of invalid attempts allowed', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'LastLockedOut';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeZoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Time zone of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeZoneKey';


GO
PRINT N'Creating [dbo].[UserInfo].[FirstName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'First Name of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'FirstName';


GO
PRINT N'Creating [dbo].[UserInfo].[Address1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Address of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Address1';


GO
PRINT N'Creating [dbo].[UserInfo].[IsTopMostMgr].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether the person is at top of the heirarchy within the organisation', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'IsTopMostMgr';


GO
PRINT N'Creating [dbo].[UserInfo].[WebPassword].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Password of employee to login to site', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WebPassword';


GO
PRINT N'Creating [dbo].[UserInfo].[WebLogin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Website Login ID of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'WebLogin';


GO
PRINT N'Creating [dbo].[UserInfo].[MobileWebPunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether user is allowed to punch through mobile', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'MobileWebPunchEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[PreferenceID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference Preference.PreferenID - ID of the preference policy to which the person is assgined', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'PreferenceID';


GO
PRINT N'Creating [dbo].[UserInfo].[EnforceIPAccessOnMobileWeb].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to enforce IP access policies on mobile web', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'EnforceIPAccessOnMobileWeb';


GO
PRINT N'Creating [dbo].[UserInfo].[TelepunchPin].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pin used for telepunch', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TelepunchPin';


GO
PRINT N'Creating [dbo].[UserInfo].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfo].[AttendanceShiftLength].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default shift length of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'AttendanceShiftLength';


GO
PRINT N'Creating [dbo].[UserInfo].[RestrictToScheduleEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Whether the employee is restricted to schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'RestrictToScheduleEnabled';


GO
PRINT N'Creating [dbo].[UserInfo].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfo].[State].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'State', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'State';


GO
PRINT N'Creating [dbo].[UserInfo].[Phone2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'second phone number employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Phone2';


GO
PRINT N'Creating [dbo].[UserInfo].[SpecialMinutiae].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Has special minutiae', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'SpecialMinutiae';


GO
PRINT N'Creating [dbo].[UserInfo].[LastName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last Name of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'LastName';


GO
PRINT N'Creating [dbo].[UserInfo].[Minutiae1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'First minutiae template', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'Minutiae1';


GO
PRINT N'Creating [dbo].[UserInfo].[TimeOffStartDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'The accrual start date of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'TimeOffStartDate';


GO
PRINT N'Creating [dbo].[UserInfo].[SSOLoginOnly].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If true, user can access the system only through SSO.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfo', @level2type = N'COLUMN', @level2name = N'SSOLoginOnly';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Historic record of each user''s Charge Rate', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[UserInfoChargeRateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'UserInfoChargeRateID';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[ChargeRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Charge rate of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'ChargeRate';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoChargeRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoChargeRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Historic record of the employee''s employment status.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[UserInfoEmpStatusID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'UserInfoEmpStatusID';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'UserID of the employee to whom this record belongs (EntityID)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[EmpStatus].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'"Status of the employee (Inactive = 0, Active = 1, Leave of Absence = 2, FMLA = 3 and Terminated = 4)"', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'EmpStatus';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoEmpStatus].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoEmpStatus', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains the Override duration for an employee''s holiday settings.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[UserInfoHolDurationOverrideID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'UserInfoHolDurationOverrideID';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[WorkedHolDuration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'WorkedHolDuration';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[NonWorkedHolDuration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'NonWorkedHolDuration';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoHolDurationOverride].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoHolDurationOverride', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Historic record of each user''s Overtime exemption status.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[UserInfoIsExemptID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'UserInfoIsExemptID';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'References UserID field within UserInfo table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[IsExempt].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines exempt status (Exempt or Non-exempt) of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'IsExempt';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoIsExempt].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsExempt', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Historic record of each user''s hourly/salary status.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[UserInfoIsSalaryID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'UserInfoIsSalaryID';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Referenc''s UserID field within UserInfo table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[IsSalary].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines salary type (Hourly or Salary) of employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'IsSalary';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoIsSalary].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoIsSalary', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit log of all login events.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User ID of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[CustomerSiteAccessLogID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'If the session was created by brandmanager the log id from site access table', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'CustomerSiteAccessLogID';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[MiddleName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Middle name of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'MiddleName';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[UserTimeZone].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Timezone of the user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'UserTimeZone';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[UserIP].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'IP address from the user logged in', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'UserIP';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[DateTimeServer].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time in server', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'DateTimeServer';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[LastName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last name of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'LastName';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[FirstName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'First name of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'FirstName';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[TokenSourceType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Source type this token create from (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'TokenSourceType';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[Culture].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Language', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'Culture';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[DateTimeUser].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time in User timezone', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'DateTimeUser';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[LoginServer].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Server used to login', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'LoginServer';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[UserInfoLoginDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'UserInfoLoginDetailID';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[DateTimeUTC].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Date and time in UTC', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'DateTimeUTC';


GO
PRINT N'Creating [dbo].[UserInfoLoginDetail].[UserType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Type of the user (enum)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoLoginDetail', @level2type = N'COLUMN', @level2name = N'UserType';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[UserInfoNonWorkPayRateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'UserInfoNonWorkPayRateID';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Entity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[PayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Override pay rate for non work hours of this user', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'PayRate';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[PayTypeID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to the PayTypeID of the non work pay type', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'PayTypeID';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[UserInfoNonWorkPayRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoNonWorkPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains historic pay rate data for each user.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[UserInfoPayRateID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'UserInfoPayRateID';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User this payrate belongs to', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[PayRate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Pay rate of the employee', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'PayRate';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[UserInfoPayRate].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'UserInfoPayRate', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[Versions].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Contains a historic log of database versions that have been applied to this customer.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Versions';


GO
PRINT N'Creating [dbo].[Versions].[VersionID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Versions', @level2type = N'COLUMN', @level2name = N'VersionID';


GO
PRINT N'Creating [dbo].[Versions].[VersionNumber].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Version Number', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Versions', @level2type = N'COLUMN', @level2name = N'VersionNumber';


GO
PRINT N'Creating [dbo].[Versions].[VersionDate].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Version date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'Versions', @level2type = N'COLUMN', @level2name = N'VersionDate';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLPromptOnEndLunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on End Lunch.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnEndLunchEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[AllowTimeOffRequestEntries].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Time Off Request', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'AllowTimeOffRequestEntries';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID2].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID2';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[AllowPayAdjustmentEntry].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Pay Adjustments', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'AllowPayAdjustmentEntry';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Recent modified date', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LastRefreshDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Last refresh date time of the terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LastRefreshDateTime';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[VerificationIDType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines type of ID used for verification (Values: Badge Number and Employee Number)', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'VerificationIDType';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID4].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID4';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[AllowTimeTimeCardEntries].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow Time Card Entry', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'AllowTimeTimeCardEntries';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID8].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID8';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID5].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID5';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[AllowViewSchedule].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Flag to allow View Schedule', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'AllowViewSchedule';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID12].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID12';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLPromptOnClockInEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on End Lunch.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnClockInEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID10].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID10';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID14].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID14';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID3].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID3';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[PunchScreenType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether punch screen type is swipe and go or punch pad', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'PunchScreenType';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[BreakEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether break enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'BreakEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[TransferEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether lunch enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'TransferEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLPromptOnPayAdjustmentEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on Pay Adjustment.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnPayAdjustmentEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[IsDeleted].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines if policy is active or inactive', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'IsDeleted';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID13].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID13';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[WebKioskTerminalName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Web Kiosk Terminal Name', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'WebKioskTerminalName';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID7].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID7';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID9].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID9';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID15].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID15';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'User who recently modified', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLPromptOnTransferEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on Transfer.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnTransferEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[EmpPasswordRequiredEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether employee password is required while punching using kiosk terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'EmpPasswordRequiredEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[TimeZoneKey].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Timezone for this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'TimeZoneKey';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID1].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID1';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID11].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID11';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LunchEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether lunch enabled or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LunchEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLDetailID6].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Default Labor Level Detail ID for punches registered at this terminal', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLDetailID6';


GO
PRINT N'Creating [dbo].[WebKioskTerminal].[LLPromptOnEndBreakEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines whether to show labor level prompt on End Break.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminal', @level2type = N'COLUMN', @level2name = N'LLPromptOnEndBreakEnabled';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[WebKioskTerminalPromptID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'WebKioskTerminalPromptID';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[WebKioskTerminalID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to KioskTerminal.KioskTerminalID of the terminal to which this record belongs', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'WebKioskTerminalID';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[LLID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'LL Prompt Text', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'LLID';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[PromptText].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Text to be dispalyed when prompting', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'PromptText';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[WebKioskTerminalPrompt].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WebKioskTerminalPrompt', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cotains entries for messages to be displayed when a person log-in for first time and will be displayed again will its not disabled for future', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[WelcomeMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'WelcomeMessageID';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[MessageType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds the type of message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'MessageType';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[WelcomeMessageTitle].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds title for the welcome message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'WelcomeMessageTitle';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[WelcomeMessageBody].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds actual welcome message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'WelcomeMessageBody';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[StartDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective start date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'StartDateTime';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[EndDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Effective end date - Used for effective dating', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'EndDateTime';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[IncludeAllEmployeesEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether welcome message for all users in the system or selected users', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'IncludeAllEmployeesEnabled';


GO
PRINT N'Creating [dbo].[WelcomeMessage].[AcknowledgeMessageEnabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Determines to enable the acknowledge the welcome message or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessage', @level2type = N'COLUMN', @level2name = N'AcknowledgeMessageEnabled';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Cotains the messages assigned to users and info regarding when a user viewed the message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[WelcomeMessageDetailID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity / Entity ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'WelcomeMessageDetailID';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[WelcomeMessageID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Welcome message reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'WelcomeMessageID';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[UserID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Assigned user reference ID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'UserID';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[DisplayMessageDisabled].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Decides whether welcome message should  be display again or not', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'DisplayMessageDisabled';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[DateFirstViewed].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds welcome message first viewed datetime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'DateFirstViewed';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[WelcomeMessageDetail].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WelcomeMessageDetail', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Configuration data for Workday integration', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[HumanResourcesURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'HumanResourcesURL';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[AbsenceManagementURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'AbsenceManagementURL';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[UserName].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'UserName';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[PayrollURL].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'PayrollURL';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[ModifiedOn].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - Date/time the record was created or last updated', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'ModifiedOn';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[Password].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'Password';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[ModifiedBy].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Audit trail info - UserID of the person that modified the record', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'ModifiedBy';


GO
PRINT N'Creating [dbo].[WorkdayIntegration].[Tenant].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WorkdayIntegration', @level2type = N'COLUMN', @level2name = N'Tenant';


GO
PRINT N'Creating [dbo].[WSLog].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Errors from Web Service calls. Also contains more specfic error messages and details specific to Web Services.', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog';


GO
PRINT N'Creating [dbo].[WSLog].[ID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Identity field', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog', @level2type = N'COLUMN', @level2name = N'ID';


GO
PRINT N'Creating [dbo].[WSLog].[LogEntryDateTime].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Log entry datetime', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog', @level2type = N'COLUMN', @level2name = N'LogEntryDateTime';


GO
PRINT N'Creating [dbo].[WSLog].[LogMessage].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds warning/error message description of webservice activity', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog', @level2type = N'COLUMN', @level2name = N'LogMessage';


GO
PRINT N'Creating [dbo].[WSLog].[LogType].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Holds type of message', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog', @level2type = N'COLUMN', @level2name = N'LogType';


GO
PRINT N'Creating [dbo].[WSLog].[ErrorLogID].[MS_Description]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Reference to system ErrorLogID', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'WSLog', @level2type = N'COLUMN', @level2name = N'ErrorLogID';


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'abdec68c-c46d-4e76-9b35-6431f573ddec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('abdec68c-c46d-4e76-9b35-6431f573ddec')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/


/****** Object:  Table [dbo].[PayAdjustmentCode]    Script Date: 4/9/2015 10:47:56 AM ******/

IF OBJECT_ID('dbo.PayAdjustmentCode', 'U') IS NOT NULL
  DROP TABLE dbo.PayAdjustmentCode; 
/*
This script inserts the minimal data into the ApacheSchema database to get an installation runnning.

No insert is done unless the table is completely empty. The data is intended for a new, clean, initial publish.
*/


/* Insert minimal general configuration data */
IF NOT EXISTS (
	SELECT 1 FROM dbo.[GeneralConfiguration])
	BEGIN

INSERT INTO [dbo].[GeneralConfiguration]
		   ([AdminPassword]
		   ,[LLLabel]
		   ,[LLsLabel]
		   ,[GovernmentIDLabel]
		   ,[HideAutoLunch]
		   ,[AdminPasswordExpires]
		   --,[AdminPasswordAttempts]
		   --,[AdminLastLockedOut]
		   ,[AdminTimezoneKey]
		   ,[ClockPIN]
		   ,[AllowMissingPunchApprovals]
		   ,[EnableGovernmentID]
		   ,[CompanyName]
		   ,[CompanyAddress]
		   ,[City]
		   ,[State]
		   ,[ZipCode]
		   ,[Phone]
		   ,[Fax]
		   --,[CustomerLogoFilename]
		   --,[CustomerLogo]
		   --,[CustomerLogoTemp]
		   ,[EnableEmpGroupHierarchy]
		   ,[CanAccessSubordinateGroup]
		   ,[CanAssignSubordinateMgr]
		   ,[CanAssignProxyMgr]
		   ,[EnableEmailImportLog]
		   ,[ScheduleGenerateForDays]
		   ,[BillingMinBaseEnabled]
		   ,[BillingMinBaseCount]
		   ,[BillingTierEnabled]
		   ,[BillingSalesAssociateID]
		   ,[BillingCommisionRate]
		   --,[BillingCommisionStart]
		   --,[BillingCommisionEnd]
		   --,[BillingClockRentalRate]
		   --,[BillingDedicatedLineQuantity]
		   --,[BillingDedicatedLineRate]
		   --,[BillingPONumber]
		   --,[BillingIndustry]
		   --,[BillingBillTo]
		   --,[BillingClockCount]
		   --,[BillingTermsType]
		   --,[BillingComments]
		   --,[BillingMobileAccessRequired]
		   --,[ModifiedBy]
		   --,[ModifiedOn]
		   --,[TimeCardMgrApprovalLevelType]
		   --,[WSEnabled]
		   --,[WSSharedKey]
		   --,[WSUserPassword]
		   --,[FATID]
		   --,[SSOEnabled]
		   --,[SSOSharedKey]
		   --,[SSOLoginOnly]
		   --,[TOREmailToAdminEnabled]
		   --,[SSOSAMLBinding]
		   --,[SSOSAMLSignOnURL]
		   --,[SSOSAMLRedirectURL]
		   --,[SSOSAMLX509Cert]
		   --,[BillingType]
		   --,[LLID]
		   --,[UserGroupNameType]
		   --,[UseMgrName]
		   --,[HardwareClientVersion]
		   --,[HardwareClientURL]
		   --,[ImpliedHierarchyEnabled]
		   --,[ShowAllRatesAsHourly]
		   --,[WebKioskPin]
		   --,[ImportMgrAssignmentDisabled]
		   --,[AllowSecondMgrApproveAsMgr1]
		   --,[RemoveEmpApprovalsOnMgrEdit]
		   )
	 VALUES
		   (
		   'yVrkyHgyuvEQBOiEG4YJVyjoHho=' --<AdminPassword, nvarchar(max),>
		   ,'Labor Level' --<LLLabel, nvarchar(50),>
		   ,'Labor Levels' --<LLsLabel, nvarchar(50),>
		   ,'SSN' --<GovernmentIDLabel, nvarchar(50),>
		   ,0 --<HideAutoLunch, bit,>
		   ,'9999-01-01 00:00:00.000' --<AdminPasswordExpires, datetime,>
		   --,<AdminPasswordAttempts, int,>
		   --,<AdminLastLockedOut, datetime,>
		   ,'Eastern Standard Time' --<AdminTimezoneKey, nvarchar(50),>
		   ,'1234567' --<ClockPIN, nvarchar(50),>
		   ,1 --<AllowMissingPunchApprovals, bit,>
		   ,1 --<EnableGovernmentID, bit,>
		   ,'Company Name' --<CompanyName, nvarchar(50),>
		   ,'123 Anywhere St' --<CompanyAddress, nvarchar(50),>
		   ,'Somewhere' --<City, nvarchar(50),>
		   ,'AZ' --<State, nvarchar(50),>
		   ,'85250' --<ZipCode, nvarchar(150),>
		   ,'480-555-1212' --<Phone, nvarchar(50),>
		   ,'480-555-1111' --<Fax, nvarchar(50),>
		   --,<CustomerLogoFilename, nvarchar(100),>
		   --,<CustomerLogo, image,>
		   --,<CustomerLogoTemp, image,>
		   ,1 --<EnableEmpGroupHierarchy, bit,>
		   ,1 --<CanAccessSubordinateGroup, bit,>
		   ,1 --<CanAssignSubordinateMgr, bit,>
		   ,1 --<CanAssignProxyMgr, bit,>
		   ,0 --<EnableEmailImportLog, bit,>
		   ,7 --<ScheduleGenerateForDays, int,>
		   ,0 --<BillingMinBaseEnabled, bit,>
		   ,0 --<BillingMinBaseCount, int,>
		   ,0 --<BillingTierEnabled, bit,>
		   ,0 --<BillingSalesAssociateID, int,>
		   ,0.00 --<BillingCommisionRate, money,>
		   --,<BillingCommisionStart, datetime,>
		   --,<BillingCommisionEnd, datetime,>
		   --,<BillingClockRentalRate, money,>
		   --,<BillingDedicatedLineQuantity, int,>
		   --,<BillingDedicatedLineRate, money,>
		   --,<BillingPONumber, nvarchar(100),>
		   --,<BillingIndustry, nvarchar(100),>
		   --,<BillingBillTo, nvarchar(100),>
		   --,<BillingClockCount, int,>
		   --,<BillingTermsType, int,>
		   --,<BillingComments, nvarchar(1000),>
		   --,<BillingMobileAccessRequired, bit,>
		   --,<ModifiedBy, int,>
		   --,<ModifiedOn, datetime,>
		   --,<TimeCardMgrApprovalLevelType, int,>
		   --,<WSEnabled, bit,>
		   --,<WSSharedKey, varchar(255),>
		   --,<WSUserPassword, varchar(255),>
		   --,<FATID, int,>
		   --,<SSOEnabled, bit,>
		   --,<SSOSharedKey, varchar(255),>
		   --,<SSOLoginOnly, bit,>
		   --,<TOREmailToAdminEnabled, bit,>
		   --,<SSOSAMLBinding, nvarchar(100),>
		   --,<SSOSAMLSignOnURL, nvarchar(255),>
		   --,<SSOSAMLRedirectURL, nvarchar(255),>
		   --,<SSOSAMLX509Cert, text,>
		   --,<BillingType, int,>
		   --,<LLID, int,>
		   --,<UserGroupNameType, int,>
		   --,<UseMgrName, bit,>
		   --,<HardwareClientVersion, nvarchar(50),>
		   --,<HardwareClientURL, nvarchar(255),>
		   --,<ImpliedHierarchyEnabled, bit,>
		   --,<ShowAllRatesAsHourly, bit,>
		   --,<WebKioskPin, nvarchar(50),>
		   --,<ImportMgrAssignmentDisabled, bit,>
		   --,<AllowSecondMgrApproveAsMgr1, bit,>
		   --,<RemoveEmpApprovalsOnMgrEdit, bit,>
		   )
	END
GO





GO

GO
PRINT N'Update complete.';


GO
