# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: NuGetToolInstaller@1
  inputs:
    versionSpec: 
    checkLatest: true

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**\*.sln'

- task: VSBuild@1
  inputs:
    solution: '**\*.sln'
    platform: 'any CPU'
    configuration: '$(BuildConfiguration)'
                      
- task: VSTest@2
  inputs:
    configuration: '$(buildConfiguration)'
    testSelector: 'testAssemblies'
    testAssemblyVer2: |
      **\*UnitTest.dll
      !**\*Dependent.UnitTest.dll
      !**\obj\*
    searchFolder: '$(System.DefaultWorkingDirectory)'
    codeCoverageEnabled: true
    


- task: PublishCodeCoverageResults@1
  condition: succeededOrFailed()
  inputs:

    codeCoverageTool: 'cobertura' 
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/TestResults/**/*.coverage'

- task: WhiteSource Bolt@19
  condition: succeededOrFailed()
  inputs:
    cwd: '$(System.DefaultWorkingDirectory)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'src/bin/$(BuildConfiguration)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: 'SqlBuildManager-$(Build.BuildNumber).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: 'SqlBuildManager-$(Build.BuildNumber).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'

