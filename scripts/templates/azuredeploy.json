{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.63.48766",
      "templateHash": "9019552042372988249"
    }
  },
  "parameters": {
    "namePrefix": {
      "type": "string",
      "defaultValue": "eztmwm",
      "metadata": {
        "description": "Prefix to prepend to account names"
      }
    },
    "eventhubSku": {
      "type": "string",
      "defaultValue": "Standard",
      "metadata": {
        "description": "The messaging tier for service Bus namespace"
      },
      "allowedValues": [
        "Basic",
        "Standard"
      ]
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "MessagingUnits for premium namespace"
      },
      "allowedValues": [
        1,
        2,
        4
      ]
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }
  },
  "functions": [],
  "variables": {
    "batchAccountName_var": "[format('{0}batchacct', parameters('namePrefix'))]",
    "storageAccountName_var": "[format('{0}storage', parameters('namePrefix'))]",
    "namespaceName_var": "[format('{0}eventhubnamespace', parameters('namePrefix'))]",
    "eventHubName": "[format('{0}eventhub', parameters('namePrefix'))]",
    "serviceBusName_var": "[format('{0}servicebus', parameters('namePrefix'))]",
    "keyvaultName_var": "[format('{0}keyvault', parameters('namePrefix'))]",
    "identityName_var": "[format('{0}identity', parameters('namePrefix'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2018-07-01",
      "name": "[variables('storageAccountName_var')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": false,
        "encryption": {
          "services": {
            "file": {
              "enabled": true
            },
            "blob": {
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Batch/batchAccounts",
      "apiVersion": "2017-09-01",
      "name": "[variables('batchAccountName_var')]",
      "location": "[parameters('location')]",
      "properties": {
        "autoStorage": {
          "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var'))]"
        },
        "poolAllocationMode": "BatchService"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName_var'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2017-04-01",
      "name": "[variables('namespaceName_var')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('eventhubSku')]",
        "tier": "[parameters('eventhubSku')]",
        "capacity": "[parameters('skuCapacity')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/{1}', variables('namespaceName_var'), variables('eventHubName'))]",
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": 5,
        "status": "Active"
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName_var'))]"
      ]
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/batchbuilder', format('{0}/{1}', variables('namespaceName_var'), variables('eventHubName')))]",
      "properties": {
        "rights": [
          "Listen",
          "Send"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName_var'))]",
        "[resourceId('Microsoft.EventHub/namespaces/eventhubs', split(format('{0}/{1}', variables('namespaceName_var'), variables('eventHubName')), '/')[0], split(format('{0}/{1}', variables('namespaceName_var'), variables('eventHubName')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2018-01-01-preview",
      "name": "[variables('serviceBusName_var')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "zoneRedundant": false
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/AuthorizationRules",
      "apiVersion": "2017-04-01",
      "name": "[format('{0}/RootManageSharedAccessKey', variables('serviceBusName_var'))]",
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName_var'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "apiVersion": "2018-01-01-preview",
      "name": "[format('{0}/sqlbuildmanager', variables('serviceBusName_var'))]",
      "properties": {
        "defaultMessageTimeToLive": "P14D",
        "maxSizeInMegabytes": 4096,
        "requiresDuplicateDetection": false,
        "duplicateDetectionHistoryTimeWindow": "PT10M",
        "enableBatchedOperations": true,
        "status": "Active",
        "supportOrdering": true,
        "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
        "enablePartitioning": true,
        "enableExpress": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName_var'))]"
      ]
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics/authorizationRules",
      "apiVersion": "2018-01-01-preview",
      "name": "[format('{0}/sbmtopicpolicy', format('{0}/sqlbuildmanager', variables('serviceBusName_var')))]",
      "properties": {
        "rights": [
          "Manage",
          "Listen",
          "Send"
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusName_var'))]",
        "[resourceId('Microsoft.ServiceBus/namespaces/topics', split(format('{0}/sqlbuildmanager', variables('serviceBusName_var')), '/')[0], split(format('{0}/sqlbuildmanager', variables('serviceBusName_var')), '/')[1])]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('keyvaultName_var')]",
      "location": "[parameters('location')]",
      "properties": {
        "enabledForTemplateDeployment": true,
        "enableRbacAuthorization": false,
        "tenantId": "[subscription().tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName_var'))).clientId]",
            "permissions": {
              "secrets": [
                "set",
                "list",
                "get"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('identityName_var'))]"
      ]
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2018-11-30",
      "name": "[variables('identityName_var')]",
      "location": "[parameters('location')]"
    }
  ]
}